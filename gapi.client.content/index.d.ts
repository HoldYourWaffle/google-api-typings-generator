// Type definitions for non-npm package Content API for Shopping v2.1 2.1
// Project: https://developers.google.com/shopping-content
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://www.googleapis.com/discovery/v1/apis/content/v2.1/rest
// Revision: 20200205

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Content API for Shopping v2.1 */
    function load(name: "content", version: "v2.1"): PromiseLike<void>;
    function load(name: "content", version: "v2.1", callback: () => any): void;

    namespace content {
        interface Account {
            /**
             * List of linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status active to the list. It will
             * remain in a pending state until approved or rejected either in the Ads interface or through the AdWords API. To delete an active link, or to cancel a
             * link request, remove it from the list.
             */
            adsLinks?: AccountAdsLink[];
            /** Indicates whether the merchant sells adult content. */
            adultContent?: boolean;
            /** The business information of the account. */
            businessInformation?: AccountBusinessInformation;
            /** The GMB account which is linked or in the process of being linked with the Merchant Center account. */
            googleMyBusinessLink?: AccountGoogleMyBusinessLink;
            /** Merchant Center account ID. */
            id?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#account". */
            kind?: string;
            /** Display name for the account. */
            name?: string;
            /** Client-specific, locally-unique, internal ID for the child account. */
            sellerId?: string;
            /** Users with access to the account. Every account (except for subaccounts) must have at least one admin user. */
            users?: AccountUser[];
            /** The merchant's website. */
            websiteUrl?: string;
            /**
             * List of linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status active to the list. It
             * will remain in a pending state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request,
             * remove it from the list.
             */
            youtubeChannelLinks?: AccountYouTubeChannelLink[];
        }
        interface AccountAddress {
            /** CLDR country code (e.g. "US"). */
            country?: string;
            /** City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs). */
            locality?: string;
            /** Postal code or ZIP (e.g. "94043"). */
            postalCode?: string;
            /** Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC"). */
            region?: string;
            /** Street-level part of the address. */
            streetAddress?: string;
        }
        interface AccountAdsLink {
            /** Customer ID of the Ads account. */
            adsId?: string;
            /**
             * Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be
             * either active if it was approved in Google Ads or pending if it's pending approval. Upon insertion, it represents the intended status of the link.
             * Re-uploading a link with status active when it's still pending or with status pending when it's already active will have no effect: the status will
             * remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if it
             * was active or cancel the link request if it was pending.
             */
            status?: string;
        }
        interface AccountBusinessInformation {
            /** The address of the business. */
            address?: AccountAddress;
            /** The customer service information of the business. */
            customerService?: AccountCustomerService;
            /** The phone number of the business. */
            phoneNumber?: string;
        }
        interface AccountCustomerService {
            /** Customer service email. */
            email?: string;
            /** Customer service phone number. */
            phoneNumber?: string;
            /** Customer service URL. */
            url?: string;
        }
        interface AccountGoogleMyBusinessLink {
            /**
             * The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of
             * locations, managed under the GMB account.
             */
            gmbEmail?: string;
            /** Status of the link between this Merchant Center account and the GMB account. */
            status?: string;
        }
        interface AccountIdentifier {
            /** The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount). */
            aggregatorId?: string;
            /** The merchant account ID, set for individual accounts and subaccounts. */
            merchantId?: string;
        }
        interface AccountsAuthInfoResponse {
            /**
             * The account identifiers corresponding to the authenticated user.
             * - For an individual account: only the merchant ID is defined
             * - For an aggregator: only the aggregator ID is defined
             * - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined.
             */
            accountIdentifiers?: AccountIdentifier[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountsAuthInfoResponse". */
            kind?: string;
        }
        interface AccountsClaimWebsiteResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountsClaimWebsiteResponse". */
            kind?: string;
        }
        interface AccountsCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: AccountsCustomBatchRequestEntry[];
        }
        interface AccountsCustomBatchRequestEntry {
            /** The account to create or update. Only defined if the method is insert or update. */
            account?: Account;
            /** The ID of the targeted account. Only defined if the method is not insert. */
            accountId?: string;
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** Whether the account should be deleted if the account has offers. Only applicable if the method is delete. */
            force?: boolean;
            /** Details about the link request. */
            linkRequest?: AccountsCustomBatchRequestEntryLinkRequest;
            /** The ID of the managing account. */
            merchantId?: string;
            /** The method of the batch entry. */
            method?: string;
            /** Only applicable if the method is claimwebsite. Indicates whether or not to take the claim from another account in case there is a conflict. */
            overwrite?: boolean;
        }
        interface AccountsCustomBatchRequestEntryLinkRequest {
            /** Action to perform for this link. The "request" action is only available to select merchants. */
            action?: string;
            /** The ID of the linked account. */
            linkedAccountId?: string;
            /** Type of the link between the two accounts. */
            linkType?: string;
            /** List of provided services. */
            services?: string[];
        }
        interface AccountsCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: AccountsCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountsCustomBatchResponse". */
            kind?: string;
        }
        interface AccountsCustomBatchResponseEntry {
            /** The retrieved, created, or updated account. Not defined if the method was delete, claimwebsite or link. */
            account?: Account;
            /** The ID of the request entry this entry responds to. */
            batchId?: number;
            /** A list of errors defined if and only if the request failed. */
            errors?: Errors;
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountsCustomBatchResponseEntry". */
            kind?: string;
        }
        interface AccountsLinkRequest {
            /** Action to perform for this link. The "request" action is only available to select merchants. */
            action?: string;
            /** The ID of the linked account. */
            linkedAccountId?: string;
            /** Type of the link between the two accounts. */
            linkType?: string;
            /** List of provided services. */
            services?: string[];
        }
        interface AccountsLinkResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountsLinkResponse". */
            kind?: string;
        }
        interface AccountsListLinksResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountsListLinksResponse". */
            kind?: string;
            /** The list of available links. */
            links?: LinkedAccount[];
            /** The token for the retrieval of the next page of links. */
            nextPageToken?: string;
        }
        interface AccountsListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountsListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of accounts. */
            nextPageToken?: string;
            resources?: Account[];
        }
        interface AccountStatus {
            /** The ID of the account for which the status is reported. */
            accountId?: string;
            /** A list of account level issues. */
            accountLevelIssues?: AccountStatusAccountLevelIssue[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountStatus". */
            kind?: string;
            /** List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes. */
            products?: AccountStatusProducts[];
            /** Whether the account's website is claimed or not. */
            websiteClaimed?: boolean;
        }
        interface AccountStatusAccountLevelIssue {
            /** Country for which this issue is reported. */
            country?: string;
            /** The destination the issue applies to. */
            destination?: string;
            /** Additional details about the issue. */
            detail?: string;
            /** The URL of a web page to help resolving this issue. */
            documentation?: string;
            /** Issue identifier. */
            id?: string;
            /** Severity of the issue. */
            severity?: string;
            /** Short description of the issue. */
            title?: string;
        }
        interface AccountstatusesCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: AccountstatusesCustomBatchRequestEntry[];
        }
        interface AccountstatusesCustomBatchRequestEntry {
            /** The ID of the (sub-)account whose status to get. */
            accountId?: string;
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. */
            destinations?: string[];
            /** The ID of the managing account. */
            merchantId?: string;
            /** The method (get). */
            method?: string;
        }
        interface AccountstatusesCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: AccountstatusesCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountstatusesCustomBatchResponse". */
            kind?: string;
        }
        interface AccountstatusesCustomBatchResponseEntry {
            /** The requested account status. Defined if and only if the request was successful. */
            accountStatus?: AccountStatus;
            /** The ID of the request entry this entry responds to. */
            batchId?: number;
            /** A list of errors defined if and only if the request failed. */
            errors?: Errors;
        }
        interface AccountstatusesListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountstatusesListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of account statuses. */
            nextPageToken?: string;
            resources?: AccountStatus[];
        }
        interface AccountStatusItemLevelIssue {
            /** The attribute's name, if the issue is caused by a single attribute. */
            attributeName?: string;
            /** The error code of the issue. */
            code?: string;
            /** A short issue description in English. */
            description?: string;
            /** A detailed issue description in English. */
            detail?: string;
            /** The URL of a web page to help with resolving this issue. */
            documentation?: string;
            /** Number of items with this issue. */
            numItems?: string;
            /** Whether the issue can be resolved by the merchant. */
            resolution?: string;
            /** How this issue affects serving of the offer. */
            servability?: string;
        }
        interface AccountStatusProducts {
            /** The channel the data applies to. */
            channel?: string;
            /** The country the data applies to. */
            country?: string;
            /** The destination the data applies to. */
            destination?: string;
            /** List of item-level issues. */
            itemLevelIssues?: AccountStatusItemLevelIssue[];
            /** Aggregated product statistics. */
            statistics?: AccountStatusStatistics;
        }
        interface AccountStatusStatistics {
            /** Number of active offers. */
            active?: string;
            /** Number of disapproved offers. */
            disapproved?: string;
            /** Number of expiring offers. */
            expiring?: string;
            /** Number of pending offers. */
            pending?: string;
        }
        interface AccountTax {
            /** The ID of the account to which these account tax settings belong. */
            accountId?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#accountTax". */
            kind?: string;
            /** Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all. */
            rules?: AccountTaxTaxRule[];
        }
        interface AccounttaxCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: AccounttaxCustomBatchRequestEntry[];
        }
        interface AccounttaxCustomBatchRequestEntry {
            /** The ID of the account for which to get/update account tax settings. */
            accountId?: string;
            /** The account tax settings to update. Only defined if the method is update. */
            accountTax?: AccountTax;
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** The ID of the managing account. */
            merchantId?: string;
            method?: string;
        }
        interface AccounttaxCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: AccounttaxCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#accounttaxCustomBatchResponse". */
            kind?: string;
        }
        interface AccounttaxCustomBatchResponseEntry {
            /** The retrieved or updated account tax settings. */
            accountTax?: AccountTax;
            /** The ID of the request entry this entry responds to. */
            batchId?: number;
            /** A list of errors defined if and only if the request failed. */
            errors?: Errors;
            /** Identifies what kind of resource this is. Value: the fixed string "content#accounttaxCustomBatchResponseEntry". */
            kind?: string;
        }
        interface AccounttaxListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#accounttaxListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of account tax settings. */
            nextPageToken?: string;
            resources?: AccountTax[];
        }
        interface AccountTaxTaxRule {
            /** Country code in which tax is applicable. */
            country?: string;
            /** State (or province) is which the tax is applicable, described by its location ID (also called criteria ID). */
            locationId?: string;
            /** Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative. */
            ratePercent?: string;
            /** If true, shipping charges are also taxed. */
            shippingTaxed?: boolean;
            /** Whether the tax rate is taken from a global tax table or specified explicitly. */
            useGlobalRate?: boolean;
        }
        interface AccountUser {
            /** Whether user is an admin. */
            admin?: boolean;
            /** User's email address. */
            emailAddress?: string;
            /** Whether user is an order manager. */
            orderManager?: boolean;
            /** Whether user can access payment statements. */
            paymentsAnalyst?: boolean;
            /** Whether user can manage payment settings. */
            paymentsManager?: boolean;
        }
        interface AccountYouTubeChannelLink {
            /** Channel ID. */
            channelId?: string;
            /**
             * Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be
             * either active if it was approved in YT Creator Studio or pending if it's pending approval. Upon insertion, it represents the intended status of the
             * link. Re-uploading a link with status active when it's still pending or with status pending when it's already active will have no effect: the status
             * will remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if
             * it was active or cancel the link request if it was pending.
             */
            status?: string;
        }
        interface Amount {
            /** [required] The pre-tax or post-tax price depending on the location of the order. */
            priceAmount?: Price;
            /** [required] Tax value. */
            taxAmount?: Price;
        }
        interface BusinessDayConfig {
            /** Regular business days. May not be empty. */
            businessDays?: string[];
        }
        interface CarrierRate {
            /** Carrier service, such as "UPS" or "Fedex". The list of supported carriers can be retrieved via the getSupportedCarriers method. Required. */
            carrierName?: string;
            /**
             * Carrier service, such as "ground" or "2 days". The list of supported services for a carrier can be retrieved via the getSupportedCarriers method.
             * Required.
             */
            carrierService?: string;
            /**
             * Additive shipping rate modifier. Can be negative. For example { "value": "1", "currency" : "USD" } adds $1 to the rate, { "value": "-3", "currency" :
             * "USD" } removes $3 from the rate. Optional.
             */
            flatAdjustment?: Price;
            /** Name of the carrier rate. Must be unique per rate group. Required. */
            name?: string;
            /** Shipping origin for this carrier rate. Required. */
            originPostalCode?: string;
            /**
             * Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example "5.4" increases the rate by 5.4%, "-3" decreases
             * the rate by 3%. Optional.
             */
            percentageAdjustment?: string;
        }
        interface CarriersCarrier {
            /** The CLDR country code of the carrier (e.g., "US"). Always present. */
            country?: string;
            /** The name of the carrier (e.g., "UPS"). Always present. */
            name?: string;
            /** A list of supported services (e.g., "ground") for that carrier. Contains at least one service. */
            services?: string[];
        }
        interface CustomAttribute {
            /** Subattributes within this attribute group. Exactly one of value or groupValues must be provided. */
            groupValues?: CustomAttribute[];
            /** The name of the attribute. Underscores will be replaced by spaces upon insertion. */
            name?: string;
            /** The value of the attribute. */
            value?: string;
        }
        interface CustomerReturnReason {
            description?: string;
            reasonCode?: string;
        }
        interface CutoffTime {
            /** Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required. */
            hour?: number;
            /** Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required. */
            minute?: number;
            /** Timezone identifier for the cutoff time. A list of identifiers can be found in  the AdWords API documentation. E.g. "Europe/Zurich". Required. */
            timezone?: string;
        }
        interface Datafeed {
            /** The two-letter ISO 639-1 language in which the attributes are defined in the data feed. */
            attributeLanguage?: string;
            /** The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. */
            contentType?: string;
            /** Fetch schedule for the feed file. */
            fetchSchedule?: DatafeedFetchSchedule;
            /** The filename of the feed. All feeds must have a unique file name. */
            fileName?: string;
            /** Format of the feed file. */
            format?: DatafeedFormat;
            /** The ID of the data feed. */
            id?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#datafeed". */
            kind?: string;
            /** A descriptive name of the data feed. */
            name?: string;
            /** The targets this feed should apply to (country, language, destinations). */
            targets?: DatafeedTarget[];
        }
        interface DatafeedFetchSchedule {
            /** The day of the month the feed file should be fetched (1-31). */
            dayOfMonth?: number;
            /**
             * The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP
             * protocols, so the value will need to be a valid link using one of those four protocols.
             */
            fetchUrl?: string;
            /** The hour of the day the feed file should be fetched (0-23). */
            hour?: number;
            /** The minute of the hour the feed file should be fetched (0-59). Read-only. */
            minuteOfHour?: number;
            /** An optional password for fetch_url. */
            password?: string;
            /** Whether the scheduled fetch is paused or not. */
            paused?: boolean;
            /** Time zone used for schedule. UTC by default. E.g., "America/Los_Angeles". */
            timeZone?: string;
            /** An optional user name for fetch_url. */
            username?: string;
            /** The day of the week the feed file should be fetched. */
            weekday?: string;
        }
        interface DatafeedFormat {
            /**
             * Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV
             * data feeds.
             */
            columnDelimiter?: string;
            /** Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. */
            fileEncoding?: string;
            /** Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. */
            quotingMode?: string;
        }
        interface DatafeedsCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: DatafeedsCustomBatchRequestEntry[];
        }
        interface DatafeedsCustomBatchRequestEntry {
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** The data feed to insert. */
            datafeed?: Datafeed;
            /** The ID of the data feed to get, delete or fetch. */
            datafeedId?: string;
            /** The ID of the managing account. */
            merchantId?: string;
            method?: string;
        }
        interface DatafeedsCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: DatafeedsCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#datafeedsCustomBatchResponse". */
            kind?: string;
        }
        interface DatafeedsCustomBatchResponseEntry {
            /** The ID of the request entry this entry responds to. */
            batchId?: number;
            /** The requested data feed. Defined if and only if the request was successful. */
            datafeed?: Datafeed;
            /** A list of errors defined if and only if the request failed. */
            errors?: Errors;
        }
        interface DatafeedsFetchNowResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#datafeedsFetchNowResponse". */
            kind?: string;
        }
        interface DatafeedsListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#datafeedsListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of datafeeds. */
            nextPageToken?: string;
            resources?: Datafeed[];
        }
        interface DatafeedStatus {
            /** The country for which the status is reported, represented as a  CLDR territory code. */
            country?: string;
            /** The ID of the feed for which the status is reported. */
            datafeedId?: string;
            /** The list of errors occurring in the feed. */
            errors?: DatafeedStatusError[];
            /** The number of items in the feed that were processed. */
            itemsTotal?: string;
            /** The number of items in the feed that were valid. */
            itemsValid?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#datafeedStatus". */
            kind?: string;
            /** The two-letter ISO 639-1 language for which the status is reported. */
            language?: string;
            /** The last date at which the feed was uploaded. */
            lastUploadDate?: string;
            /** The processing status of the feed. */
            processingStatus?: string;
            /** The list of errors occurring in the feed. */
            warnings?: DatafeedStatusError[];
        }
        interface DatafeedStatusError {
            /** The code of the error, e.g., "validation/invalid_value". */
            code?: string;
            /** The number of occurrences of the error in the feed. */
            count?: string;
            /** A list of example occurrences of the error, grouped by product. */
            examples?: DatafeedStatusExample[];
            /** The error message, e.g., "Invalid price". */
            message?: string;
        }
        interface DatafeedstatusesCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: DatafeedstatusesCustomBatchRequestEntry[];
        }
        interface DatafeedstatusesCustomBatchRequestEntry {
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /**
             * The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target
             * datafeeds this parameter is required.
             */
            country?: string;
            /** The ID of the data feed to get. */
            datafeedId?: string;
            /**
             * The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target
             * datafeeds this parameter is required.
             */
            language?: string;
            /** The ID of the managing account. */
            merchantId?: string;
            method?: string;
        }
        interface DatafeedstatusesCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: DatafeedstatusesCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#datafeedstatusesCustomBatchResponse". */
            kind?: string;
        }
        interface DatafeedstatusesCustomBatchResponseEntry {
            /** The ID of the request entry this entry responds to. */
            batchId?: number;
            /** The requested data feed status. Defined if and only if the request was successful. */
            datafeedStatus?: DatafeedStatus;
            /** A list of errors defined if and only if the request failed. */
            errors?: Errors;
        }
        interface DatafeedstatusesListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#datafeedstatusesListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of datafeed statuses. */
            nextPageToken?: string;
            resources?: DatafeedStatus[];
        }
        interface DatafeedStatusExample {
            /** The ID of the example item. */
            itemId?: string;
            /** Line number in the data feed where the example is found. */
            lineNumber?: string;
            /** The problematic value. */
            value?: string;
        }
        interface DatafeedTarget {
            /** The country where the items in the feed will be included in the search index, represented as a  CLDR territory code. */
            country?: string;
            /** The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center). */
            excludedDestinations?: string[];
            /**
             * The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included
             * unless provided in excludedDestinations.
             *
             * List of supported destinations (if available to the account):
             * - DisplayAds
             * - Shopping
             * - ShoppingActions
             * - SurfacesAcrossGoogle
             */
            includedDestinations?: string[];
            /** The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targets[].country. */
            language?: string;
        }
        interface DeliveryTime {
            /** Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST. */
            cutoffTime?: CutoffTime;
            /** The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed. */
            handlingBusinessDayConfig?: BusinessDayConfig;
            /** Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping. */
            holidayCutoffs?: HolidayCutoff[];
            /**
             * Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to
             * minHandlingTimeInDays.
             */
            maxHandlingTimeInDays?: number;
            /**
             * Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to
             * minTransitTimeInDays.
             */
            maxTransitTimeInDays?: number;
            /** Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. */
            minHandlingTimeInDays?: number;
            /**
             * Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either {min,max}TransitTimeInDays or
             * transitTimeTable must be set, but not both.
             */
            minTransitTimeInDays?: number;
            /** The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed. */
            transitBusinessDayConfig?: BusinessDayConfig;
            /**
             * Transit time table, number of business days spent in transit based on row and column dimensions. Either {min,max}TransitTimeInDays or transitTimeTable
             * can be set, but not both.
             */
            transitTimeTable?: TransitTable;
        }
        interface Error {
            /** The domain of the error. */
            domain?: string;
            /** A description of the error. */
            message?: string;
            /** The error code. */
            reason?: string;
        }
        interface Errors {
            /** The HTTP status of the first error in errors. */
            code?: number;
            /** A list of errors. */
            errors?: Error[];
            /** The message of the first error in errors. */
            message?: string;
        }
        interface GmbAccounts {
            /** The ID of the account. */
            accountId?: string;
            /** A list of GMB accounts which are available to the merchant. */
            gmbAccounts?: GmbAccountsGmbAccount[];
        }
        interface GmbAccountsGmbAccount {
            /** The email which identifies the GMB account. */
            email?: string;
            /** Number of listings under this account. */
            listingCount?: string;
            /** The name of the GMB account. */
            name?: string;
            /** The type of the GMB account (User or Business). */
            type?: string;
        }
        interface Headers {
            /** A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set. */
            locations?: LocationIdSet[];
            /**
             * A list of inclusive number of items upper bounds. The last value can be "infinity". For example ["10", "50", "infinity"] represents the headers "<= 10
             * items", " 50 items". Must be non-empty. Can only be set if all other fields are not set.
             */
            numberOfItems?: string[];
            /**
             * A list of postal group names. The last value can be "all other locations". Example: ["zone 1", "zone 2", "all other locations"]. The referred postal
             * code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.
             */
            postalCodeGroupNames?: string[];
            /**
             * A list of inclusive order price upper bounds. The last price's value can be "infinity". For example [{"value": "10", "currency": "USD"}, {"value":
             * "500", "currency": "USD"}, {"value": "infinity", "currency": "USD"}] represents the headers "<= $10", " $500". All prices within a service must have
             * the same currency. Must be non-empty. Can only be set if all other fields are not set.
             */
            prices?: Price[];
            /**
             * A list of inclusive order weight upper bounds. The last weight's value can be "infinity". For example [{"value": "10", "unit": "kg"}, {"value": "50",
             * "unit": "kg"}, {"value": "infinity", "unit": "kg"}] represents the headers "<= 10kg", " 50kg". All weights within a service must have the same unit.
             * Must be non-empty. Can only be set if all other fields are not set.
             */
            weights?: Weight[];
        }
        interface HolidayCutoff {
            /** Date of the order deadline, in ISO 8601 format. E.g. "2016-11-29" for 29th November 2016. Required. */
            deadlineDate?: string;
            /**
             * Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight),
             * 1, ..., 12 (noon), 13, ..., 23. Required.
             */
            deadlineHour?: number;
            /** Timezone identifier for the deadline hour. A list of identifiers can be found in  the AdWords API documentation. E.g. "Europe/Zurich". Required. */
            deadlineTimezone?: string;
            /** Unique identifier for the holiday. Required. */
            holidayId?: string;
            /** Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. "2016-10-31" for 31st October 2016. Required. */
            visibleFromDate?: string;
        }
        interface HolidaysHoliday {
            /**
             * The CLDR territory code of the country in which the holiday is available. E.g. "US", "DE", "GB". A holiday cutoff can only be configured in a shipping
             * settings service with matching delivery country. Always present.
             */
            countryCode?: string;
            /** Date of the holiday, in ISO 8601 format. E.g. "2016-12-25" for Christmas 2016. Always present. */
            date?: string;
            /** Date on which the order has to arrive at the customer's, in ISO 8601 format. E.g. "2016-12-24" for 24th December 2016. Always present. */
            deliveryGuaranteeDate?: string;
            /**
             * Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values
             * are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.
             */
            deliveryGuaranteeHour?: string;
            /** Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present. */
            id?: string;
            /** The holiday type. Always present. */
            type?: string;
        }
        interface Installment {
            /** The amount the buyer has to pay per month. */
            amount?: Price;
            /** The number of installments the buyer has to pay. */
            months?: string;
        }
        interface InvoiceSummary {
            /** Summary of the total amounts of the additional charges. */
            additionalChargeSummaries?: InvoiceSummaryAdditionalChargeSummary[];
            /** [required] Total price for the product. */
            productTotal?: Amount;
        }
        interface InvoiceSummaryAdditionalChargeSummary {
            /** [required] Total additional charge for this type. */
            totalAmount?: Amount;
            /** [required] Type of the additional charge. */
            type?: string;
        }
        interface LiaAboutPageSettings {
            /** The status of the verification process for the About page. */
            status?: string;
            /** The URL for the About page. */
            url?: string;
        }
        interface LiaCountrySettings {
            /** The settings for the About page. */
            about?: LiaAboutPageSettings;
            /** CLDR country code (e.g. "US"). */
            country?: string;
            /** The status of the "Merchant hosted local storefront" feature. */
            hostedLocalStorefrontActive?: boolean;
            /** LIA inventory verification settings. */
            inventory?: LiaInventorySettings;
            /** LIA "On Display To Order" settings. */
            onDisplayToOrder?: LiaOnDisplayToOrderSettings;
            /** The POS data provider linked with this country. */
            posDataProvider?: LiaPosDataProvider;
            /** The status of the "Store pickup" feature. */
            storePickupActive?: boolean;
        }
        interface LiaInventorySettings {
            /** The email of the contact for the inventory verification process. */
            inventoryVerificationContactEmail?: string;
            /** The name of the contact for the inventory verification process. */
            inventoryVerificationContactName?: string;
            /** The status of the verification contact. */
            inventoryVerificationContactStatus?: string;
            /** The status of the inventory verification process. */
            status?: string;
        }
        interface LiaOnDisplayToOrderSettings {
            /** Shipping cost and policy URL. */
            shippingCostPolicyUrl?: string;
            /** The status of the ?On display to order? feature. */
            status?: string;
        }
        interface LiaPosDataProvider {
            /** The ID of the POS data provider. */
            posDataProviderId?: string;
            /** The account ID by which this merchant is known to the POS data provider. */
            posExternalAccountId?: string;
        }
        interface LiaSettings {
            /** The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses. */
            accountId?: string;
            /** The LIA settings for each country. */
            countrySettings?: LiaCountrySettings[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#liaSettings". */
            kind?: string;
        }
        interface LiasettingsCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: LiasettingsCustomBatchRequestEntry[];
        }
        interface LiasettingsCustomBatchRequestEntry {
            /** The ID of the account for which to get/update account shipping settings. */
            accountId?: string;
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** Inventory validation contact email. Required only for SetInventoryValidationContact. */
            contactEmail?: string;
            /** Inventory validation contact name. Required only for SetInventoryValidationContact. */
            contactName?: string;
            /** The country code. Required only for RequestInventoryVerification. */
            country?: string;
            /** The GMB account. Required only for RequestGmbAccess. */
            gmbEmail?: string;
            /** The account Lia settings to update. Only defined if the method is update. */
            liaSettings?: LiaSettings;
            /** The ID of the managing account. */
            merchantId?: string;
            method?: string;
            /** The ID of POS data provider. Required only for SetPosProvider. */
            posDataProviderId?: string;
            /** The account ID by which this merchant is known to the POS provider. */
            posExternalAccountId?: string;
        }
        interface LiasettingsCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: LiasettingsCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsCustomBatchResponse". */
            kind?: string;
        }
        interface LiasettingsCustomBatchResponseEntry {
            /** The ID of the request entry to which this entry responds. */
            batchId?: number;
            /** A list of errors defined if, and only if, the request failed. */
            errors?: Errors;
            /** The the list of accessible GMB accounts. */
            gmbAccounts?: GmbAccounts;
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsCustomBatchResponseEntry". */
            kind?: string;
            /** The retrieved or updated Lia settings. */
            liaSettings?: LiaSettings;
            /** The list of POS data providers. */
            posDataProviders?: PosDataProviders[];
        }
        interface LiasettingsGetAccessibleGmbAccountsResponse {
            /** The ID of the account. */
            accountId?: string;
            /** A list of GMB accounts which are available to the merchant. */
            gmbAccounts?: GmbAccountsGmbAccount[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsGetAccessibleGmbAccountsResponse". */
            kind?: string;
        }
        interface LiasettingsListPosDataProvidersResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsListPosDataProvidersResponse". */
            kind?: string;
            /** The list of POS data providers for each eligible country */
            posDataProviders?: PosDataProviders[];
        }
        interface LiasettingsListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of LIA settings. */
            nextPageToken?: string;
            resources?: LiaSettings[];
        }
        interface LiasettingsRequestGmbAccessResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsRequestGmbAccessResponse". */
            kind?: string;
        }
        interface LiasettingsRequestInventoryVerificationResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsRequestInventoryVerificationResponse". */
            kind?: string;
        }
        interface LiasettingsSetInventoryVerificationContactResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsSetInventoryVerificationContactResponse". */
            kind?: string;
        }
        interface LiasettingsSetPosDataProviderResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#liasettingsSetPosDataProviderResponse". */
            kind?: string;
        }
        interface LinkedAccount {
            /** The ID of the linked account. */
            linkedAccountId?: string;
            /** List of provided services. */
            services?: LinkService[];
        }
        interface LinkService {
            /** Service provided to or by the linked account. */
            service?: string;
            /** Status of the link */
            status?: string;
        }
        interface LocationIdSet {
            /** A non-empty list of location IDs. They must all be of the same location type (e.g., state). */
            locationIds?: string[];
        }
        interface LoyaltyPoints {
            /** Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters. */
            name?: string;
            /** The retailer's loyalty points in absolute value. */
            pointsValue?: string;
            /** The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0. */
            ratio?: number;
        }
        interface MerchantOrderReturn {
            creationDate?: string;
            merchantOrderId?: string;
            orderId?: string;
            orderReturnId?: string;
            returnItems?: MerchantOrderReturnItem[];
            returnShipments?: ReturnShipment[];
        }
        interface MerchantOrderReturnItem {
            customerReturnReason?: CustomerReturnReason;
            itemId?: string;
            merchantReturnReason?: RefundReason;
            product?: OrderLineItemProduct;
            returnShipmentIds?: string[];
            state?: string;
        }
        interface Order {
            /** Whether the order was acknowledged. */
            acknowledged?: boolean;
            /** The billing address. */
            billingAddress?: OrderAddress;
            /** The details of the customer who placed the order. */
            customer?: OrderCustomer;
            /** Delivery details for shipments of type delivery. */
            deliveryDetails?: OrderDeliveryDetails;
            /** The REST ID of the order. Globally unique. */
            id?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#order". */
            kind?: string;
            /** Line items that are ordered. */
            lineItems?: OrderLineItem[];
            merchantId?: string;
            /** Merchant-provided ID of the order. */
            merchantOrderId?: string;
            /**
             * The net amount for the order (price part). For example, if an order was originally for $100 and a refund was issued for $20, the net amount will be
             * $80.
             */
            netPriceAmount?: Price;
            /**
             * The net amount for the order (tax part). Note that in certain cases due to taxable base adjustment netTaxAmount might not match to a sum of tax field
             * across all lineItems and refunds.
             */
            netTaxAmount?: Price;
            /** The status of the payment. */
            paymentStatus?: string;
            /** Pickup details for shipments of type pickup. */
            pickupDetails?: OrderPickupDetails;
            /** The date when the order was placed, in ISO 8601 format. */
            placedDate?: string;
            /** Promotions associated with the order. */
            promotions?: OrderPromotion[];
            /** Refunds for the order. */
            refunds?: OrderRefund[];
            /** Shipments of the order. */
            shipments?: OrderShipment[];
            /** The total cost of shipping for all items. */
            shippingCost?: Price;
            /** The tax for the total shipping cost. */
            shippingCostTax?: Price;
            /** The status of the order. */
            status?: string;
            /** The party responsible for collecting and remitting taxes. */
            taxCollector?: string;
        }
        interface OrderAddress {
            /** CLDR country code (e.g. "US"). */
            country?: string;
            /**
             * Strings representing the lines of the printed label for mailing the order, for example:
             * John Smith
             * 1600 Amphitheatre Parkway
             * Mountain View, CA, 94043
             * United States
             */
            fullAddress?: string[];
            /** Whether the address is a post office box. */
            isPostOfficeBox?: boolean;
            /** City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs). */
            locality?: string;
            /** Postal Code or ZIP (e.g. "94043"). */
            postalCode?: string;
            /** Name of the recipient. */
            recipientName?: string;
            /** Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC"). */
            region?: string;
            /** Street-level part of the address. */
            streetAddress?: string[];
        }
        interface OrderCancellation {
            /** The actor that created the cancellation. */
            actor?: string;
            /** Date on which the cancellation has been created, in ISO 8601 format. */
            creationDate?: string;
            /** The quantity that was canceled. */
            quantity?: number;
            /**
             * The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Shopping Actions until
             * you make an update to that product. This will not affect your Shopping ads.
             */
            reason?: string;
            /** The explanation of the reason. */
            reasonText?: string;
        }
        interface OrderCustomer {
            /** Full name of the customer. */
            fullName?: string;
            /** Email address for the merchant to send value-added tax or invoice documentation of the order. This documentation is made available to the customer. */
            invoiceReceivingEmail?: string;
            /** Loyalty program information. */
            loyaltyInfo?: OrderCustomerLoyaltyInfo;
            /**
             * Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference
             * selections can change from one order to the next so preferences must be checked with every order.
             */
            marketingRightsInfo?: OrderCustomerMarketingRightsInfo;
        }
        interface OrderCustomerLoyaltyInfo {
            /** The loyalty card/membership number. */
            loyaltyNumber?: string;
            /** Name of card/membership holder, this field will be populated when */
            name?: string;
        }
        interface OrderCustomerMarketingRightsInfo {
            /**
             * Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a
             * customer selected granted in their most recent order, they can be subscribed to marketing emails. Customers who have chosen denied must not be
             * subscribed, or must be unsubscribed if already opted-in.
             */
            explicitMarketingPreference?: string;
            /** Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet. */
            lastUpdatedTimestamp?: string;
            /**
             * Email address that can be used for marketing purposes. The field may be empty even if explicitMarketingPreference is 'granted'. This happens when
             * retrieving an old order from the customer who deleted their account.
             */
            marketingEmailAddress?: string;
        }
        interface OrderDeliveryDetails {
            /** The delivery address */
            address?: OrderAddress;
            /** The phone number of the person receiving the delivery. */
            phoneNumber?: string;
        }
        interface OrderinvoicesCreateChargeInvoiceRequest {
            /** [required] The ID of the invoice. */
            invoiceId?: string;
            /** [required] Invoice summary. */
            invoiceSummary?: InvoiceSummary;
            /** [required] Invoice details per line item. */
            lineItemInvoices?: ShipmentInvoiceLineItemInvoice[];
            /** [required] The ID of the operation, unique across all operations for a given order. */
            operationId?: string;
            /**
             * [required] ID of the shipment group. It is assigned by the merchant in the shipLineItems method and is used to group multiple line items that have the
             * same kind of shipping charges.
             */
            shipmentGroupId?: string;
        }
        interface OrderinvoicesCreateChargeInvoiceResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#orderinvoicesCreateChargeInvoiceResponse". */
            kind?: string;
        }
        interface OrderinvoicesCreateRefundInvoiceRequest {
            /** [required] The ID of the invoice. */
            invoiceId?: string;
            /** [required] The ID of the operation, unique across all operations for a given order. */
            operationId?: string;
            /** Option to create a refund-only invoice. Exactly one of refundOnlyOption or returnOption must be provided. */
            refundOnlyOption?: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption;
            /**
             * Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of refundOnlyOption or returnOption must be
             * provided.
             */
            returnOption?: OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption;
            /** Invoice details for different shipment groups. */
            shipmentInvoices?: ShipmentInvoice[];
        }
        interface OrderinvoicesCreateRefundInvoiceResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#orderinvoicesCreateRefundInvoiceResponse". */
            kind?: string;
        }
        interface OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption {
            /** Optional description of the refund reason. */
            description?: string;
            /** [required] Reason for the refund. */
            reason?: string;
        }
        interface OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption {
            /** Optional description of the return reason. */
            description?: string;
            /** [required] Reason for the return. */
            reason?: string;
        }
        interface OrderLineItem {
            /** Price and tax adjustments applied on the line item. */
            adjustments?: OrderLineItemAdjustment[];
            /** Annotations that are attached to the line item. */
            annotations?: OrderMerchantProvidedAnnotation[];
            /** Cancellations of the line item. */
            cancellations?: OrderCancellation[];
            /** The ID of the line item. */
            id?: string;
            /** Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20. */
            price?: Price;
            /**
             * Product data as seen by customer from the time of the order placement. Note that certain attributes values (e.g. title or gtin) might be reformatted
             * and no longer match values submitted via product feed.
             */
            product?: OrderLineItemProduct;
            /** Number of items canceled. */
            quantityCanceled?: number;
            /** Number of items delivered. */
            quantityDelivered?: number;
            /** Number of items ordered. */
            quantityOrdered?: number;
            /** Number of items pending. */
            quantityPending?: number;
            /** Number of items ready for pickup. */
            quantityReadyForPickup?: number;
            /** Number of items returned. */
            quantityReturned?: number;
            /** Number of items shipped. */
            quantityShipped?: number;
            /** Number of items undeliverable. */
            quantityUndeliverable?: number;
            /** Details of the return policy for the line item. */
            returnInfo?: OrderLineItemReturnInfo;
            /** Returns of the line item. */
            returns?: OrderReturn[];
            /** Details of the requested shipping for the line item. */
            shippingDetails?: OrderLineItemShippingDetails;
            /** Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4. */
            tax?: Price;
        }
        interface OrderLineItemAdjustment {
            /** Adjustment for total price of the line item. */
            priceAdjustment?: Price;
            /** Adjustment for total tax of the line item. */
            taxAdjustment?: Price;
            /** Type of this adjustment. */
            type?: string;
        }
        interface OrderLineItemProduct {
            /** Brand of the item. */
            brand?: string;
            /** Condition or state of the item. */
            condition?: string;
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Associated fees at order creation time. */
            fees?: OrderLineItemProductFee[];
            /** Global Trade Item Number (GTIN) of the item. */
            gtin?: string;
            /** The REST ID of the product. */
            id?: string;
            /** URL of an image of the item. */
            imageLink?: string;
            /** Shared identifier for all variants of the same product. */
            itemGroupId?: string;
            /** Manufacturer Part Number (MPN) of the item. */
            mpn?: string;
            /** An identifier of the item. */
            offerId?: string;
            /** Price of the item. */
            price?: Price;
            /** URL to the cached image shown to the user when order was placed. */
            shownImage?: string;
            /** The CLDR territory code of the target country of the product. */
            targetCountry?: string;
            /** The title of the product. */
            title?: string;
            /**
             * Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive
             * list of variant attributes here.
             */
            variantAttributes?: OrderLineItemProductVariantAttribute[];
        }
        interface OrderLineItemProductFee {
            /** Amount of the fee. */
            amount?: Price;
            /** Name of the fee. */
            name?: string;
        }
        interface OrderLineItemProductVariantAttribute {
            /** The dimension of the variant. */
            dimension?: string;
            /** The value for the dimension. */
            value?: string;
        }
        interface OrderLineItemReturnInfo {
            /** How many days later the item can be returned. */
            daysToReturn?: number;
            /** Whether the item is returnable. */
            isReturnable?: boolean;
            /** URL of the item return policy. */
            policyUrl?: string;
        }
        interface OrderLineItemShippingDetails {
            /** The delivery by date, in ISO 8601 format. */
            deliverByDate?: string;
            /** Details of the shipping method. */
            method?: OrderLineItemShippingDetailsMethod;
            /** The ship by date, in ISO 8601 format. */
            shipByDate?: string;
            /** Type of shipment. Indicates whether deliveryDetails or pickupDetails is applicable for this shipment. */
            type?: string;
        }
        interface OrderLineItemShippingDetailsMethod {
            /** The carrier for the shipping. Optional. See shipments[].carrier for a list of acceptable values. */
            carrier?: string;
            /** Maximum transit time. */
            maxDaysInTransit?: number;
            /** The name of the shipping method. */
            methodName?: string;
            /** Minimum transit time. */
            minDaysInTransit?: number;
        }
        interface OrderMerchantProvidedAnnotation {
            /** Key for additional merchant provided (as key-value pairs) annotation about the line item. */
            key?: string;
            /** Value for additional merchant provided (as key-value pairs) annotation about the line item. */
            value?: string;
        }
        interface OrderPickupDetails {
            /**
             * Address of the pickup location where the shipment should be sent. Note that recipientName in the address is the name of the business at the pickup
             * location.
             */
            address?: OrderAddress;
            /** Collectors authorized to pick up shipment from the pickup location. */
            collectors?: OrderPickupDetailsCollector[];
            /** ID of the pickup location. */
            locationId?: string;
        }
        interface OrderPickupDetailsCollector {
            /** Name of the person picking up the shipment. */
            name?: string;
            /** Phone number of the person picking up the shipment. */
            phoneNumber?: string;
        }
        interface OrderPromotion {
            /** Items which this promotion may be applied to. If empty, there are no restrictions on applicable items and quantity. */
            applicableItems?: OrderPromotionItem[];
            /** Items which this promotion have been applied to. Do not provide for orders.createtestorder. */
            appliedItems?: OrderPromotionItem[];
            /** Promotion end time in ISO 8601 format. Date, time, and offset required, e.g., "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z". */
            endTime?: string;
            /** The party funding the promotion. Only merchant is supported for orders.createtestorder. */
            funder?: string;
            /** This field is used to identify promotions within merchants' own systems. */
            merchantPromotionId?: string;
            /** Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of order. */
            priceValue?: Price;
            /** A short title of the promotion to be shown on the checkout page. Do not provide for orders.createtestorder. */
            shortTitle?: string;
            /** Promotion start time in ISO 8601 format. Date, time, and offset required, e.g., "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z". */
            startTime?: string;
            /** The category of the promotion. Only moneyOff is supported for orders.createtestorder. */
            subtype?: string;
            /** Estimated discount applied to tax (if allowed by law). Do not provide for orders.createtestorder. */
            taxValue?: Price;
            /** The title of the promotion. */
            title?: string;
            /** The scope of the promotion. Only product is supported for orders.createtestorder. */
            type?: string;
        }
        interface OrderPromotionItem {
            /** The line item ID of a product. Do not provide for orders.createtestorder. */
            lineItemId?: string;
            /** Offer ID of a product. Only for orders.createtestorder. */
            offerId?: string;
            /** orders.createtestorder. */
            productId?: string;
            /** The quantity of the associated product. Do not provide for orders.createtestorder. */
            quantity?: number;
        }
        interface OrderRefund {
            /** The actor that created the refund. */
            actor?: string;
            /** The amount that is refunded. */
            amount?: Price;
            /** Date on which the item has been created, in ISO 8601 format. */
            creationDate?: string;
            /** The reason for the refund. */
            reason?: string;
            /** The explanation of the reason. */
            reasonText?: string;
        }
        interface OrderReportDisbursement {
            /** The disbursement amount. */
            disbursementAmount?: Price;
            /** The disbursement date, in ISO 8601 format. */
            disbursementCreationDate?: string;
            /** The date the disbursement was initiated, in ISO 8601 format. */
            disbursementDate?: string;
            /** The ID of the disbursement. */
            disbursementId?: string;
            /** The ID of the managing account. */
            merchantId?: string;
        }
        interface OrderreportsListDisbursementsResponse {
            /** The list of disbursements. */
            disbursements?: OrderReportDisbursement[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#orderreportsListDisbursementsResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of disbursements. */
            nextPageToken?: string;
        }
        interface OrderreportsListTransactionsResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#orderreportsListTransactionsResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of transactions. */
            nextPageToken?: string;
            /** The list of transactions. */
            transactions?: OrderReportTransaction[];
        }
        interface OrderReportTransaction {
            /** The disbursement amount. */
            disbursementAmount?: Price;
            /** The date the disbursement was created, in ISO 8601 format. */
            disbursementCreationDate?: string;
            /** The date the disbursement was initiated, in ISO 8601 format. */
            disbursementDate?: string;
            /** The ID of the disbursement. */
            disbursementId?: string;
            /** The ID of the managing account. */
            merchantId?: string;
            /** Merchant-provided ID of the order. */
            merchantOrderId?: string;
            /** The ID of the order. */
            orderId?: string;
            /** Total amount for the items. */
            productAmount?: ProductAmount;
            /** The date of the transaction, in ISO 8601 format. */
            transactionDate?: string;
        }
        interface OrderReturn {
            /** The actor that created the refund. */
            actor?: string;
            /** Date on which the item has been created, in ISO 8601 format. */
            creationDate?: string;
            /** Quantity that is returned. */
            quantity?: number;
            /** The reason for the return. */
            reason?: string;
            /** The explanation of the reason. */
            reasonText?: string;
        }
        interface OrderreturnsListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#orderreturnsListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of returns. */
            nextPageToken?: string;
            resources?: MerchantOrderReturn[];
        }
        interface OrdersAcknowledgeRequest {
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
        }
        interface OrdersAcknowledgeResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersAcknowledgeResponse". */
            kind?: string;
        }
        interface OrdersAdvanceTestOrderResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersAdvanceTestOrderResponse". */
            kind?: string;
        }
        interface OrdersCancelLineItemRequest {
            /** The ID of the line item to cancel. Either lineItemId or productId is required. */
            lineItemId?: string;
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required. */
            productId?: string;
            /** The quantity to cancel. */
            quantity?: number;
            /** The reason for the cancellation. */
            reason?: string;
            /** The explanation of the reason. */
            reasonText?: string;
        }
        interface OrdersCancelLineItemResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelLineItemResponse". */
            kind?: string;
        }
        interface OrdersCancelRequest {
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** The reason for the cancellation. */
            reason?: string;
            /** The explanation of the reason. */
            reasonText?: string;
        }
        interface OrdersCancelResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelResponse". */
            kind?: string;
        }
        interface OrdersCancelTestOrderByCustomerRequest {
            /** The reason for the cancellation. */
            reason?: string;
        }
        interface OrdersCancelTestOrderByCustomerResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersCancelTestOrderByCustomerResponse". */
            kind?: string;
        }
        interface OrdersCreateTestOrderRequest {
            /**
             * The  CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via template_name, or the
             * addresses of orders created via test_order.
             *
             * Acceptable values are:
             * - "US"
             * - "FR"  Defaults to US.
             */
            country?: string;
            /**
             * The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that
             * template.
             */
            templateName?: string;
            /** The test order to create. */
            testOrder?: TestOrder;
        }
        interface OrdersCreateTestOrderResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersCreateTestOrderResponse". */
            kind?: string;
            /** The ID of the newly created test order. */
            orderId?: string;
        }
        interface OrdersCreateTestReturnRequest {
            /** Returned items. */
            items?: OrdersCustomBatchRequestEntryCreateTestReturnReturnItem[];
        }
        interface OrdersCreateTestReturnResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersCreateTestReturnResponse". */
            kind?: string;
            /** The ID of the newly created test order return. */
            returnId?: string;
        }
        interface OrdersCustomBatchRequestEntryCreateTestReturnReturnItem {
            /** The ID of the line item to return. */
            lineItemId?: string;
            /** Quantity that is returned. */
            quantity?: number;
        }
        interface OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo {
            /** The carrier handling the shipment. See shipments[].carrier in the  Orders resource representation for a list of acceptable values. */
            carrier?: string;
            /** The ID of the shipment. This is assigned by the merchant and is unique to each shipment. */
            shipmentId?: string;
            /** The tracking ID for the shipment. */
            trackingId?: string;
        }
        interface OrdersGetByMerchantOrderIdResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersGetByMerchantOrderIdResponse". */
            kind?: string;
            /** The requested order. */
            order?: Order;
        }
        interface OrdersGetTestOrderTemplateResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersGetTestOrderTemplateResponse". */
            kind?: string;
            /** The requested test order template. */
            template?: TestOrder;
        }
        interface OrderShipment {
            /**
             * The carrier handling the shipment.
             *
             * For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also
             * automatically updates the shipment status based on the provided shipment ID. Note: You can also use unsupported carriers, but emails to customers will
             * not include the carrier name or tracking URL, and there will be no automatic order status updates.
             * Supported carriers for US are:
             * - "ups" (United Parcel Service) automatic status updates
             * - "usps" (United States Postal Service) automatic status updates
             * - "fedex" (FedEx) automatic status updates
             * - "dhl" (DHL eCommerce) automatic status updates (US only)
             * - "ontrac" (OnTrac) automatic status updates
             * - "dhl express" (DHL Express)
             * - "deliv" (Deliv)
             * - "dynamex" (TForce)
             * - "lasership" (LaserShip)
             * - "mpx" (Military Parcel Xpress)
             * - "uds" (United Delivery Service)
             * - "efw" (Estes Forwarding Worldwide)
             * - "jd logistics" (JD Logistics)
             * - "yunexpress" (YunExpress)
             * - "china post" (China Post)
             * - "china ems" (China Post Express Mail Service)
             * - "singapore post" (Singapore Post)
             * - "pos malaysia" (Pos Malaysia)
             * - "postnl" (PostNL)
             * - "ptt" (PTT Turkish Post)
             * - "eub" (ePacket)
             * - "chukou1" (Chukou1 Logistics)
             * Supported carriers for FR are:
             * - "la poste" (La Poste) automatic status updates
             * - "colissimo" (Colissimo by La Poste) automatic status updates
             * - "ups" (United Parcel Service) automatic status updates
             * - "chronopost" (Chronopost by La Poste)
             * - "gls" (General Logistics Systems France)
             * - "dpd" (DPD Group by GeoPost)
             * - "bpost" (Belgian Post Group)
             * - "colis prive" (Colis Privé)
             * - "boxtal" (Boxtal)
             * - "geodis" (GEODIS)
             * - "tnt" (TNT)
             * - "db schenker" (DB Schenker)
             */
            carrier?: string;
            /** Date on which the shipment has been created, in ISO 8601 format. */
            creationDate?: string;
            /** Date on which the shipment has been delivered, in ISO 8601 format. Present only if status is delivered */
            deliveryDate?: string;
            /** The ID of the shipment. */
            id?: string;
            /** The line items that are shipped. */
            lineItems?: OrderShipmentLineItemShipment[];
            /** The shipment group ID of the shipment. This is set in shiplineitems request. */
            shipmentGroupId?: string;
            /** The status of the shipment. */
            status?: string;
            /** The tracking ID for the shipment. */
            trackingId?: string;
        }
        interface OrderShipmentLineItemShipment {
            /** The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required. */
            lineItemId?: string;
            /** The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required. */
            productId?: string;
            /** The quantity that is shipped. */
            quantity?: number;
        }
        interface OrdersInStoreRefundLineItemRequest {
            /** The ID of the line item to return. Either lineItemId or productId is required. */
            lineItemId?: string;
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. Required. */
            priceAmount?: Price;
            /** The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. */
            productId?: string;
            /** The quantity to return and refund. */
            quantity?: number;
            /** The reason for the return. */
            reason?: string;
            /** The explanation of the reason. */
            reasonText?: string;
            /** The amount of tax to be refunded. Required. */
            taxAmount?: Price;
        }
        interface OrdersInStoreRefundLineItemResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersInStoreRefundLineItemResponse". */
            kind?: string;
        }
        interface OrdersListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of orders. */
            nextPageToken?: string;
            resources?: Order[];
        }
        interface OrdersRejectReturnLineItemRequest {
            /** The ID of the line item to return. Either lineItemId or productId is required. */
            lineItemId?: string;
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. */
            productId?: string;
            /** The quantity to return and refund. */
            quantity?: number;
            /** The reason for the return. */
            reason?: string;
            /** The explanation of the reason. */
            reasonText?: string;
        }
        interface OrdersRejectReturnLineItemResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersRejectReturnLineItemResponse". */
            kind?: string;
        }
        interface OrdersReturnRefundLineItemRequest {
            /** The ID of the line item to return. Either lineItemId or productId is required. */
            lineItemId?: string;
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. If omitted, refundless return is assumed. */
            priceAmount?: Price;
            /** The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required. */
            productId?: string;
            /** The quantity to return and refund. */
            quantity?: number;
            /** The reason for the return. */
            reason?: string;
            /** The explanation of the reason. */
            reasonText?: string;
            /** The amount of tax to be refunded. Optional, but if filled, then priceAmount must be set. Calculated automatically if not provided. */
            taxAmount?: Price;
        }
        interface OrdersReturnRefundLineItemResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersReturnRefundLineItemResponse". */
            kind?: string;
        }
        interface OrdersSetLineItemMetadataRequest {
            annotations?: OrderMerchantProvidedAnnotation[];
            /** The ID of the line item to set metadata. Either lineItemId or productId is required. */
            lineItemId?: string;
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required. */
            productId?: string;
        }
        interface OrdersSetLineItemMetadataResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersSetLineItemMetadataResponse". */
            kind?: string;
        }
        interface OrdersShipLineItemsRequest {
            /** Line items to ship. */
            lineItems?: OrderShipmentLineItemShipment[];
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** ID of the shipment group. Required for orders that use the orderinvoices service. */
            shipmentGroupId?: string;
            /** Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs). */
            shipmentInfos?: OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo[];
        }
        interface OrdersShipLineItemsResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersShipLineItemsResponse". */
            kind?: string;
        }
        interface OrdersUpdateLineItemShippingDetailsRequest {
            /**
             * Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated.
             *
             * Provided date should be within 1 year timeframe and can not be a date in the past.
             */
            deliverByDate?: string;
            /** The ID of the line item to set metadata. Either lineItemId or productId is required. */
            lineItemId?: string;
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required. */
            productId?: string;
            /**
             * Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated.
             *
             * Provided date should be within 1 year timeframe and can not be a date in the past.
             */
            shipByDate?: string;
        }
        interface OrdersUpdateLineItemShippingDetailsResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateLineItemShippingDetailsResponse". */
            kind?: string;
        }
        interface OrdersUpdateMerchantOrderIdRequest {
            /** The merchant order id to be assigned to the order. Must be unique per merchant. */
            merchantOrderId?: string;
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
        }
        interface OrdersUpdateMerchantOrderIdResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateMerchantOrderIdResponse". */
            kind?: string;
        }
        interface OrdersUpdateShipmentRequest {
            /**
             * The carrier handling the shipment. Not updated if missing. See shipments[].carrier in the  Orders resource representation for a list of acceptable
             * values.
             */
            carrier?: string;
            /** Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if status is delivered. */
            deliveryDate?: string;
            /** The ID of the operation. Unique across all operations for a given order. */
            operationId?: string;
            /** The ID of the shipment. */
            shipmentId?: string;
            /** New status for the shipment. Not updated if missing. */
            status?: string;
            /** The tracking ID for the shipment. Not updated if missing. */
            trackingId?: string;
        }
        interface OrdersUpdateShipmentResponse {
            /** The status of the execution. */
            executionStatus?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#ordersUpdateShipmentResponse". */
            kind?: string;
        }
        interface PickupCarrierService {
            /** The name of the pickup carrier (e.g., "UPS"). Required. */
            carrierName?: string;
            /** The name of the pickup service (e.g., "Access point"). Required. */
            serviceName?: string;
        }
        interface PickupServicesPickupService {
            /** The name of the carrier (e.g., "UPS"). Always present. */
            carrierName?: string;
            /** The CLDR country code of the carrier (e.g., "US"). Always present. */
            country?: string;
            /** The name of the pickup service (e.g., "Access point"). Always present. */
            serviceName?: string;
        }
        interface PosCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: PosCustomBatchRequestEntry[];
        }
        interface PosCustomBatchRequestEntry {
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** The inventory to submit. Set this only if the method is inventory. */
            inventory?: PosInventory;
            /** The ID of the POS data provider. */
            merchantId?: string;
            method?: string;
            /** The sale information to submit. Set this only if the method is sale. */
            sale?: PosSale;
            /** The store information to submit. Set this only if the method is insert. */
            store?: PosStore;
            /** The store code. Set this only if the method is delete or get. */
            storeCode?: string;
            /** The ID of the account for which to get/submit data. */
            targetMerchantId?: string;
        }
        interface PosCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: PosCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#posCustomBatchResponse". */
            kind?: string;
        }
        interface PosCustomBatchResponseEntry {
            /** The ID of the request entry to which this entry responds. */
            batchId?: number;
            /** A list of errors defined if, and only if, the request failed. */
            errors?: Errors;
            /** The updated inventory information. */
            inventory?: PosInventory;
            /** Identifies what kind of resource this is. Value: the fixed string "content#posCustomBatchResponseEntry". */
            kind?: string;
            /** The updated sale information. */
            sale?: PosSale;
            /** The retrieved or updated store information. */
            store?: PosStore;
        }
        interface PosDataProviders {
            /** Country code. */
            country?: string;
            /** A list of POS data providers. */
            posDataProviders?: PosDataProvidersPosDataProvider[];
        }
        interface PosDataProvidersPosDataProvider {
            /** The display name of Pos data Provider. */
            displayName?: string;
            /** The full name of this POS data Provider. */
            fullName?: string;
            /** The ID of the account. */
            providerId?: string;
        }
        interface PosInventory {
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Global Trade Item Number. */
            gtin?: string;
            /** A unique identifier for the item. */
            itemId?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#posInventory". */
            kind?: string;
            /** The current price of the item. */
            price?: Price;
            /** The available quantity of the item. */
            quantity?: string;
            /** The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. */
            storeCode?: string;
            /** The CLDR territory code for the item. */
            targetCountry?: string;
            /** The inventory timestamp, in ISO 8601 format. */
            timestamp?: string;
        }
        interface PosInventoryRequest {
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Global Trade Item Number. */
            gtin?: string;
            /** A unique identifier for the item. */
            itemId?: string;
            /** The current price of the item. */
            price?: Price;
            /** The available quantity of the item. */
            quantity?: string;
            /** The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. */
            storeCode?: string;
            /** The CLDR territory code for the item. */
            targetCountry?: string;
            /** The inventory timestamp, in ISO 8601 format. */
            timestamp?: string;
        }
        interface PosInventoryResponse {
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Global Trade Item Number. */
            gtin?: string;
            /** A unique identifier for the item. */
            itemId?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#posInventoryResponse". */
            kind?: string;
            /** The current price of the item. */
            price?: Price;
            /** The available quantity of the item. */
            quantity?: string;
            /** The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. */
            storeCode?: string;
            /** The CLDR territory code for the item. */
            targetCountry?: string;
            /** The inventory timestamp, in ISO 8601 format. */
            timestamp?: string;
        }
        interface PosListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#posListResponse". */
            kind?: string;
            resources?: PosStore[];
        }
        interface PosSale {
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Global Trade Item Number. */
            gtin?: string;
            /** A unique identifier for the item. */
            itemId?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#posSale". */
            kind?: string;
            /** The price of the item. */
            price?: Price;
            /** The relative change of the available quantity. Negative for items returned. */
            quantity?: string;
            /** A unique ID to group items from the same sale event. */
            saleId?: string;
            /** The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. */
            storeCode?: string;
            /** The CLDR territory code for the item. */
            targetCountry?: string;
            /** The inventory timestamp, in ISO 8601 format. */
            timestamp?: string;
        }
        interface PosSaleRequest {
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Global Trade Item Number. */
            gtin?: string;
            /** A unique identifier for the item. */
            itemId?: string;
            /** The price of the item. */
            price?: Price;
            /** The relative change of the available quantity. Negative for items returned. */
            quantity?: string;
            /** A unique ID to group items from the same sale event. */
            saleId?: string;
            /** The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. */
            storeCode?: string;
            /** The CLDR territory code for the item. */
            targetCountry?: string;
            /** The inventory timestamp, in ISO 8601 format. */
            timestamp?: string;
        }
        interface PosSaleResponse {
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Global Trade Item Number. */
            gtin?: string;
            /** A unique identifier for the item. */
            itemId?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#posSaleResponse". */
            kind?: string;
            /** The price of the item. */
            price?: Price;
            /** The relative change of the available quantity. Negative for items returned. */
            quantity?: string;
            /** A unique ID to group items from the same sale event. */
            saleId?: string;
            /** The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business. */
            storeCode?: string;
            /** The CLDR territory code for the item. */
            targetCountry?: string;
            /** The inventory timestamp, in ISO 8601 format. */
            timestamp?: string;
        }
        interface PosStore {
            /** Identifies what kind of resource this is. Value: the fixed string "content#posStore". */
            kind?: string;
            /** The street address of the store. */
            storeAddress?: string;
            /** A store identifier that is unique for the given merchant. */
            storeCode?: string;
        }
        interface PostalCodeGroup {
            /** The CLDR territory code of the country the postal code group applies to. Required. */
            country?: string;
            /** The name of the postal code group, referred to in headers. Required. */
            name?: string;
            /** A range of postal codes. Required. */
            postalCodeRanges?: PostalCodeRange[];
        }
        interface PostalCodeRange {
            /**
             * A postal code or a pattern of the form prefix&#42; denoting the inclusive lower bound of the range defining the area. Examples values: "94108", "9410&#42;",
             * "9&#42;". Required.
             */
            postalCodeRangeBegin?: string;
            /**
             * A postal code or a pattern of the form prefix&#42; denoting the inclusive upper bound of the range defining the area. It must have the same length as
             * postalCodeRangeBegin: if postalCodeRangeBegin is a postal code then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin is a pattern
             * then postalCodeRangeEnd must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes
             * matching postalCodeRangeBegin.
             */
            postalCodeRangeEnd?: string;
        }
        interface Price {
            /** The currency of the price. */
            currency?: string;
            /** The price represented as a number. */
            value?: string;
        }
        interface Product {
            /** Additional URLs of images of the item. */
            additionalImageLinks?: string[];
            /** Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise. */
            adsGrouping?: string;
            /** Similar to ads_grouping, but only works on CPC. */
            adsLabels?: string[];
            /** Allows advertisers to override the item URL when the product is shown within the context of Product Ads. */
            adsRedirect?: string;
            /** Set to true if the item is targeted towards adults. */
            adult?: boolean;
            /** Target age group of the item. */
            ageGroup?: string;
            /** Availability status of the item. */
            availability?: string;
            /** The day a pre-ordered product becomes available for delivery, in ISO 8601 format. */
            availabilityDate?: string;
            /** Brand of the item. */
            brand?: string;
            /** The item's channel (online or local). */
            channel?: string;
            /** Color of the item. */
            color?: string;
            /** Condition or state of the item. */
            condition?: string;
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Cost of goods sold. Used for gross profit reporting. */
            costOfGoodsSold?: Price;
            /**
             * A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g.,
             * { "name": "size type", "value": "regular" }). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes
             * used for Shopping Actions.
             */
            customAttributes?: CustomAttribute[];
            /** Custom label 0 for custom grouping of items in a Shopping campaign. */
            customLabel0?: string;
            /** Custom label 1 for custom grouping of items in a Shopping campaign. */
            customLabel1?: string;
            /** Custom label 2 for custom grouping of items in a Shopping campaign. */
            customLabel2?: string;
            /** Custom label 3 for custom grouping of items in a Shopping campaign. */
            customLabel3?: string;
            /** Custom label 4 for custom grouping of items in a Shopping campaign. */
            customLabel4?: string;
            /** Description of the item. */
            description?: string;
            /** An identifier for an item for dynamic remarketing campaigns. */
            displayAdsId?: string;
            /** URL directly to your item's landing page for dynamic remarketing campaigns. */
            displayAdsLink?: string;
            /** Advertiser-specified recommendations. */
            displayAdsSimilarIds?: string[];
            /** Title of an item for dynamic remarketing campaigns. */
            displayAdsTitle?: string;
            /** Offer margin for dynamic remarketing campaigns. */
            displayAdsValue?: number;
            /** The energy efficiency class as defined in EU directive 2010/30/EU. */
            energyEfficiencyClass?: string;
            /** The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center). */
            excludedDestinations?: string[];
            /**
             * Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in
             * productstatuses as googleExpirationDate and might be earlier if expirationDate is too far in the future.
             */
            expirationDate?: string;
            /** Target gender of the item. */
            gender?: string;
            /** Google's category of the item (see Google product taxonomy). */
            googleProductCategory?: string;
            /** Global Trade Item Number (GTIN) of the item. */
            gtin?: string;
            /**
             * The REST ID of the product. Content API methods that operate on products take this as their productId parameter.
             * The REST ID for a product is of the form channel:contentLanguage:targetCountry:offerId.
             */
            id?: string;
            /**
             * False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the
             * Unique Product Identifier Rules for all target countries except for Canada.
             */
            identifierExists?: boolean;
            /** URL of an image of the item. */
            imageLink?: string;
            /**
             * The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included
             * unless provided in excludedDestinations.
             */
            includedDestinations?: string[];
            /** Number and amount of installments to pay for an item. Brazil only. */
            installment?: Installment;
            /** Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price. */
            isBundle?: boolean;
            /** Shared identifier for all variants of the same product. */
            itemGroupId?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#product". */
            kind?: string;
            /** URL directly linking to your item's page on your website. */
            link?: string;
            /** Loyalty points that users receive after purchasing the item. Japan only. */
            loyaltyPoints?: LoyaltyPoints;
            /** The material of which the item is made. */
            material?: string;
            /** The energy efficiency class as defined in EU directive 2010/30/EU. */
            maxEnergyEfficiencyClass?: string;
            /** Maximal product handling time (in business days). */
            maxHandlingTime?: string;
            /** The energy efficiency class as defined in EU directive 2010/30/EU. */
            minEnergyEfficiencyClass?: string;
            /** Minimal product handling time (in business days). */
            minHandlingTime?: string;
            /** Link to a mobile-optimized version of the landing page. */
            mobileLink?: string;
            /** Manufacturer Part Number (MPN) of the item. */
            mpn?: string;
            /** The number of identical products in a merchant-defined multipack. */
            multipack?: string;
            /**
             * A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon
             * submission. Only valid unicode characters are accepted. See the products feed specification for details.
             * Note: Content API methods that operate on products take the REST ID of the product, not this identifier.
             */
            offerId?: string;
            /** The item's pattern (e.g. polka dots). */
            pattern?: string;
            /** Price of the item. */
            price?: Price;
            /** Categories of the item (formatted as in products data specification). */
            productTypes?: string[];
            /** The unique ID of a promotion. */
            promotionIds?: string[];
            /** Advertised sale price of the item. */
            salePrice?: Price;
            /** Date range during which the item is on sale (see products data specification). */
            salePriceEffectiveDate?: string;
            /** The quantity of the product that is available for selling on Google. Supported only for online products. */
            sellOnGoogleQuantity?: string;
            /** Shipping rules. */
            shipping?: ProductShipping[];
            /** Height of the item for shipping. */
            shippingHeight?: ProductShippingDimension;
            /** The shipping label of the product, used to group product in account-level shipping rules. */
            shippingLabel?: string;
            /** Length of the item for shipping. */
            shippingLength?: ProductShippingDimension;
            /** Weight of the item for shipping. */
            shippingWeight?: ProductShippingWeight;
            /** Width of the item for shipping. */
            shippingWidth?: ProductShippingDimension;
            /**
             * Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value
             * (see size definition).
             */
            sizes?: string[];
            /** System in which the size is specified. Recommended for apparel items. */
            sizeSystem?: string;
            /** The cut of the item. Recommended for apparel items. */
            sizeType?: string;
            /** The source of the offer, i.e., how the offer was created. */
            source?: string;
            /** The CLDR territory code for the item. */
            targetCountry?: string;
            /** The tax category of the product, used to configure detailed tax nexus in account-level tax settings. */
            taxCategory?: string;
            /** Tax information. */
            taxes?: ProductTax[];
            /** Title of the item. */
            title?: string;
            /** The transit time label of the product, used to group product in account-level transit time tables. */
            transitTimeLabel?: string;
            /** The preference of the denominator of the unit price. */
            unitPricingBaseMeasure?: ProductUnitPricingBaseMeasure;
            /** The measure and dimension of an item. */
            unitPricingMeasure?: ProductUnitPricingMeasure;
        }
        interface ProductAmount {
            /** The pre-tax or post-tax price depending on the location of the order. */
            priceAmount?: Price;
            /** Remitted tax value. */
            remittedTaxAmount?: Price;
            /** Tax value. */
            taxAmount?: Price;
        }
        interface ProductsCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: ProductsCustomBatchRequestEntry[];
        }
        interface ProductsCustomBatchRequestEntry {
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** The Content API feed id. */
            feedId?: string;
            /** The ID of the managing account. */
            merchantId?: string;
            method?: string;
            /** The product to insert. Only required if the method is insert. */
            product?: Product;
            /** The ID of the product to get or delete. Only defined if the method is get or delete. */
            productId?: string;
        }
        interface ProductsCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: ProductsCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#productsCustomBatchResponse". */
            kind?: string;
        }
        interface ProductsCustomBatchResponseEntry {
            /** The ID of the request entry this entry responds to. */
            batchId?: number;
            /** A list of errors defined if and only if the request failed. */
            errors?: Errors;
            /** Identifies what kind of resource this is. Value: the fixed string "content#productsCustomBatchResponseEntry". */
            kind?: string;
            /** The inserted product. Only defined if the method is insert and if the request was successful. */
            product?: Product;
        }
        interface ProductShipping {
            /** The CLDR territory code of the country to which an item will ship. */
            country?: string;
            /** The location where the shipping is applicable, represented by a location group name. */
            locationGroupName?: string;
            /** The numeric ID of a location that the shipping rate applies to as defined in the AdWords API. */
            locationId?: string;
            /**
             * The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a &#42; wildcard, a range between
             * two postal codes or two postal code prefixes of equal length.
             */
            postalCode?: string;
            /** Fixed shipping price, represented as a number. */
            price?: Price;
            /** The geographic region to which a shipping rate applies. */
            region?: string;
            /** A free-form description of the service class or delivery speed. */
            service?: string;
        }
        interface ProductShippingDimension {
            /** The unit of value. */
            unit?: string;
            /** The dimension of the product used to calculate the shipping cost of the item. */
            value?: number;
        }
        interface ProductShippingWeight {
            /** The unit of value. */
            unit?: string;
            /** The weight of the product used to calculate the shipping cost of the item. */
            value?: number;
        }
        interface ProductsListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#productsListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of products. */
            nextPageToken?: string;
            resources?: Product[];
        }
        interface ProductStatus {
            /** Date on which the item has been created, in ISO 8601 format. */
            creationDate?: string;
            /** The intended destinations for the product. */
            destinationStatuses?: ProductStatusDestinationStatus[];
            /** Date on which the item expires in Google Shopping, in ISO 8601 format. */
            googleExpirationDate?: string;
            /** A list of all issues associated with the product. */
            itemLevelIssues?: ProductStatusItemLevelIssue[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#productStatus". */
            kind?: string;
            /** Date on which the item has been last updated, in ISO 8601 format. */
            lastUpdateDate?: string;
            /** The link to the product. */
            link?: string;
            /** The ID of the product for which status is reported. */
            productId?: string;
            /** The title of the product. */
            title?: string;
        }
        interface ProductStatusDestinationStatus {
            /** The name of the destination */
            destination?: string;
            status?: string;
        }
        interface ProductstatusesCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: ProductstatusesCustomBatchRequestEntry[];
        }
        interface ProductstatusesCustomBatchRequestEntry {
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. */
            destinations?: string[];
            includeAttributes?: boolean;
            /** The ID of the managing account. */
            merchantId?: string;
            method?: string;
            /** The ID of the product whose status to get. */
            productId?: string;
        }
        interface ProductstatusesCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: ProductstatusesCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#productstatusesCustomBatchResponse". */
            kind?: string;
        }
        interface ProductstatusesCustomBatchResponseEntry {
            /** The ID of the request entry this entry responds to. */
            batchId?: number;
            /** A list of errors, if the request failed. */
            errors?: Errors;
            /** Identifies what kind of resource this is. Value: the fixed string "content#productstatusesCustomBatchResponseEntry". */
            kind?: string;
            /** The requested product status. Only defined if the request was successful. */
            productStatus?: ProductStatus;
        }
        interface ProductstatusesListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#productstatusesListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of products statuses. */
            nextPageToken?: string;
            resources?: ProductStatus[];
        }
        interface ProductStatusItemLevelIssue {
            /** The attribute's name, if the issue is caused by a single attribute. */
            attributeName?: string;
            /** The error code of the issue. */
            code?: string;
            /** A short issue description in English. */
            description?: string;
            /** The destination the issue applies to. */
            destination?: string;
            /** A detailed issue description in English. */
            detail?: string;
            /** The URL of a web page to help with resolving this issue. */
            documentation?: string;
            /** Whether the issue can be resolved by the merchant. */
            resolution?: string;
            /** How this issue affects serving of the offer. */
            servability?: string;
        }
        interface ProductTax {
            /** The country within which the item is taxed, specified as a CLDR territory code. */
            country?: string;
            /** The numeric ID of a location that the tax rate applies to as defined in the AdWords API. */
            locationId?: string;
            /**
             * The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using &#42; wildcard, a range between two ZIP codes or two
             * ZIP code prefixes of equal length. Examples: 94114, 94&#42;, 94002-95460, 94&#42;-95&#42;.
             */
            postalCode?: string;
            /** The percentage of tax rate that applies to the item price. */
            rate?: number;
            /** The geographic region to which the tax rate applies. */
            region?: string;
            /** Set to true if tax is charged on shipping. */
            taxShip?: boolean;
        }
        interface ProductUnitPricingBaseMeasure {
            /** The unit of the denominator. */
            unit?: string;
            /** The denominator of the unit price. */
            value?: string;
        }
        interface ProductUnitPricingMeasure {
            /** The unit of the measure. */
            unit?: string;
            /** The measure of an item. */
            value?: number;
        }
        interface RateGroup {
            /**
             * A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the
             * rate group to apply. May only be empty for the last rate group of a service. Required.
             */
            applicableShippingLabels?: string[];
            /** A list of carrier rates that can be referred to by mainTable or singleValue. */
            carrierRates?: CarrierRate[];
            /** A table defining the rate group, when singleValue is not expressive enough. Can only be set if singleValue is not set. */
            mainTable?: Table;
            /** Name of the rate group. Optional. If set has to be unique within shipping service. */
            name?: string;
            /** The value of the rate group (e.g. flat rate $10). Can only be set if mainTable and subtables are not set. */
            singleValue?: Value;
            /** A list of subtables referred to by mainTable. Can only be set if mainTable is set. */
            subtables?: Table[];
        }
        interface RefundReason {
            description?: string;
            reasonCode?: string;
        }
        interface RegionalInventory {
            /** The availability of the product. */
            availability?: string;
            /** A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form. */
            customAttributes?: CustomAttribute[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#regionalInventory". */
            kind?: string;
            /** The price of the product. */
            price?: Price;
            /** The ID (name) of the region. */
            regionId?: string;
            /** The sale price of the product. Mandatory if sale_price_effective_date is defined. */
            salePrice?: Price;
            /** A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided. */
            salePriceEffectiveDate?: string;
        }
        interface RegionalinventoryCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: RegionalinventoryCustomBatchRequestEntry[];
        }
        interface RegionalinventoryCustomBatchRequestEntry {
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** The ID of the managing account. */
            merchantId?: string;
            method?: string;
            /** The ID of the product for which to update price and availability. */
            productId?: string;
            /** Price and availability of the product. */
            regionalInventory?: RegionalInventory;
        }
        interface RegionalinventoryCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: RegionalinventoryCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#regionalinventoryCustomBatchResponse". */
            kind?: string;
        }
        interface RegionalinventoryCustomBatchResponseEntry {
            /** The ID of the request entry this entry responds to. */
            batchId?: number;
            /** A list of errors defined if and only if the request failed. */
            errors?: Errors;
            /** Identifies what kind of resource this is. Value: the fixed string "content#regionalinventoryCustomBatchResponseEntry". */
            kind?: string;
            /** Price and availability of the product. */
            regionalInventory?: RegionalInventory;
        }
        interface ReturnAddress {
            /** The address. */
            address?: ReturnAddressAddress;
            /** The country of sale where the return address is applicable. */
            country?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#returnAddress". */
            kind?: string;
            /** The user-defined label of the return address. For the default address, use the label "default". */
            label?: string;
            /** The merchant's contact phone number regarding the return. */
            phoneNumber?: string;
            /** Return address ID generated by Google. */
            returnAddressId?: string;
        }
        interface ReturnAddressAddress {
            /** CLDR country code (e.g. "US"). */
            country?: string;
            /** City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs). */
            locality?: string;
            /** Postal code or ZIP (e.g. "94043"). */
            postalCode?: string;
            /** Name of the recipient to address returns to. */
            recipientName?: string;
            /** Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC"). */
            region?: string;
            /** Street-level part of the address. May be up to two lines, each line specified as an array element. */
            streetAddress?: string[];
        }
        interface ReturnaddressCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: ReturnaddressCustomBatchRequestEntry[];
        }
        interface ReturnaddressCustomBatchRequestEntry {
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** The Merchant Center account ID. */
            merchantId?: string;
            method?: string;
            /** The return address to submit. Set this only if the method is insert. */
            returnAddress?: ReturnAddress;
            /** The return address ID. Set this only if the method is delete or get. */
            returnAddressId?: string;
        }
        interface ReturnaddressCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: ReturnaddressCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#returnaddressCustomBatchResponse". */
            kind?: string;
        }
        interface ReturnaddressCustomBatchResponseEntry {
            /** The ID of the request entry to which this entry responds. */
            batchId?: number;
            /** A list of errors defined if, and only if, the request failed. */
            errors?: Errors;
            /** Identifies what kind of resource this is. Value: the fixed string "content#returnaddressCustomBatchResponseEntry". */
            kind?: string;
            /** The retrieved return address. */
            returnAddress?: ReturnAddress;
        }
        interface ReturnaddressListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#returnaddressListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of addresses. */
            nextPageToken?: string;
            resources?: ReturnAddress[];
        }
        interface ReturnPolicy {
            /** The country of sale where the return policy is applicable. */
            country?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "content#returnPolicy". */
            kind?: string;
            /** The user-defined label of the return policy. For the default policy, use the label "default". */
            label?: string;
            /** The name of the policy as shown in Merchant Center. */
            name?: string;
            /** Return reasons that will incur return fees. */
            nonFreeReturnReasons?: string[];
            /** The policy. */
            policy?: ReturnPolicyPolicy;
            /** Return policy ID generated by Google. */
            returnPolicyId?: string;
            /** An optional list of seasonal overrides. */
            seasonalOverrides?: ReturnPolicySeasonalOverride[];
        }
        interface ReturnpolicyCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: ReturnpolicyCustomBatchRequestEntry[];
        }
        interface ReturnpolicyCustomBatchRequestEntry {
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** The Merchant Center account ID. */
            merchantId?: string;
            method?: string;
            /** The return policy to submit. Set this only if the method is insert. */
            returnPolicy?: ReturnPolicy;
            /** The return policy ID. Set this only if the method is delete or get. */
            returnPolicyId?: string;
        }
        interface ReturnpolicyCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: ReturnpolicyCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#returnpolicyCustomBatchResponse". */
            kind?: string;
        }
        interface ReturnpolicyCustomBatchResponseEntry {
            /** The ID of the request entry to which this entry responds. */
            batchId?: number;
            /** A list of errors defined if, and only if, the request failed. */
            errors?: Errors;
            /** Identifies what kind of resource this is. Value: the fixed string "content#returnpolicyCustomBatchResponseEntry". */
            kind?: string;
            /** The retrieved return policy. */
            returnPolicy?: ReturnPolicy;
        }
        interface ReturnpolicyListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#returnpolicyListResponse". */
            kind?: string;
            resources?: ReturnPolicy[];
        }
        interface ReturnPolicyPolicy {
            /**
             * Last day for returning the items. In ISO 8601 format. When specifying the return window like this, set the policy type to "lastReturnDate". Use this
             * for seasonal overrides only.
             */
            lastReturnDate?: string;
            /**
             * The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. When specifying the
             * return window like this, set the policy type to "numberOfDaysAfterDelivery". Acceptable values are 30, 45, 60, 90, 100, 180, 270 and 365 for the
             * default policy. Additional policies further allow 14, 15, 21 and 28 days, but note that for most items a minimum of 30 days is required for returns.
             * Exceptions may be made for electronics. A policy of less than 30 days can only be applied to those items.
             */
            numberOfDays?: string;
            /**
             * Policy type. Use "lastReturnDate" for seasonal overrides only. Note that for most items a minimum of 30 days is required for returns. Exceptions may be
             * made for electronics or non-returnable items such as food, perishables, and living things. A policy of less than 30 days can only be applied to those
             * items.
             */
            type?: string;
        }
        interface ReturnPolicySeasonalOverride {
            /** Last day on which the override applies. In ISO 8601 format. */
            endDate?: string;
            /** The name of the seasonal override as shown in Merchant Center. */
            name?: string;
            /** The policy which is in effect during that time. */
            policy?: ReturnPolicyPolicy;
            /** First day on which the override applies. In ISO 8601 format. */
            startDate?: string;
        }
        interface ReturnShipment {
            creationDate?: string;
            deliveryDate?: string;
            returnMethodType?: string;
            shipmentId?: string;
            shipmentTrackingInfos?: ShipmentTrackingInfo[];
            shippingDate?: string;
            state?: string;
        }
        interface Row {
            /**
             * The list of cells that constitute the row. Must have the same length as columnHeaders for two-dimensional tables, a length of 1 for one-dimensional
             * tables. Required.
             */
            cells?: Value[];
        }
        interface Service {
            /** A boolean exposing the active status of the shipping service. Required. */
            active?: boolean;
            /** The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups. */
            currency?: string;
            /** The CLDR territory code of the country to which the service applies. Required. */
            deliveryCountry?: string;
            /** Time spent in various aspects from order to the delivery of the product. Required. */
            deliveryTime?: DeliveryTime;
            /** Eligibility for this service. */
            eligibility?: string;
            /**
             * Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have
             * the same currency.
             */
            minimumOrderValue?: Price;
            /** Free-form name of the service. Must be unique within target account. Required. */
            name?: string;
            /**
             * The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved via the
             * getSupportedPickupServices method. Required if and only if the service delivery type is pickup.
             */
            pickupService?: PickupCarrierService;
            /**
             * Shipping rate group definitions. Only the last one is allowed to have an empty applicableShippingLabels, which means "everything else". The other
             * applicableShippingLabels must not overlap.
             */
            rateGroups?: RateGroup[];
            /** Type of locations this service ships orders to. */
            shipmentType?: string;
        }
        interface ShipmentInvoice {
            /** [required] Invoice summary. */
            invoiceSummary?: InvoiceSummary;
            /** [required] Invoice details per line item. */
            lineItemInvoices?: ShipmentInvoiceLineItemInvoice[];
            /**
             * [required] ID of the shipment group. It is assigned by the merchant in the shipLineItems method and is used to group multiple line items that have the
             * same kind of shipping charges.
             */
            shipmentGroupId?: string;
        }
        interface ShipmentInvoiceLineItemInvoice {
            /** ID of the line item. Either lineItemId or productId must be set. */
            lineItemId?: string;
            /** ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set. */
            productId?: string;
            /**
             * [required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units
             * that are the same while units that differ must be assigned a different ID (for example: free or promotional units).
             */
            shipmentUnitIds?: string[];
            /** [required] Invoice details for a single unit. */
            unitInvoice?: UnitInvoice;
        }
        interface ShipmentTrackingInfo {
            carrier?: string;
            trackingNumber?: string;
        }
        interface ShippingSettings {
            /** The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses. */
            accountId?: string;
            /** A list of postal code groups that can be referred to in services. Optional. */
            postalCodeGroups?: PostalCodeGroup[];
            /** The target account's list of services. Optional. */
            services?: Service[];
        }
        interface ShippingsettingsCustomBatchRequest {
            /** The request entries to be processed in the batch. */
            entries?: ShippingsettingsCustomBatchRequestEntry[];
        }
        interface ShippingsettingsCustomBatchRequestEntry {
            /** The ID of the account for which to get/update account shipping settings. */
            accountId?: string;
            /** An entry ID, unique within the batch request. */
            batchId?: number;
            /** The ID of the managing account. */
            merchantId?: string;
            method?: string;
            /** The account shipping settings to update. Only defined if the method is update. */
            shippingSettings?: ShippingSettings;
        }
        interface ShippingsettingsCustomBatchResponse {
            /** The result of the execution of the batch requests. */
            entries?: ShippingsettingsCustomBatchResponseEntry[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsCustomBatchResponse". */
            kind?: string;
        }
        interface ShippingsettingsCustomBatchResponseEntry {
            /** The ID of the request entry to which this entry responds. */
            batchId?: number;
            /** A list of errors defined if, and only if, the request failed. */
            errors?: Errors;
            /** Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsCustomBatchResponseEntry". */
            kind?: string;
            /** The retrieved or updated account shipping settings. */
            shippingSettings?: ShippingSettings;
        }
        interface ShippingsettingsGetSupportedCarriersResponse {
            /** A list of supported carriers. May be empty. */
            carriers?: CarriersCarrier[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedCarriersResponse". */
            kind?: string;
        }
        interface ShippingsettingsGetSupportedHolidaysResponse {
            /** A list of holidays applicable for delivery guarantees. May be empty. */
            holidays?: HolidaysHoliday[];
            /** Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedHolidaysResponse". */
            kind?: string;
        }
        interface ShippingsettingsGetSupportedPickupServicesResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsGetSupportedPickupServicesResponse". */
            kind?: string;
            /** A list of supported pickup services. May be empty. */
            pickupServices?: PickupServicesPickupService[];
        }
        interface ShippingsettingsListResponse {
            /** Identifies what kind of resource this is. Value: the fixed string "content#shippingsettingsListResponse". */
            kind?: string;
            /** The token for the retrieval of the next page of shipping settings. */
            nextPageToken?: string;
            resources?: ShippingSettings[];
        }
        interface Table {
            /** Headers of the table's columns. Optional: if not set then the table has only one dimension. */
            columnHeaders?: Headers;
            /** Name of the table. Required for subtables, ignored for the main table. */
            name?: string;
            /** Headers of the table's rows. Required. */
            rowHeaders?: Headers;
            /** The list of rows that constitute the table. Must have the same length as rowHeaders. Required. */
            rows?: Row[];
        }
        interface TestOrder {
            /** Whether the orderinvoices service should support this order. */
            enableOrderinvoices?: boolean;
            /** Identifies what kind of resource this is. Value: the fixed string "content#testOrder". */
            kind?: string;
            /** Line items that are ordered. At least one line item must be provided. */
            lineItems?: TestOrderLineItem[];
            /** Determines if test order must be pulled by merchant or pushed to merchant via push integration. */
            notificationMode?: string;
            /** The billing address. */
            predefinedBillingAddress?: string;
            /** Identifier of one of the predefined delivery addresses for the delivery. */
            predefinedDeliveryAddress?: string;
            /** Email address of the customer. */
            predefinedEmail?: string;
            /** Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type pickup. */
            predefinedPickupDetails?: string;
            /** Promotions associated with the order. */
            promotions?: OrderPromotion[];
            /**
             * The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable.
             * Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states.
             */
            shippingCost?: Price;
            /** The requested shipping option. */
            shippingOption?: string;
        }
        interface TestOrderLineItem {
            /** Product data from the time of the order placement. */
            product?: TestOrderLineItemProduct;
            /** Number of items ordered. */
            quantityOrdered?: number;
            /** Details of the return policy for the line item. */
            returnInfo?: OrderLineItemReturnInfo;
            /** Details of the requested shipping for the line item. */
            shippingDetails?: OrderLineItemShippingDetails;
        }
        interface TestOrderLineItemProduct {
            /** Brand of the item. */
            brand?: string;
            /** Condition or state of the item. */
            condition?: string;
            /** The two-letter ISO 639-1 language code for the item. */
            contentLanguage?: string;
            /** Fees for the item. Optional. */
            fees?: OrderLineItemProductFee[];
            /** Global Trade Item Number (GTIN) of the item. Optional. */
            gtin?: string;
            /** URL of an image of the item. */
            imageLink?: string;
            /** Shared identifier for all variants of the same product. Optional. */
            itemGroupId?: string;
            /** Manufacturer Part Number (MPN) of the item. Optional. */
            mpn?: string;
            /** An identifier of the item. */
            offerId?: string;
            /**
             * The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings
             * from Merchant Center are applied.
             */
            price?: Price;
            /** The CLDR territory code of the target country of the product. */
            targetCountry?: string;
            /** The title of the product. */
            title?: string;
            /** Variant attributes for the item. Optional. */
            variantAttributes?: OrderLineItemProductVariantAttribute[];
        }
        interface TransitTable {
            /**
             * A list of postal group names. The last value can be "all other locations". Example: ["zone 1", "zone 2", "all other locations"]. The referred postal
             * code groups must match the delivery country of the service.
             */
            postalCodeGroupNames?: string[];
            rows?: TransitTableTransitTimeRow[];
            /** A list of transit time labels. The last value can be "all other labels". Example: ["food", "electronics", "all other labels"]. */
            transitTimeLabels?: string[];
        }
        interface TransitTableTransitTimeRow {
            values?: TransitTableTransitTimeRowTransitTimeValue[];
        }
        interface TransitTableTransitTimeRowTransitTimeValue {
            /** Must be greater than or equal to minTransitTimeInDays. */
            maxTransitTimeInDays?: number;
            /** Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery. */
            minTransitTimeInDays?: number;
        }
        interface UnitInvoice {
            /** Additional charges for a unit, e.g. shipping costs. */
            additionalCharges?: UnitInvoiceAdditionalCharge[];
            /** [required] Pre-tax or post-tax price of the unit depending on the locality of the order. */
            unitPrice?: Price;
            /** Tax amounts to apply to the unit price. */
            unitPriceTaxes?: UnitInvoiceTaxLine[];
        }
        interface UnitInvoiceAdditionalCharge {
            /** [required] Amount of the additional charge. */
            additionalChargeAmount?: Amount;
            /** [required] Type of the additional charge. */
            type?: string;
        }
        interface UnitInvoiceTaxLine {
            /** [required] Tax amount for the tax type. */
            taxAmount?: Price;
            /** Optional name of the tax type. This should only be provided if taxType is otherFeeTax. */
            taxName?: string;
            /** [required] Type of the tax. */
            taxType?: string;
        }
        interface Value {
            /** The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set. */
            carrierRateName?: string;
            /** A flat rate. Can only be set if all other fields are not set. */
            flatRate?: Price;
            /** If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set. */
            noShipping?: boolean;
            /** A percentage of the price represented as a number in decimal notation (e.g., "5.4"). Can only be set if all other fields are not set. */
            pricePercentage?: string;
            /** The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set. */
            subtableName?: string;
        }
        interface Weight {
            /** The weight unit. */
            unit?: string;
            /** The weight represented as a number. */
            value?: string;
        }
        interface AccountsResource {
            /** Returns information about the authenticated user. */
            authinfo(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<AccountsAuthInfoResponse>;
            /** Claims the website of a Merchant Center sub-account. */
            claimwebsite(request?: {
                /** The ID of the account whose website is claimed. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Only available to selected merchants. When set to True, this flag removes any existing claim on the requested website by another account and replaces
                 * it with a claim from this account.
                 */
                overwrite?: boolean;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<AccountsClaimWebsiteResponse>;
            /** Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: AccountsCustomBatchRequest;
            }): Request<AccountsCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: AccountsCustomBatchRequest): Request<AccountsCustomBatchResponse>;
            /** Deletes a Merchant Center sub-account. */
            delete(request?: {
                /** The ID of the account. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** Flag to delete sub-accounts with products. The default value is false. */
                force?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<void>;
            /** Retrieves a Merchant Center account. */
            get(request?: {
                /** The ID of the account. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<Account>;
            /** Creates a Merchant Center sub-account. */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the managing account. This must be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Account;
            }): Request<Account>;
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the managing account. This must be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Account): Request<Account>;
            /** Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId. */
            link(request: {
                /** The ID of the account that should be linked. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: AccountsLinkRequest;
            }): Request<AccountsLinkResponse>;
            link(request: {
                /** The ID of the account that should be linked. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: AccountsLinkRequest): Request<AccountsLinkResponse>;
            /** Lists the sub-accounts in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of accounts to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the managing account. This must be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<AccountsListResponse>;
            /** Returns the list of accounts linked to your Merchant Center account. */
            listlinks(request?: {
                /** The ID of the account for which to list links. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of links to return in the response, used for pagination. */
                maxResults?: number;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<AccountsListLinksResponse>;
            /** Updates a Merchant Center account. */
            update(request: {
                /** The ID of the account. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Account;
            }): Request<Account>;
            update(request: {
                /** The ID of the account. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Account): Request<Account>;
        }
        interface AccountstatusesResource {
            /** Retrieves multiple Merchant Center account statuses in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: AccountstatusesCustomBatchRequest;
            }): Request<AccountstatusesCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: AccountstatusesCustomBatchRequest): Request<AccountstatusesCustomBatchResponse>;
            /** Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts. */
            get(request?: {
                /** The ID of the account. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. */
                destinations?: string | string[];
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<AccountStatus>;
            /** Lists the statuses of the sub-accounts in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. */
                destinations?: string | string[];
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of account statuses to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the managing account. This must be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<AccountstatusesListResponse>;
        }
        interface AccounttaxResource {
            /** Retrieves and updates tax settings of multiple accounts in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: AccounttaxCustomBatchRequest;
            }): Request<AccounttaxCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: AccounttaxCustomBatchRequest): Request<AccounttaxCustomBatchResponse>;
            /** Retrieves the tax settings of the account. */
            get(request?: {
                /** The ID of the account for which to get/update account tax settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<AccountTax>;
            /** Lists the tax settings of the sub-accounts in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of tax settings to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the managing account. This must be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<AccounttaxListResponse>;
            /** Updates the tax settings of the account. */
            update(request: {
                /** The ID of the account for which to get/update account tax settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: AccountTax;
            }): Request<AccountTax>;
            update(request: {
                /** The ID of the account for which to get/update account tax settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: AccountTax): Request<AccountTax>;
        }
        interface DatafeedsResource {
            /** Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: DatafeedsCustomBatchRequest;
            }): Request<DatafeedsCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: DatafeedsCustomBatchRequest): Request<DatafeedsCustomBatchResponse>;
            /** Deletes a datafeed configuration from your Merchant Center account. */
            delete(request?: {
                /** Data format for the response. */
                alt?: string;
                /** The ID of the datafeed. */
                datafeedId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the datafeed. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<void>;
            /** Invokes a fetch for the datafeed in your Merchant Center account. */
            fetchnow(request?: {
                /** Data format for the response. */
                alt?: string;
                /** The ID of the datafeed to be fetched. */
                datafeedId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the datafeed. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<DatafeedsFetchNowResponse>;
            /** Retrieves a datafeed configuration from your Merchant Center account. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /** The ID of the datafeed. */
                datafeedId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the datafeed. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<Datafeed>;
            /** Registers a datafeed configuration with your Merchant Center account. */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the datafeed. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Datafeed;
            }): Request<Datafeed>;
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the datafeed. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Datafeed): Request<Datafeed>;
            /** Lists the configurations for datafeeds in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of products to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the account that manages the datafeeds. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<DatafeedsListResponse>;
            /** Updates a datafeed configuration of your Merchant Center account. */
            update(request: {
                /** Data format for the response. */
                alt?: string;
                /** The ID of the datafeed. */
                datafeedId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the datafeed. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Datafeed;
            }): Request<Datafeed>;
            update(request: {
                /** Data format for the response. */
                alt?: string;
                /** The ID of the datafeed. */
                datafeedId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the datafeed. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Datafeed): Request<Datafeed>;
        }
        interface DatafeedstatusesResource {
            /** Gets multiple Merchant Center datafeed statuses in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: DatafeedstatusesCustomBatchRequest;
            }): Request<DatafeedstatusesCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: DatafeedstatusesCustomBatchRequest): Request<DatafeedstatusesCustomBatchResponse>;
            /** Retrieves the status of a datafeed from your Merchant Center account. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /**
                 * The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is
                 * required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.
                 */
                country?: string;
                /** The ID of the datafeed. */
                datafeedId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is
                 * required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.
                 */
                language?: string;
                /** The ID of the account that manages the datafeed. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<DatafeedStatus>;
            /** Lists the statuses of the datafeeds in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of products to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the account that manages the datafeeds. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<DatafeedstatusesListResponse>;
        }
        interface LiasettingsResource {
            /** Retrieves and/or updates the LIA settings of multiple accounts in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: LiasettingsCustomBatchRequest;
            }): Request<LiasettingsCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: LiasettingsCustomBatchRequest): Request<LiasettingsCustomBatchResponse>;
            /** Retrieves the LIA settings of the account. */
            get(request?: {
                /** The ID of the account for which to get or update LIA settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<LiaSettings>;
            /** Retrieves the list of accessible Google My Business accounts. */
            getaccessiblegmbaccounts(request?: {
                /** The ID of the account for which to retrieve accessible Google My Business accounts. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<LiasettingsGetAccessibleGmbAccountsResponse>;
            /** Lists the LIA settings of the sub-accounts in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of LIA settings to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the managing account. This must be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<LiasettingsListResponse>;
            /** Retrieves the list of POS data providers that have active settings for the all eiligible countries. */
            listposdataproviders(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<LiasettingsListPosDataProvidersResponse>;
            /** Requests access to a specified Google My Business account. */
            requestgmbaccess(request?: {
                /** The ID of the account for which GMB access is requested. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The email of the Google My Business account. */
                gmbEmail: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<LiasettingsRequestGmbAccessResponse>;
            /** Requests inventory validation for the specified country. */
            requestinventoryverification(request?: {
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** The country for which inventory validation is requested. */
                country: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<LiasettingsRequestInventoryVerificationResponse>;
            /** Sets the inventory verification contract for the specified country. */
            setinventoryverificationcontact(request?: {
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** The email of the inventory verification contact. */
                contactEmail: string;
                /** The name of the inventory verification contact. */
                contactName: string;
                /** The country for which inventory verification is requested. */
                country: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The language for which inventory verification is requested. */
                language: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<LiasettingsSetInventoryVerificationContactResponse>;
            /** Sets the POS data provider for the specified country. */
            setposdataprovider(request?: {
                /** The ID of the account for which to retrieve accessible Google My Business accounts. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** The country for which the POS data provider is selected. */
                country: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of POS data provider. */
                posDataProviderId?: string;
                /** The account ID by which this merchant is known to the POS data provider. */
                posExternalAccountId?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<LiasettingsSetPosDataProviderResponse>;
            /** Updates the LIA settings of the account. */
            update(request: {
                /** The ID of the account for which to get or update LIA settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: LiaSettings;
            }): Request<LiaSettings>;
            update(request: {
                /** The ID of the account for which to get or update LIA settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: LiaSettings): Request<LiaSettings>;
        }
        interface OrderinvoicesResource {
            /** Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders. */
            createchargeinvoice(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrderinvoicesCreateChargeInvoiceRequest;
            }): Request<OrderinvoicesCreateChargeInvoiceResponse>;
            createchargeinvoice(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrderinvoicesCreateChargeInvoiceRequest): Request<OrderinvoicesCreateChargeInvoiceResponse>;
            /**
             * Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items
             * that have previously been charged using createChargeInvoice. All amounts (except for the summary) are incremental with respect to the previous invoice.
             */
            createrefundinvoice(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrderinvoicesCreateRefundInvoiceRequest;
            }): Request<OrderinvoicesCreateRefundInvoiceResponse>;
            createrefundinvoice(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrderinvoicesCreateRefundInvoiceRequest): Request<OrderinvoicesCreateRefundInvoiceResponse>;
        }
        interface OrderreportsResource {
            /** Retrieves a report for disbursements from your Merchant Center account. */
            listdisbursements(request?: {
                /** Data format for the response. */
                alt?: string;
                /** The last date which disbursements occurred. In ISO 8601 format. Default: current date. */
                disbursementEndDate?: string;
                /** The first date which disbursements occurred. In ISO 8601 format. */
                disbursementStartDate: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of disbursements to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<OrderreportsListDisbursementsResponse>;
            /** Retrieves a list of transactions for a disbursement from your Merchant Center account. */
            listtransactions(request?: {
                /** Data format for the response. */
                alt?: string;
                /** The Google-provided ID of the disbursement (found in Wallet). */
                disbursementId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of disbursements to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The last date in which transaction occurred. In ISO 8601 format. Default: current date. */
                transactionEndDate?: string;
                /** The first date in which transaction occurred. In ISO 8601 format. */
                transactionStartDate: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<OrderreportsListTransactionsResponse>;
        }
        interface OrderreturnsResource {
            /** Retrieves an order return from your Merchant Center account. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Merchant order return ID generated by Google. */
                returnId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<MerchantOrderReturn>;
            /** Lists order returns in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Obtains order returns created before this date (inclusively), in ISO 8601 format. */
                createdEndDate?: string;
                /** Obtains order returns created after this date (inclusively), in ISO 8601 format. */
                createdStartDate?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value
                 * is 250 returns per page.
                 */
                maxResults?: number;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Return the results in the specified order. */
                orderBy?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<OrderreturnsListResponse>;
        }
        interface OrdersResource {
            /** Marks an order as acknowledged. */
            acknowledge(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersAcknowledgeRequest;
            }): Request<OrdersAcknowledgeResponse>;
            acknowledge(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersAcknowledgeRequest): Request<OrdersAcknowledgeResponse>;
            /** Sandbox only. Moves a test order from state "inProgress" to state "pendingShipment". */
            advancetestorder(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the test order to modify. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<OrdersAdvanceTestOrderResponse>;
            /** Cancels all line items in an order, making a full refund. */
            cancel(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order to cancel. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersCancelRequest;
            }): Request<OrdersCancelResponse>;
            cancel(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order to cancel. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersCancelRequest): Request<OrdersCancelResponse>;
            /** Cancels a line item, making a full refund. */
            cancellineitem(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersCancelLineItemRequest;
            }): Request<OrdersCancelLineItemResponse>;
            cancellineitem(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersCancelLineItemRequest): Request<OrdersCancelLineItemResponse>;
            /** Sandbox only. Cancels a test order for customer-initiated cancellation. */
            canceltestorderbycustomer(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the test order to cancel. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersCancelTestOrderByCustomerRequest;
            }): Request<OrdersCancelTestOrderByCustomerResponse>;
            canceltestorderbycustomer(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the test order to cancel. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersCancelTestOrderByCustomerRequest): Request<OrdersCancelTestOrderByCustomerResponse>;
            /** Sandbox only. Creates a test order. */
            createtestorder(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that should manage the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersCreateTestOrderRequest;
            }): Request<OrdersCreateTestOrderResponse>;
            createtestorder(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that should manage the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersCreateTestOrderRequest): Request<OrdersCreateTestOrderResponse>;
            /** Sandbox only. Creates a test return. */
            createtestreturn(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersCreateTestReturnRequest;
            }): Request<OrdersCreateTestReturnResponse>;
            createtestreturn(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersCreateTestReturnRequest): Request<OrdersCreateTestReturnResponse>;
            /** Retrieves an order from your Merchant Center account. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<Order>;
            /** Retrieves an order using merchant order ID. */
            getbymerchantorderid(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** The merchant order ID to be looked for. */
                merchantOrderId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<OrdersGetByMerchantOrderIdResponse>;
            /** Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox. */
            gettestordertemplate(request?: {
                /** Data format for the response. */
                alt?: string;
                /** The country of the template to retrieve. Defaults to US. */
                country?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that should manage the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The name of the template to retrieve. */
                templateName: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<OrdersGetTestOrderTemplateResponse>;
            /**
             * Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in
             * store).
             * Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to
             * prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate
             * with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return.
             */
            instorerefundlineitem(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersInStoreRefundLineItemRequest;
            }): Request<OrdersInStoreRefundLineItemResponse>;
            instorerefundlineitem(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersInStoreRefundLineItemRequest): Request<OrdersInStoreRefundLineItemResponse>;
            /** Lists the orders in your Merchant Center account. */
            list(request?: {
                /**
                 * Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that
                 * have not been acknowledged.
                 * We recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.
                 */
                acknowledged?: boolean;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250
                 * orders per page.
                 */
                maxResults?: number;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Order results by placement date in descending or ascending order.
                 *
                 * Acceptable values are:
                 * - placedDateAsc
                 * - placedDateDesc
                 */
                orderBy?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Obtains orders placed before this date (exclusively), in ISO 8601 format. */
                placedDateEnd?: string;
                /** Obtains orders placed after this date (inclusively), in ISO 8601 format. */
                placedDateStart?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Obtains orders that match any of the specified statuses. Please note that active is a shortcut for pendingShipment and partiallyShipped, and completed
                 * is a shortcut for shipped, partiallyDelivered, delivered, partiallyReturned, returned, and canceled.
                 */
                statuses?: string | string[];
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<OrdersListResponse>;
            /** Rejects return on an line item. */
            rejectreturnlineitem(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersRejectReturnLineItemRequest;
            }): Request<OrdersRejectReturnLineItemResponse>;
            rejectreturnlineitem(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersRejectReturnLineItemRequest): Request<OrdersRejectReturnLineItemResponse>;
            /** Returns and refunds a line item. Note that this method can only be called on fully shipped orders. */
            returnrefundlineitem(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersReturnRefundLineItemRequest;
            }): Request<OrdersReturnRefundLineItemResponse>;
            returnrefundlineitem(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersReturnRefundLineItemRequest): Request<OrdersReturnRefundLineItemResponse>;
            /**
             * Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with
             * additional structured information about a line item that cannot be provided via other methods. Submitted key-value pairs can be retrieved as part of
             * the orders resource.
             */
            setlineitemmetadata(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersSetLineItemMetadataRequest;
            }): Request<OrdersSetLineItemMetadataResponse>;
            setlineitemmetadata(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersSetLineItemMetadataRequest): Request<OrdersSetLineItemMetadataResponse>;
            /** Marks line item(s) as shipped. */
            shiplineitems(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersShipLineItemsRequest;
            }): Request<OrdersShipLineItemsResponse>;
            shiplineitems(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersShipLineItemsRequest): Request<OrdersShipLineItemsResponse>;
            /** Updates ship by and delivery by dates for a line item. */
            updatelineitemshippingdetails(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersUpdateLineItemShippingDetailsRequest;
            }): Request<OrdersUpdateLineItemShippingDetailsResponse>;
            updatelineitemshippingdetails(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersUpdateLineItemShippingDetailsRequest): Request<OrdersUpdateLineItemShippingDetailsResponse>;
            /** Updates the merchant order ID for a given order. */
            updatemerchantorderid(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersUpdateMerchantOrderIdRequest;
            }): Request<OrdersUpdateMerchantOrderIdResponse>;
            updatemerchantorderid(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersUpdateMerchantOrderIdRequest): Request<OrdersUpdateMerchantOrderIdResponse>;
            /** Updates a shipment's status, carrier, and/or tracking ID. */
            updateshipment(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: OrdersUpdateShipmentRequest;
            }): Request<OrdersUpdateShipmentResponse>;
            updateshipment(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that manages the order. This cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The ID of the order. */
                orderId: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: OrdersUpdateShipmentRequest): Request<OrdersUpdateShipmentResponse>;
        }
        interface PosResource {
            /** Batches multiple POS-related calls in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: PosCustomBatchRequest;
            }): Request<PosCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: PosCustomBatchRequest): Request<PosCustomBatchResponse>;
            /** Deletes a store for the given merchant. */
            delete(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** A store code that is unique per merchant. */
                storeCode: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<void>;
            /** Retrieves information about the given store. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** A store code that is unique per merchant. */
                storeCode: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<PosStore>;
            /** Creates a store for the given merchant. */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: PosStore;
            }): Request<PosStore>;
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: PosStore): Request<PosStore>;
            /** Submit inventory for the given merchant. */
            inventory(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: PosInventoryRequest;
            }): Request<PosInventoryResponse>;
            inventory(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: PosInventoryRequest): Request<PosInventoryResponse>;
            /** Lists the stores of the target merchant. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<PosListResponse>;
            /** Submit a sale event for the given merchant. */
            sale(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: PosSaleRequest;
            }): Request<PosSaleResponse>;
            sale(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the POS or inventory data provider. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** The ID of the target merchant. */
                targetMerchantId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: PosSaleRequest): Request<PosSaleResponse>;
        }
        interface ProductsResource {
            /** Retrieves, inserts, and deletes multiple products in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ProductsCustomBatchRequest;
            }): Request<ProductsCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ProductsCustomBatchRequest): Request<ProductsCustomBatchResponse>;
            /** Deletes a product from your Merchant Center account. */
            delete(request?: {
                /** Data format for the response. */
                alt?: string;
                /** The Content API Supplemental Feed ID. */
                feedId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that contains the product. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** The REST ID of the product. */
                productId: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<void>;
            /** Retrieves a product from your Merchant Center account. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that contains the product. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** The REST ID of the product. */
                productId: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<Product>;
            /**
             * Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this
             * method updates that entry.
             */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** The Content API Supplemental Feed ID. */
                feedId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that contains the product. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Product;
            }): Request<Product>;
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** The Content API Supplemental Feed ID. */
                feedId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that contains the product. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Product): Request<Product>;
            /** Lists the products in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of products to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the account that contains the products. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ProductsListResponse>;
        }
        interface ProductstatusesResource {
            /** Gets the statuses of multiple products in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ProductstatusesCustomBatchRequest;
            }): Request<ProductstatusesCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ProductstatusesCustomBatchRequest): Request<ProductstatusesCustomBatchResponse>;
            /** Gets the status of a product from your Merchant Center account. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /** If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. */
                destinations?: string | string[];
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that contains the product. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** The REST ID of the product. */
                productId: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ProductStatus>;
            /** Lists the statuses of the products in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination. */
                destinations?: string | string[];
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of product statuses to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the account that contains the products. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ProductstatusesListResponse>;
        }
        interface RegionalinventoryResource {
            /** Updates regional inventory for multiple products or regions in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: RegionalinventoryCustomBatchRequest;
            }): Request<RegionalinventoryCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: RegionalinventoryCustomBatchRequest): Request<RegionalinventoryCustomBatchResponse>;
            /**
             * Update the regional inventory of a product in your Merchant Center account. If a regional inventory with the same region ID already exists, this method
             * updates that entry.
             */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that contains the product. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** The REST ID of the product for which to update the regional inventory. */
                productId: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: RegionalInventory;
            }): Request<RegionalInventory>;
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account that contains the product. This account cannot be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** The REST ID of the product for which to update the regional inventory. */
                productId: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: RegionalInventory): Request<RegionalInventory>;
        }
        interface ReturnaddressResource {
            /** Batches multiple return address related calls in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ReturnaddressCustomBatchRequest;
            }): Request<ReturnaddressCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ReturnaddressCustomBatchRequest): Request<ReturnaddressCustomBatchResponse>;
            /** Deletes a return address for the given Merchant Center account. */
            delete(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account from which to delete the given return address. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Return address ID generated by Google. */
                returnAddressId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<void>;
            /** Gets a return address of the Merchant Center account. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account to get a return address for. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Return address ID generated by Google. */
                returnAddressId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ReturnAddress>;
            /** Inserts a return address for the Merchant Center account. */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account to insert a return address for. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ReturnAddress;
            }): Request<ReturnAddress>;
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account to insert a return address for. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ReturnAddress): Request<ReturnAddress>;
            /** Lists the return addresses of the Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** List only return addresses applicable to the given country of sale. When omitted, all return addresses are listed. */
                country?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of addresses in the response, used for paging. */
                maxResults?: number;
                /** The Merchant Center account to list return addresses for. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ReturnaddressListResponse>;
        }
        interface ReturnpolicyResource {
            /** Batches multiple return policy related calls in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ReturnpolicyCustomBatchRequest;
            }): Request<ReturnpolicyCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ReturnpolicyCustomBatchRequest): Request<ReturnpolicyCustomBatchResponse>;
            /** Deletes a return policy for the given Merchant Center account. */
            delete(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account from which to delete the given return policy. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Return policy ID generated by Google. */
                returnPolicyId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<void>;
            /** Gets a return policy of the Merchant Center account. */
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account to get a return policy for. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Return policy ID generated by Google. */
                returnPolicyId: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ReturnPolicy>;
            /** Inserts a return policy for the Merchant Center account. */
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account to insert a return policy for. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ReturnPolicy;
            }): Request<ReturnPolicy>;
            insert(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account to insert a return policy for. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ReturnPolicy): Request<ReturnPolicy>;
            /** Lists the return policies of the Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The Merchant Center account to list return policies for. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ReturnpolicyListResponse>;
        }
        interface ShippingsettingsResource {
            /** Retrieves and updates the shipping settings of multiple accounts in a single request. */
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ShippingsettingsCustomBatchRequest;
            }): Request<ShippingsettingsCustomBatchResponse>;
            custombatch(request: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ShippingsettingsCustomBatchRequest): Request<ShippingsettingsCustomBatchResponse>;
            /** Retrieves the shipping settings of the account. */
            get(request?: {
                /** The ID of the account for which to get/update shipping settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ShippingSettings>;
            /** Retrieves supported carriers and carrier services for an account. */
            getsupportedcarriers(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account for which to retrieve the supported carriers. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ShippingsettingsGetSupportedCarriersResponse>;
            /** Retrieves supported holidays for an account. */
            getsupportedholidays(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account for which to retrieve the supported holidays. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ShippingsettingsGetSupportedHolidaysResponse>;
            /** Retrieves supported pickup services for an account. */
            getsupportedpickupservices(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The ID of the account for which to retrieve the supported pickup services. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ShippingsettingsGetSupportedPickupServicesResponse>;
            /** Lists the shipping settings of the sub-accounts in your Merchant Center account. */
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The maximum number of shipping settings to return in the response, used for paging. */
                maxResults?: number;
                /** The ID of the managing account. This must be a multi-client account. */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The token returned by the previous request. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ShippingsettingsListResponse>;
            /** Updates the shipping settings of the account. */
            update(request: {
                /** The ID of the account for which to get/update shipping settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ShippingSettings;
            }): Request<ShippingSettings>;
            update(request: {
                /** The ID of the account for which to get/update shipping settings. */
                accountId: string;
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be
                 * the ID of a sub-account of this account.
                 */
                merchantId: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ShippingSettings): Request<ShippingSettings>;
        }

        const accounts: AccountsResource;

        const accountstatuses: AccountstatusesResource;

        const accounttax: AccounttaxResource;

        const datafeeds: DatafeedsResource;

        const datafeedstatuses: DatafeedstatusesResource;

        const liasettings: LiasettingsResource;

        const orderinvoices: OrderinvoicesResource;

        const orderreports: OrderreportsResource;

        const orderreturns: OrderreturnsResource;

        const orders: OrdersResource;

        const pos: PosResource;

        const products: ProductsResource;

        const productstatuses: ProductstatusesResource;

        const regionalinventory: RegionalinventoryResource;

        const returnaddress: ReturnaddressResource;

        const returnpolicy: ReturnpolicyResource;

        const shippingsettings: ShippingsettingsResource;
    }
}
