// Type definitions for non-npm package Cloud Private Catalog Producer API v1beta1 1.0
// Project: https://cloud.google.com/private-catalog/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://cloudprivatecatalogproducer.googleapis.com/$discovery/rest?version=v1beta1

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Private Catalog Producer API v1beta1 */
    function load(name: "cloudprivatecatalogproducer", version: "v1beta1"): PromiseLike<void>;
    function load(name: "cloudprivatecatalogproducer", version: "v1beta1", callback: () => any): void;

    namespace cloudprivatecatalogproducer {
        interface GoogleCloudPrivatecatalogproducerV1beta1Association {
            /** The creation time of the association. */
            createTime?: string;
            /**
             * Output only. The resource name of the catalog association, in the format
             * `catalogs/{catalog_id}/associations/{association_id}'.
             *
             * A unique identifier for the catalog association, which is
             * generated by catalog service.
             */
            name?: string;
            /**
             * Required. The user-supplied fully qualified name of the `Resource`
             * associated to the `Catalog`. It supports `Organization`, `Folder`,
             * and `Project`. Values are of the form
             *
             * &#42; `//cloudresourcemanager.googleapis.com/projects/{product_number}`
             * &#42; `//cloudresourcemanager.googleapis.com/folders/{folder_id}`
             * &#42; `//cloudresourcemanager.googleapis.com/organizations/{organization_id}`
             */
            resource?: string;
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1Catalog {
            /** Output only. The time when the catalog was created. */
            createTime?: string;
            /**
             * Required. The user-supplied description of the catalog. Maximum of 512
             * characters.
             */
            description?: string;
            /**
             * Required. The user-supplied descriptive name of the catalog as it appears
             * in UIs. Maximum 256 characters in length.
             */
            displayName?: string;
            /**
             * Output only. The resource name of the catalog, in the format
             * `catalogs/{catalog_id}'.
             *
             * A unique identifier for the catalog, which is generated
             * by catalog service.
             */
            name?: string;
            /**
             * Required. The parent resource name of the catalog, which can't be changed
             * after a catalog is created. It can only be an organization. Values are of
             * the form `//cloudresourcemanager.googleapis.com/organizations/<id>`.
             * Maximum 256 characters in length.
             */
            parent?: string;
            /** Output only. The time when the catalog was last updated. */
            updateTime?: string;
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest {
            /** The resource name of the destination product that is copied to. */
            destinationProductName?: string;
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest {
            /**
             * The user-supplied `Association` that is going to be created.
             *
             * If the `resource` field is set, the
             * `privatecatalogproducer.catalogTargets.associate` permission is checked on
             * the target resource.
             */
            association?: GoogleCloudPrivatecatalogproducerV1beta1Association;
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse {
            /** The returned `Association` resources from the list call. */
            associations?: GoogleCloudPrivatecatalogproducerV1beta1Association[];
            /**
             * A pagination token returned from a previous call to
             * `ListAssociations` that indicates where the listing should continue from.
             * This field is optional.
             */
            nextPageToken?: string;
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse {
            /** The `Catalogs` returned from the list call. */
            catalogs?: GoogleCloudPrivatecatalogproducerV1beta1Catalog[];
            /**
             * A pagination token returned from a previous call to ListCatalogs
             * that indicates where the listing should continue from.
             * This field is optional.
             */
            nextPageToken?: string;
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse {
            /**
             * A pagination token returned from a previous call to ListProducts
             * that indicates where the listing should continue from.
             * This field is optional.
             */
            nextPageToken?: string;
            /** The `Product` returned from the list call. */
            products?: GoogleCloudPrivatecatalogproducerV1beta1Product[];
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse {
            /**
             * A pagination token returned from a previous call to ListProducts
             * that indicates where the listing should continue from.
             * This field is optional.
             */
            nextPageToken?: string;
            /** The `VersiVersionon` returned from the list call. */
            versions?: GoogleCloudPrivatecatalogproducerV1beta1Version[];
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1Product {
            /**
             * Required. The type of the product asset, which cannot be changed after the
             * product is created. It supports the values
             * `google.deploymentmanager.Template` and
             * `google.cloudprivatecatalog.ListingOnly`. Other values will be
             * rejected by the server. Read only after creation.
             *
             * The following fields or resource types have different validation rules
             * under each `asset_type` values:
             *
             * &#42; Product.display_metadata has different validation schema for each
             * asset type value. See its comment for details.
             * &#42; Version resource isn't allowed to be added under the
             * `google.cloudprivatecatalog.ListingOnly` type.
             */
            assetType?: string;
            /** Output only. The time when the product was created. */
            createTime?: string;
            /**
             * The user-supplied display metadata to describe the product.
             * The JSON schema of the metadata differs by Product.asset_type.
             * When the type is `google.deploymentmanager.Template`, the schema is as
             * follows:
             *
             * ```
             * "$schema": http://json-schema.org/draft-04/schema#
             * type: object
             * properties:
             * name:
             * type: string
             * minLength: 1
             * maxLength: 64
             * description:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * tagline:
             * type: string
             * minLength: 1
             * maxLength: 100
             * support_info:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * creator:
             * type: string
             * minLength: 1
             * maxLength: 100
             * documentation:
             * type: array
             * items:
             * type: object
             * properties:
             * url:
             * type: string
             * pattern:
             * "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]&#42;[-a-zA-Z0-9+&@#/%=~_|]"
             * title:
             * type: string
             * minLength: 1
             * maxLength: 64
             * description:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * required:
             * - name
             * - description
             * additionalProperties: false
             *
             * ```
             *
             * When the asset type is `google.cloudprivatecatalog.ListingOnly`, the schema
             * is as follows:
             *
             * ```
             * "$schema": http://json-schema.org/draft-04/schema#
             * type: object
             * properties:
             * name:
             * type: string
             * minLength: 1
             * maxLength: 64
             * description:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * tagline:
             * type: string
             * minLength: 1
             * maxLength: 100
             * support_info:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * creator:
             * type: string
             * minLength: 1
             * maxLength: 100
             * documentation:
             * type: array
             * items:
             * type: object
             * properties:
             * url:
             * type: string
             * pattern:
             * "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]&#42;[-a-zA-Z0-9+&@#/%=~_|]"
             * title:
             * type: string
             * minLength: 1
             * maxLength: 64
             * description:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * signup_url:
             * type: string
             * pattern:
             * "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]&#42;[-a-zA-Z0-9+&@#/%=~_|]"
             * required:
             * - name
             * - description
             * - signup_url
             * additionalProperties: false
             * ```
             */
            displayMetadata?: Record<string, any>;
            /**
             * Output only. The public accessible URI of the icon uploaded by
             * PrivateCatalogProducer.UploadIcon.
             *
             * If no icon is uploaded, it will be the default icon's URI.
             */
            iconUri?: string;
            /**
             * Required. The resource name of the product in the format
             * `catalogs/{catalog_id}/products/a-z&#42;[a-z0-9]'.
             *
             * A unique identifier for the product under a catalog, which cannot
             * be changed after the product is created. The final
             * segment of the name must between 1 and 256 characters in length.
             */
            name?: string;
            /** Output only. The time when the product was last updated. */
            updateTime?: string;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest {
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest {
            /**
             * The raw icon bytes user-supplied to be uploaded to the product. The format
             * of the icon can only be PNG or JPEG. The minimum allowed dimensions are
             * 130x130 pixels and the maximum dimensions are 10000x10000 pixels.
             * Required.
             */
            icon?: string;
        }
        interface GoogleCloudPrivatecatalogproducerV1beta1Version {
            /**
             * Output only. The asset which has been validated and is ready to be
             * provisioned. See Version.original_asset for the schema.
             */
            asset?: Record<string, any>;
            /** Output only. The time when the version was created. */
            createTime?: string;
            /** The user-supplied description of the version. Maximum of 256 characters. */
            description?: string;
            /**
             * Required. The resource name of the version, in the format
             * `catalogs/{catalog_id}/products/{product_id}/versions/a-z&#42;[a-z0-9]'.
             *
             * A unique identifier for the version under a product, which can't
             * be changed after the version is created. The final segment of the name must
             * between 1 and 63 characters in length.
             */
            name?: string;
            /**
             * The user-supplied asset payload. The maximum size of the payload is 2MB.
             * The JSON schema of the payload is defined as:
             *
             * ```
             * type: object
             * properties:
             * mainTemplate:
             * type: string
             * description: The file name of the main template and name prefix of
             * schema file. The content of the main template should be set in the
             * imports list. The schema file name is expected to be
             * <mainTemplate>.schema in the imports list. required: true
             * imports:
             * type: array
             * description: Import template and schema file contents. Required to have
             * both <mainTemplate> and <mainTemplate>.schema files. required: true
             * minItems: 2
             * items:
             * type: object
             * properties:
             * name:
             * type: string
             * content:
             * type: string
             * ```
             */
            originalAsset?: Record<string, any>;
            /** Output only. The time when the version was last updated. */
            updateTime?: string;
        }
        interface GoogleIamV1AuditConfig {
            /** The configuration for logging of each type of permission. */
            auditLogConfigs?: GoogleIamV1AuditLogConfig[];
            /**
             * Specifies a service that will be enabled for audit logging.
             * For example, `storage.googleapis.com`, `cloudsql.googleapis.com`.
             * `allServices` is a special value that covers all services.
             */
            service?: string;
        }
        interface GoogleIamV1AuditLogConfig {
            /**
             * Specifies the identities that do not cause logging for this type of
             * permission.
             * Follows the same format of Binding.members.
             */
            exemptedMembers?: string[];
            /** The log type that this config enables. */
            logType?: string;
        }
        interface GoogleIamV1Binding {
            /**
             * The condition that is associated with this binding.
             * NOTE: An unsatisfied condition will not allow user access via current
             * binding. Different bindings, including their conditions, are examined
             * independently.
             */
            condition?: GoogleTypeExpr;
            /**
             * Specifies the identities requesting access for a Cloud Platform resource.
             * `members` can have the following values:
             *
             * &#42; `allUsers`: A special identifier that represents anyone who is
             * on the internet; with or without a Google account.
             *
             * &#42; `allAuthenticatedUsers`: A special identifier that represents anyone
             * who is authenticated with a Google account or a service account.
             *
             * &#42; `user:{emailid}`: An email address that represents a specific Google
             * account. For example, `alice@example.com` .
             *
             *
             * &#42; `serviceAccount:{emailid}`: An email address that represents a service
             * account. For example, `my-other-app@appspot.gserviceaccount.com`.
             *
             * &#42; `group:{emailid}`: An email address that represents a Google group.
             * For example, `admins@example.com`.
             *
             * &#42; `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
             * identifier) representing a user that has been recently deleted. For
             * example, `alice@example.com?uid=123456789012345678901`. If the user is
             * recovered, this value reverts to `user:{emailid}` and the recovered user
             * retains the role in the binding.
             *
             * &#42; `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
             * unique identifier) representing a service account that has been recently
             * deleted. For example,
             * `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
             * If the service account is undeleted, this value reverts to
             * `serviceAccount:{emailid}` and the undeleted service account retains the
             * role in the binding.
             *
             * &#42; `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
             * identifier) representing a Google group that has been recently
             * deleted. For example, `admins@example.com?uid=123456789012345678901`. If
             * the group is recovered, this value reverts to `group:{emailid}` and the
             * recovered group retains the role in the binding.
             *
             *
             * &#42; `domain:{domain}`: The G Suite domain (primary) that represents all the
             * users of that domain. For example, `google.com` or `example.com`.
             */
            members?: string[];
            /**
             * Role that is assigned to `members`.
             * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
             */
            role?: string;
        }
        interface GoogleIamV1Policy {
            /** Specifies cloud audit logging configuration for this policy. */
            auditConfigs?: GoogleIamV1AuditConfig[];
            /**
             * Associates a list of `members` to a `role`. Optionally, may specify a
             * `condition` that determines how and when the `bindings` are applied. Each
             * of the `bindings` must contain at least one member.
             */
            bindings?: GoogleIamV1Binding[];
            /**
             * `etag` is used for optimistic concurrency control as a way to help
             * prevent simultaneous updates of a policy from overwriting each other.
             * It is strongly suggested that systems make use of the `etag` in the
             * read-modify-write cycle to perform policy updates in order to avoid race
             * conditions: An `etag` is returned in the response to `getIamPolicy`, and
             * systems are expected to put that etag in the request to `setIamPolicy` to
             * ensure that their change will be applied to the same version of the policy.
             *
             * &#42;&#42;Important:&#42;&#42; If you use IAM Conditions, you must include the `etag` field
             * whenever you call `setIamPolicy`. If you omit this field, then IAM allows
             * you to overwrite a version `3` policy with a version `1` policy, and all of
             * the conditions in the version `3` policy are lost.
             */
            etag?: string;
            /**
             * Specifies the format of the policy.
             *
             * Valid values are `0`, `1`, and `3`. Requests that specify an invalid value
             * are rejected.
             *
             * Any operation that affects conditional role bindings must specify version
             * `3`. This requirement applies to the following operations:
             *
             * &#42; Getting a policy that includes a conditional role binding
             * &#42; Adding a conditional role binding to a policy
             * &#42; Changing a conditional role binding in a policy
             * &#42; Removing any role binding, with or without a condition, from a policy
             * that includes conditions
             *
             * &#42;&#42;Important:&#42;&#42; If you use IAM Conditions, you must include the `etag` field
             * whenever you call `setIamPolicy`. If you omit this field, then IAM allows
             * you to overwrite a version `3` policy with a version `1` policy, and all of
             * the conditions in the version `3` policy are lost.
             *
             * If a policy does not include any conditions, operations on that policy may
             * specify any valid version or leave the field unset.
             */
            version?: number;
        }
        interface GoogleIamV1SetIamPolicyRequest {
            /**
             * REQUIRED: The complete policy to be applied to the `resource`. The size of
             * the policy is limited to a few 10s of KB. An empty policy is a
             * valid policy but certain Cloud Platform services (such as Projects)
             * might reject them.
             */
            policy?: GoogleIamV1Policy;
            /**
             * OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only
             * the fields in the mask will be modified. If no mask is provided, the
             * following default mask is used:
             * paths: "bindings, etag"
             * This field is only used by Cloud IAM.
             */
            updateMask?: string;
        }
        interface GoogleIamV1TestIamPermissionsRequest {
            /**
             * The set of permissions to check for the `resource`. Permissions with
             * wildcards (such as '&#42;' or 'storage.&#42;') are not allowed. For more
             * information see
             * [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            permissions?: string[];
        }
        interface GoogleIamV1TestIamPermissionsResponse {
            /**
             * A subset of `TestPermissionsRequest.permissions` that the caller is
             * allowed.
             */
            permissions?: string[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleLongrunningCancelOperationRequest {
        }
        interface GoogleLongrunningListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: GoogleLongrunningOperation[];
        }
        interface GoogleLongrunningOperation {
            /**
             * If the value is `false`, it means the operation is still in progress.
             * If `true`, the operation is completed, and either `error` or `response` is
             * available.
             */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: GoogleRpcStatus;
            /**
             * Service-specific metadata associated with the operation.  It typically
             * contains progress information and common metadata such as create time.
             * Some services might not provide such metadata.  Any method that returns a
             * long-running operation should document the metadata type, if any.
             */
            metadata?: Record<string, any>;
            /**
             * The server-assigned name, which is only unique within the same service that
             * originally returns it. If you use the default HTTP mapping, the
             * `name` should be a resource name ending with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success.  If the original
             * method returns no data on success, such as `Delete`, the response is
             * `google.protobuf.Empty`.  If the original method is standard
             * `Get`/`Create`/`Update`, the response should be the resource.  For other
             * methods, the response should have the type `XxxResponse`, where `Xxx`
             * is the original method name.  For example, if the original method name
             * is `TakeSnapshot()`, the inferred response type is
             * `TakeSnapshotResponse`.
             */
            response?: Record<string, any>;
        }
        // tslint:disable-next-line:no-empty-interface
        interface GoogleProtobufEmpty {
        }
        interface GoogleRpcStatus {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /**
             * A list of messages that carry the error details.  There is a common set of
             * message types for APIs to use.
             */
            details?: Array<Record<string, any>>;
            /**
             * A developer-facing error message, which should be in English. Any
             * user-facing error message should be localized and sent in the
             * google.rpc.Status.details field, or localized by the client.
             */
            message?: string;
        }
        interface GoogleTypeExpr {
            /**
             * Optional. Description of the expression. This is a longer text which
             * describes the expression, e.g. when hovered over it in a UI.
             */
            description?: string;
            /**
             * Textual representation of an expression in Common Expression Language
             * syntax.
             */
            expression?: string;
            /**
             * Optional. String indicating the location of the expression for error
             * reporting, e.g. a file name and a position in the file.
             */
            location?: string;
            /**
             * Optional. Title for the expression, i.e. a short string describing
             * its purpose. This can be used e.g. in UIs which allow to enter the
             * expression.
             */
            title?: string;
        }
        interface AssociationsResource {
            /** Creates an Association instance under a given Catalog. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The `Catalog` resource's name. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Association>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The `Catalog` resource's name. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1CreateAssociationRequest): Request<GoogleCloudPrivatecatalogproducerV1beta1Association>;
            /** Deletes the given Association. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the `Association` to delete. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Returns the requested Association resource. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the `Association` to retrieve. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Association>;
            /** Lists all Association resources under a catalog. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of catalog associations to return. */
                pageSize?: number;
                /**
                 * A pagination token returned from the previous call to
                 * `ListAssociations`.
                 */
                pageToken?: string;
                /**
                 * The resource name of the `Catalog` whose `Associations` are
                 * being retrieved. In the format `catalogs/<catalog>`.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1ListAssociationsResponse>;
        }
        interface IconsResource {
            /**
             * Creates an Icon instance under a given Product.
             * If Product only has a default icon, a new Icon
             * instance is created and associated with the given Product.
             * If Product already has a non-default icon, the action creates
             * a new Icon instance, associates the newly created
             * Icon with the given Product and deletes the old icon.
             */
            upload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** The resource name of the product. */
                product: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest;
            }): Request<{}>;
            upload(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** The resource name of the product. */
                product: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1UploadIconRequest): Request<{}>;
        }
        interface VersionsResource {
            /** Creates a Version instance under a given Product. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The product name of the new version's parent. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1Version;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The product name of the new version's parent. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1Version): Request<GoogleLongrunningOperation>;
            /** Hard deletes a Version. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the version. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Returns the requested Version resource. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the version. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Version>;
            /**
             * Lists Version resources that the producer has access to, within the
             * scope of the parent Product.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of versions to return. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to ListVersions
                 * that indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** The resource name of the parent resource. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1ListVersionsResponse>;
            /** Updates a specific Version resource. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the version, in the format
                 * `catalogs/{catalog_id}/products/{product_id}/versions/a-z&#42;[a-z0-9]'.
                 *
                 * A unique identifier for the version under a product, which can't
                 * be changed after the version is created. The final segment of the name must
                 * between 1 and 63 characters in length.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Field mask that controls which fields of the version should be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1Version;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Version>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the version, in the format
                 * `catalogs/{catalog_id}/products/{product_id}/versions/a-z&#42;[a-z0-9]'.
                 *
                 * A unique identifier for the version under a product, which can't
                 * be changed after the version is created. The final segment of the name must
                 * between 1 and 63 characters in length.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Field mask that controls which fields of the version should be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1Version): Request<GoogleCloudPrivatecatalogproducerV1beta1Version>;
        }
        interface ProductsResource {
            /** Copies a Product under another Catalog. */
            copy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the current product that is copied from. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest;
            }): Request<GoogleLongrunningOperation>;
            copy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the current product that is copied from. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1CopyProductRequest): Request<GoogleLongrunningOperation>;
            /** Creates a Product instance under a given Catalog. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The catalog name of the new product's parent. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1Product;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Product>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The catalog name of the new product's parent. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1Product): Request<GoogleCloudPrivatecatalogproducerV1beta1Product>;
            /** Hard deletes a Product. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the product. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /** Returns the requested Product resource. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the product. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Product>;
            /**
             * Lists Product resources that the producer has access to, within the
             * scope of the parent catalog.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * A filter expression used to restrict the returned results based
                 * upon properties of the product.
                 */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of products to return. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to ListProducts
                 * that indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** The resource name of the parent resource. */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1ListProductsResponse>;
            /** Updates a specific Product resource. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the product in the format
                 * `catalogs/{catalog_id}/products/a-z&#42;[a-z0-9]'.
                 *
                 * A unique identifier for the product under a catalog, which cannot
                 * be changed after the product is created. The final
                 * segment of the name must between 1 and 256 characters in length.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Field mask that controls which fields of the product should be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1Product;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Product>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The resource name of the product in the format
                 * `catalogs/{catalog_id}/products/a-z&#42;[a-z0-9]'.
                 *
                 * A unique identifier for the product under a catalog, which cannot
                 * be changed after the product is created. The final
                 * segment of the name must between 1 and 256 characters in length.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Field mask that controls which fields of the product should be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1Product): Request<GoogleCloudPrivatecatalogproducerV1beta1Product>;
            icons: IconsResource;
            versions: VersionsResource;
        }
        interface CatalogsResource {
            /** Creates a new Catalog resource. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1Catalog;
            }): Request<GoogleLongrunningOperation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1Catalog): Request<GoogleLongrunningOperation>;
            /**
             * Soft deletes an existing Catalog and all resources under it.
             * The catalog can only be deleted if there is no associations under it or
             * DeleteCatalogRequest.force is true. The delete operation
             * can be recovered by the PrivateCatalogProducer.UndeleteCatalog
             * method.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Forces deletion of the `Catalog` and its `Association` resources.
                 * If the `Catalog` is still associated with other resources and
                 * force is not set to true, then the operation fails.
                 */
                force?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the catalog. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Catalog>;
            /** Returns the requested Catalog resource. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the catalog. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Catalog>;
            /** Gets IAM policy for the specified Catalog. */
            getIamPolicy(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. The policy format version to be returned.
                 *
                 * Valid values are 0, 1, and 3. Requests specifying an invalid value will be
                 * rejected.
                 *
                 * Requests for policies with any conditional bindings must specify version 3.
                 * Policies without any conditional bindings may specify any valid value or
                 * leave the field unset.
                 */
                "options.requestedPolicyVersion"?: number;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy is being requested.
                 * See the operation documentation for the appropriate value for this field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleIamV1Policy>;
            /**
             * Lists Catalog resources that the producer has access to, within the
             * scope of the parent resource.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of catalogs to return. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to ListCatalogs
                 * that indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** The resource name of the parent resource. */
                parent?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1ListCatalogsResponse>;
            /** Updates a specific Catalog resource. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Output only. The resource name of the catalog, in the format
                 * `catalogs/{catalog_id}'.
                 *
                 * A unique identifier for the catalog, which is generated
                 * by catalog service.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Field mask that controls which fields of the catalog should be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1Catalog;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Catalog>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Output only. The resource name of the catalog, in the format
                 * `catalogs/{catalog_id}'.
                 *
                 * A unique identifier for the catalog, which is generated
                 * by catalog service.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Field mask that controls which fields of the catalog should be updated. */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1Catalog): Request<GoogleCloudPrivatecatalogproducerV1beta1Catalog>;
            /** Sets the IAM policy for the specified Catalog. */
            setIamPolicy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy is being specified.
                 * See the operation documentation for the appropriate value for this field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleIamV1SetIamPolicyRequest): Request<GoogleIamV1Policy>;
            /** Tests the IAM permissions for the specified Catalog. */
            testIamPermissions(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy detail is being requested.
                 * See the operation documentation for the appropriate value for this field.
                 */
                resource: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleIamV1TestIamPermissionsRequest): Request<GoogleIamV1TestIamPermissionsResponse>;
            /** Undeletes a deleted Catalog and all resources under it. */
            undelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the catalog. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest;
            }): Request<GoogleCloudPrivatecatalogproducerV1beta1Catalog>;
            undelete(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource name of the catalog. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleCloudPrivatecatalogproducerV1beta1UndeleteCatalogRequest): Request<GoogleCloudPrivatecatalogproducerV1beta1Catalog>;
            associations: AssociationsResource;
            products: ProductsResource;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation.  The server
             * makes a best effort to cancel the operation, but success is not
             * guaranteed.  If the server doesn't support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
             * Operations.GetOperation or
             * other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation,
             * the operation is not deleted; instead, it becomes an operation with
             * an Operation.error value with a google.rpc.Status.code of 1,
             * corresponding to `Code.CANCELLED`.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: GoogleLongrunningCancelOperationRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: GoogleLongrunningCancelOperationRequest): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is
             * no longer interested in the operation result. It does not cancel the
             * operation. If the server doesn't support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Gets the latest state of a long-running operation.  Clients can use this
             * method to poll the operation result at intervals as recommended by the API
             * service.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningOperation>;
            /**
             * Lists operations that match the specified filter in the request. If the
             * server doesn't support this method, it returns `UNIMPLEMENTED`.
             *
             * NOTE: the `name` binding allows API services to override the binding
             * to use different resource name schemes, such as `users/&#42;/operations`. To
             * override the binding, API services can add a binding such as
             * `"/v1/{name=users/&#42;}/operations"` to their service configuration.
             * For backwards compatibility, the default name includes the operations
             * collection id, however overriding users must ensure the name binding
             * is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<GoogleLongrunningListOperationsResponse>;
        }

        const catalogs: CatalogsResource;

        const operations: OperationsResource;
    }
}
