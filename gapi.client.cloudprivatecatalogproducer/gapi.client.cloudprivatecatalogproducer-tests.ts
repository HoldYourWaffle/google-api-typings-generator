/* This is stub file for gapi.client.cloudprivatecatalogproducer definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('cloudprivatecatalogproducer', 'v1beta1', () => {
        /** now we can use gapi.client.cloudprivatecatalogproducer */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** View and manage your data across Google Cloud Platform services */
            'https://www.googleapis.com/auth/cloud-platform',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /** Creates a new Catalog resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.create({
        }, {
            createTime: "Test string",
            description: "Test string",
            displayName: "Test string",
            name: "Test string",
            parent: "Test string",
            updateTime: "Test string",
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Soft deletes an existing Catalog and all resources under it.
         * The catalog can only be deleted if there is no associations under it or
         * DeleteCatalogRequest.force is true. The delete operation
         * can be recovered by the PrivateCatalogProducer.UndeleteCatalog
         * method.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.delete({
            force: true,
            name: "Test string",
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Catalog resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.get({
            name: "Test string",
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Gets IAM policy for the specified Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.getIamPolicy({
            "options.requestedPolicyVersion": 42,
            resource: "Test string",
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Catalog resources that the producer has access to, within the
         * scope of the parent resource.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Catalog resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            createTime: "Test string",
            description: "Test string",
            displayName: "Test string",
            name: "Test string",
            parent: "Test string",
            updateTime: "Test string",
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Sets the IAM policy for the specified Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.setIamPolicy({
            resource: "Test string",
        }, {
            policy: {
                auditConfigs: [
                    {
                        auditLogConfigs: [
                            {
                                exemptedMembers: [
                                    "Test string"                                ],
                                logType: "Test string",
                            }                        ],
                        service: "Test string",
                    }                ],
                bindings: [
                    {
                        condition: {
                            description: "Test string",
                            expression: "Test string",
                            location: "Test string",
                            title: "Test string",
                        },
                        members: [
                            "Test string"                        ],
                        role: "Test string",
                    }                ],
                etag: "Test string",
                version: 42,
            },
            updateMask: "Test string",
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Tests the IAM permissions for the specified Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.testIamPermissions({
            resource: "Test string",
        }, {
            permissions: [
                "Test string"            ],
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Undeletes a deleted Catalog and all resources under it. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.undelete({
            name: "Test string",
        }, {
        });
        /** Creates an Association instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.create({
            parent: "Test string",
        }, {
            association: {
                createTime: "Test string",
                name: "Test string",
                resource: "Test string",
            },
        });
        /** Deletes the given Association. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.delete({
            name: "Test string",
        });
        /** Returns the requested Association resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.get({
            name: "Test string",
        });
        /** Lists all Association resources under a catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.associations.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Copies a Product under another Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.copy({
            name: "Test string",
        }, {
            destinationProductName: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Creates a Product instance under a given Catalog. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.create({
            parent: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.delete({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Returns the requested Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.get({
            name: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Lists Product resources that the producer has access to, within the
         * scope of the parent catalog.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.list({
            filter: "Test string",
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Updates a specific Product resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            assetType: "Test string",
            createTime: "Test string",
            displayMetadata: {
                A: 42            },
            iconUri: "Test string",
            name: "Test string",
            updateTime: "Test string",
        });
        /**
         * Creates an Icon instance under a given Product.
         * If Product only has a default icon, a new Icon
         * instance is created and associated with the given Product.
         * If Product already has a non-default icon, the action creates
         * a new Icon instance, associates the newly created
         * Icon with the given Product and deletes the old icon.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.icons.upload({
            product: "Test string",
        }, {
            icon: "Test string",
        });
        /** Creates a Version instance under a given Product. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.create({
            parent: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /** Hard deletes a Version. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.delete({
            name: "Test string",
        });
        /** Returns the requested Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.get({
            name: "Test string",
        });
        /**
         * Lists Version resources that the producer has access to, within the
         * scope of the parent Product.
         */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.list({
            pageSize: 42,
            pageToken: "Test string",
            parent: "Test string",
        });
        /** Updates a specific Version resource. */
        await gapi.client.cloudprivatecatalogproducer.catalogs.products.versions.patch({
            name: "Test string",
            updateMask: "Test string",
        }, {
            asset: {
                A: 42            },
            createTime: "Test string",
            description: "Test string",
            name: "Test string",
            originalAsset: {
                A: 42            },
            updateTime: "Test string",
        });
        /**
         * Starts asynchronous cancellation on a long-running operation.  The server
         * makes a best effort to cancel the operation, but success is not
         * guaranteed.  If the server doesn't support this method, it returns
         * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
         * Operations.GetOperation or
         * other methods to check whether the cancellation succeeded or whether the
         * operation completed despite cancellation. On successful cancellation,
         * the operation is not deleted; instead, it becomes an operation with
         * an Operation.error value with a google.rpc.Status.code of 1,
         * corresponding to `Code.CANCELLED`.
         */
        await gapi.client.cloudprivatecatalogproducer.operations.cancel({
            name: "Test string",
        }, {
        });
        /**
         * Deletes a long-running operation. This method indicates that the client is
         * no longer interested in the operation result. It does not cancel the
         * operation. If the server doesn't support this method, it returns
         * `google.rpc.Code.UNIMPLEMENTED`.
         */
        await gapi.client.cloudprivatecatalogproducer.operations.delete({
            name: "Test string",
        });
        /**
         * Gets the latest state of a long-running operation.  Clients can use this
         * method to poll the operation result at intervals as recommended by the API
         * service.
         */
        await gapi.client.cloudprivatecatalogproducer.operations.get({
            name: "Test string",
        });
        /**
         * Lists operations that match the specified filter in the request. If the
         * server doesn't support this method, it returns `UNIMPLEMENTED`.
         *
         * NOTE: the `name` binding allows API services to override the binding
         * to use different resource name schemes, such as `users/&#42;/operations`. To
         * override the binding, API services can add a binding such as
         * `"/v1/{name=users/&#42;}/operations"` to their service configuration.
         * For backwards compatibility, the default name includes the operations
         * collection id, however overriding users must ensure the name binding
         * is the parent resource, without the operations collection id.
         */
        await gapi.client.cloudprivatecatalogproducer.operations.list({
            filter: "Test string",
            name: "Test string",
            pageSize: 42,
            pageToken: "Test string",
        });
    }
});
