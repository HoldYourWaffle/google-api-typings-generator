// Type definitions for non-npm package Google Apps Reseller API v1 1.0
// Project: https://developers.google.com/google-apps/reseller/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://www.googleapis.com/discovery/v1/apis/reseller/v1/rest
// Revision: 20200627

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Google Apps Reseller API v1 */
    function load(name: "reseller", version: "v1"): PromiseLike<void>;
    function load(name: "reseller", version: "v1", callback: () => any): void;

    namespace reseller {
        interface Address {
            /**
             * A customer's physical address. An address can be composed of one to three
             * lines. The <code>addressline2</code> and <code>addressLine3</code> are
             * optional.
             */
            addressLine1?: string;
            /** Line 2 of the address. */
            addressLine2?: string;
            /** Line 3 of the address. */
            addressLine3?: string;
            /** The customer contact's name. This is required. */
            contactName?: string;
            /**
             * For <code>countryCode</code> information, see the <a
             * href="http://www.iso.org/iso/country_codes.htm">ISO 3166 country code
             * elements</a>. Verify that country is <a
             * href="https://www.cloudconnect.goog/docs/DOC-29141">approved</a> for resale
             * of Google products. This property is required when creating a new customer.
             */
            countryCode?: string;
            /**
             * Identifies the resource as a customer address. Value:
             * <code>customers#address</code>
             */
            kind?: string;
            /**
             * An example of a <code>locality</code> value is the city of <code>San
             * Francisco</code>.
             */
            locality?: string;
            /** The company or company division name. This is required. */
            organizationName?: string;
            /**
             * A <code>postalCode</code> example is a postal zip code such as
             * <code>94043</code>. This property is required when creating a new customer.
             */
            postalCode?: string;
            /**
             * An example of a <code>region</code> value is <code>CA</code> for the state
             * of California.
             */
            region?: string;
        }
        interface ChangePlanRequest {
            /**
             * Google-issued code (100 char max) for discounted pricing on subscription
             * plans. Deal code must be included in <code>changePlan</code> request in
             * order to receive discounted rate. This property is optional. If a deal code
             * has already been added to a subscription, this property may be left empty
             * and the existing discounted rate will still apply (if not empty, only
             * provide the deal code that is already present on the subscription). If a
             * deal code has never been added to a subscription and this property is left
             * blank, regular pricing will apply.
             */
            dealCode?: string;
            /**
             * Identifies the resource as a subscription change plan request. Value:
             * <code>subscriptions#changePlanRequest</code>
             */
            kind?: string;
            /**
             * The <code>planName</code> property is required. This is the name of the
             * subscription's payment plan. For more information about the Google payment
             * plans, see <a href="/admin-sdk/reseller/v1/how-tos/concepts.html">API
             * concepts</a>. <br><br>Possible values are: <ul> <li>
             * <code>ANNUAL_MONTHLY_PAY</code> - The annual commitment plan with monthly
             * payments <aside class="caution"> <strong>Caution:
             * </strong><code>ANNUAL_MONTHLY_PAY</code> is returned as <code>ANNUAL</code>
             * in all API responses.</aside> </li> <li> <code>ANNUAL_YEARLY_PAY</code> -
             * The annual commitment plan with yearly payments </li> <li>
             * <code>FLEXIBLE</code> - The flexible plan </li> <li> <code>TRIAL</code> -
             * The 30-day free trial plan </li> </ul>
             */
            planName?: string;
            /**
             * This is an optional property. This purchase order (PO) information is for
             * resellers to use for their company tracking usage. If a
             * <code>purchaseOrderId</code> value is given it appears in the API responses
             * and shows up in the invoice. The property accepts up to 80 plain text
             * characters.
             */
            purchaseOrderId?: string;
            /**
             * This is a required property. The seats property is the number of user seat
             * licenses.
             */
            seats?: Seats;
        }
        interface Customer {
            /**
             * Like the &quot;Customer email&quot; in the reseller tools, this email is
             * the secondary contact used if something happens to the
             * customer's service such as service outage or a security issue. This
             * property is required when creating a new customer and should not use the
             * same domain as <code>customerDomain</code>.
             */
            alternateEmail?: string;
            /**
             * The customer's primary domain name string. <code>customerDomain</code> is
             * required when creating a new customer. Do not include the <code>www</code>
             * prefix in the domain when adding a customer.
             */
            customerDomain?: string;
            /** Whether the customer's primary domain has been verified. */
            customerDomainVerified?: boolean;
            /**
             * This property will always be returned in a response as the unique
             * identifier generated by Google. In a request, this property can be either
             * the primary domain or the unique identifier generated by Google.
             */
            customerId?: string;
            /**
             * Identifies the resource as a customer. Value:
             * <code>reseller#customer</code>
             */
            kind?: string;
            /**
             * Customer contact phone number. Must start with "+" followed by the country
             * code. The rest of the number can be contiguous numbers or respect the phone
             * <a
             * href="http://wikipedia.org/wiki/Local_conventions_for_writing_telephone_numbers">local
             * format conventions</a>, but it must be a real phone number and not, for
             * example, "123". This field is silently ignored if invalid.
             */
            phoneNumber?: string;
            /** A customer's address information. Each field has a limit of 255 charcters. */
            postalAddress?: Address;
            /**
             * URL to customer&#39;s Admin console dashboard. The read-only URL is
             * generated by the API service. This is used if your client application
             * requires the customer to complete a task in the Admin console.
             */
            resourceUiUrl?: string;
        }
        interface RenewalSettings {
            /**
             * Identifies the resource as a subscription renewal setting. Value:
             * <code>subscriptions#renewalSettings</code>
             */
            kind?: string;
            /**
             * Renewal settings for the annual commitment plan. For more detailed
             * information, see renewal options in the <a
             * href="//support.google.com/a/bin/answer.py?topic=1247359&amp;ctx=topic&amp;answer=2500693">administrator
             * help center</a>. When renewing a subscription, the <code>renewalType</code>
             * is a required property.
             */
            renewalType?: string;
        }
        interface ResellernotifyGetwatchdetailsResponse {
            /** List of registered service accounts. */
            serviceAccountEmailAddresses?: string[];
            /** Topic name of the PubSub */
            topicName?: string;
        }
        interface ResellernotifyResource {
            /** Topic name of the PubSub */
            topicName?: string;
        }
        interface Seats {
            /**
             * Identifies the resource as a subscription seat setting. Value:
             * <code>subscriptions#seats</code>
             */
            kind?: string;
            /**
             * Read-only field containing the current number of users that are assigned a
             * license for the product defined in <code>skuId</code>. This
             * field's value is equivalent to the numerical count of users returned by the
             * Enterprise License Manager API method: <code><a
             * href="//developers.google.com/admin-sdk/licensing/v1/reference/licenseAssignments/listForProductAndSku">listForProductAndSku</a></code>
             */
            licensedNumberOfSeats?: number;
            /**
             * This is a required property and is exclusive to subscriptions with
             * <code>FLEXIBLE</code> or <code>TRIAL</code> plans. This property sets the
             * maximum number of licensed users allowed on a subscription. This quantity
             * can be increased up to the maximum limit defined in the
             * reseller's contract. The minimum quantity is the current number of users in
             * the customer account. <aside class="note"><strong>Note: </strong>G Suite
             * subscriptions automatically assign a license to every user.</aside>
             */
            maximumNumberOfSeats?: number;
            /**
             * This is a required property and is exclusive to subscriptions with
             * <code>ANNUAL_MONTHLY_PAY</code> and <code>ANNUAL_YEARLY_PAY</code> plans.
             * This property sets the maximum number of licenses assignable to users on a
             * subscription. The reseller can add more licenses, but once set, the
             * <code>numberOfSeats</code> cannot be reduced until renewal. The reseller is
             * invoiced based on the <code>numberOfSeats</code> value regardless of how
             * many of these user licenses are assigned. <aside class="note"><strong>Note:
             * </strong>G Suite subscriptions automatically assign a license to every
             * user.</aside>
             */
            numberOfSeats?: number;
        }
        interface Subscription {
            /** Read-only field that returns the current billing method for a subscription. */
            billingMethod?: string;
            /**
             * The <code>creationTime</code> property is the date when subscription was
             * created. It is in milliseconds using the Epoch format. See an example <a
             * href="http://www.epochconverter.com/">Epoch converter</a>.
             */
            creationTime?: string;
            /** Primary domain name of the customer */
            customerDomain?: string;
            /**
             * This property will always be returned in a response as the unique
             * identifier generated by Google. In a request, this property can be either
             * the primary domain or the unique identifier generated by Google.
             */
            customerId?: string;
            /**
             * Google-issued code (100 char max) for discounted pricing on subscription
             * plans. Deal code must be included in <code>insert</code> requests in order
             * to receive discounted rate. This property is optional, regular pricing
             * applies if left empty.
             */
            dealCode?: string;
            /**
             * Identifies the resource as a Subscription. Value:
             * <code>reseller#subscription</code>
             */
            kind?: string;
            /**
             * The <code>plan</code> property is required. In this version of the API, the
             * G Suite plans are the flexible plan, annual commitment plan, and the 30-day
             * free trial plan. For more information about the API&quot;s payment plans,
             * see the <a href="/admin-sdk/reseller/v1/how-tos/concepts#plans">API
             * concepts</a>.
             */
            plan?: {
                /**
                 * In this version of the API, annual commitment plan's interval is one
                 * year. <aside class="caution"> <strong>Note: </strong>When
                 * <code>billingMethod</code> value is <code>OFFLINE</code>, the
                 * subscription property object <code>plan.commitmentInterval</code> is
                 * omitted in all API responses. </aside>
                 */
                commitmentInterval?: {
                    /**
                     * An annual commitment plan&#39;s interval&#39;s <code>endTime</code> in
                     * milliseconds using the UNIX Epoch format. See an example <a
                     * href="http://www.epochconverter.com/">Epoch converter</a>.
                     */
                    endTime?: string;
                    /**
                     * An annual commitment plan's interval's <code>startTime</code> in
                     * milliseconds using UNIX Epoch format. See an example <a
                     * href="http://www.epochconverter.com/">Epoch converter</a>.
                     */
                    startTime?: string;
                };
                /**
                 * The <code>isCommitmentPlan</code> property&#39;s boolean value identifies
                 * the plan as an annual commitment plan:<ul><li><code>true</code> &mdash;
                 * The subscription&#39;s plan is an annual commitment
                 * plan.</li><li><code>false</code> &mdash; The plan is not an annual
                 * commitment plan.</li></ul>
                 */
                isCommitmentPlan?: boolean;
                /**
                 * The <code>planName</code> property is required. This is the name of the
                 * subscription&#39;s plan. For more information about the Google payment
                 * plans, see the <a
                 * href="/admin-sdk/reseller/v1/how-tos/concepts#plans">API concepts</a>.
                 * <br/><br/>Possible values are: <ul> <li> <code>ANNUAL_MONTHLY_PAY</code>
                 * &mdash; The annual commitment plan with monthly payments. <aside
                 * class="caution"> <strong>Caution:
                 * </strong><code>ANNUAL_MONTHLY_PAY</code> is returned as
                 * <code>ANNUAL</code> in all API responses.</aside> </li> <li>
                 * <code>ANNUAL_YEARLY_PAY</code> &mdash; The annual commitment plan with
                 * yearly payments </li> <li> <code>FLEXIBLE</code> &mdash; The flexible
                 * plan </li> <li> <code>TRIAL</code> &mdash; The 30-day free trial plan. A
                 * subscription in trial will be suspended after the 30th free day if no
                 * payment plan is assigned. Calling <code>changePlan</code> will assign a
                 * payment plan to a trial but will not activate the plan. A trial will
                 * automatically begin its assigned payment plan after its 30th free day or
                 * immediately after calling <code>startPaidService</code>. </li> <li>
                 * <code>FREE</code> &mdash; The free plan is exclusive to the Cloud
                 * Identity SKU and does not incur any billing. </li> </ul>
                 */
                planName?: string;
            };
            /**
             * This is an optional property. This purchase order (PO) information is for
             * resellers to use for their company tracking usage. If a
             * <code>purchaseOrderId</code> value is given it appears in the API responses
             * and shows up in the invoice. The property accepts up to 80 plain text
             * characters.
             */
            purchaseOrderId?: string;
            /**
             * Renewal settings for the annual commitment plan. For more detailed
             * information, see renewal options in the <a
             * href="//support.google.com/a/bin/answer.py?topic=1247359&amp;ctx=topic&amp;answer=2500693">administrator
             * help center</a>.
             */
            renewalSettings?: RenewalSettings;
            /**
             * URL to customer&#39;s Subscriptions page in the Admin console. The
             * read-only URL is generated by the API service. This is used if your client
             * application requires the customer to complete a task using the
             * Subscriptions page in the Admin console.
             */
            resourceUiUrl?: string;
            /**
             * This is a required property. The number and limit of user seat licenses in
             * the plan.
             */
            seats?: Seats;
            /**
             * A required property. The <code>skuId</code> is a unique system identifier
             * for a product&#39;s SKU assigned to a customer in the subscription. For
             * products and SKUs available in this version of the API, see <a
             * href="/admin-sdk/reseller/v1/how-tos/products.html"> Product and SKU
             * IDs</a>.
             */
            skuId?: string;
            /**
             * Read-only external display name for a product&#39;s SKU assigned to a
             * customer in the subscription. SKU names are subject to change at
             * Google&#39;s discretion. For products and SKUs available in this version of
             * the API, see <a href="/admin-sdk/reseller/v1/how-tos/products.html">
             * Product and SKU IDs</a>.
             */
            skuName?: string;
            /** This is an optional property. */
            status?: string;
            /**
             * The <code>subscriptionId</code> is the subscription identifier and is
             * unique for each customer. This is a required property. Since a
             * <code>subscriptionId</code> changes when a subscription is updated, we
             * recommend not using this ID as a key for persistent data. Use the
             * <code>subscriptionId</code> as described in <a
             * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
             * all reseller subscriptions</a>.
             */
            subscriptionId?: string;
            /**
             * Read-only field containing an enumerable of all the current suspension
             * reasons for a subscription. It is possible for a subscription to have many
             * concurrent, overlapping suspension reasons. A
             * subscription's <code>STATUS</code> is <code>SUSPENDED</code> until all
             * pending suspensions are removed. <br/><br/>Possible options include: <ul>
             * <li> <code>PENDING_TOS_ACCEPTANCE</code> - The customer has not logged in
             * and accepted the G Suite Resold Terms of Services. </li> <li>
             * <code>RENEWAL_WITH_TYPE_CANCEL</code> - The customer's commitment ended and
             * their service was cancelled at the end of their term.
             * </li> <li> <code>RESELLER_INITIATED</code> - A manual suspension invoked by
             * a Reseller. </li> <li> <code>TRIAL_ENDED</code> - The
             * customer's trial expired without a plan selected. </li> <li>
             * <code>OTHER</code> - The customer is suspended for an internal Google
             * reason (e.g. abuse or otherwise). </li> </ul>
             */
            suspensionReasons?: string[];
            /**
             * Read-only transfer related information for the subscription. For more
             * information, see <a
             * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_transferable_subscriptions">retrieve
             * transferable subscriptions for a customer</a>.
             */
            transferInfo?: {
                /**
                 * When inserting a subscription, this is the minimum number of seats listed
                 * in the transfer order for this product. For example, if the customer has
                 * 20 users, the reseller cannot place a transfer order of 15 seats. The
                 * minimum is 20 seats.
                 */
                minimumTransferableSeats?: number;
                /**
                 * The time when transfer token or intent to transfer will expire. The time
                 * is in milliseconds using UNIX Epoch format.
                 */
                transferabilityExpirationTime?: string;
            };
            /**
             * The G Suite annual commitment and flexible payment plans can be in a 30-day
             * free trial. For more information, see the <a
             * href="/admin-sdk/reseller/v1/how-tos/concepts#plans">API concepts</a>.
             */
            trialSettings?: {
                /**
                 * Determines if a subscription&#39;s plan is in a 30-day free trial or
                 * not:<ul><li><code>true</code> &mdash; The plan is in
                 * trial.</li><li><code>false</code> &mdash; The plan is not in
                 * trial.</li></ul>
                 */
                isInTrial?: boolean;
                /**
                 * Date when the trial ends. The value is in milliseconds using the UNIX
                 * Epoch format. See an example <a
                 * href="http://www.epochconverter.com/">Epoch converter</a>.
                 */
                trialEndTime?: string;
            };
        }
        interface Subscriptions {
            /**
             * Identifies the resource as a collection of subscriptions. Value:
             * reseller#subscriptions
             */
            kind?: string;
            /**
             * The continuation token, used to page through large result sets. Provide
             * this value in a subsequent request to return the next page of results.
             */
            nextPageToken?: string;
            /** The subscriptions in this page of results. */
            subscriptions?: Subscription[];
        }
        interface CustomersResource {
            /** Get a customer account. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Customer>;
            /** Order a new customer's account. */
            insert(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * The <code>customerAuthToken</code> query string is required when creating a
                 * resold account that transfers a direct customer&#39;s subscription or
                 * transfers another reseller customer&#39;s subscription to your reseller
                 * management. This is a hexadecimal authentication token needed to complete
                 * the subscription transfer. For more information, see the <a
                 * href="//support.google.com/a/bin/answer.py?answer=142336">administrator
                 * help center</a>.
                 */
                customerAuthToken?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Customer;
            }): Request<Customer>;
            insert(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * The <code>customerAuthToken</code> query string is required when creating a
                 * resold account that transfers a direct customer&#39;s subscription or
                 * transfers another reseller customer&#39;s subscription to your reseller
                 * management. This is a hexadecimal authentication token needed to complete
                 * the subscription transfer. For more information, see the <a
                 * href="//support.google.com/a/bin/answer.py?answer=142336">administrator
                 * help center</a>.
                 */
                customerAuthToken?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Customer): Request<Customer>;
            /** Patch a customer account's settings via Apiary Patch Orchestration */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Customer;
            }): Request<Customer>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Customer): Request<Customer>;
            /** Update a customer account's settings. */
            update(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Customer;
            }): Request<Customer>;
            update(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Customer): Request<Customer>;
        }
        interface ResellernotifyResource {
            /** Returns all the details of the watch corresponding to the reseller. */
            getwatchdetails(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ResellernotifyGetwatchdetailsResponse>;
            /** Registers a Reseller for receiving notifications. */
            register(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The service account which will own the created Cloud-PubSub topic. */
                serviceAccountEmailAddress?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ResellernotifyResource>;
            /** Unregisters a Reseller for receiving notifications. */
            unregister(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** The service account which owns the Cloud-PubSub topic. */
                serviceAccountEmailAddress?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ResellernotifyResource>;
        }
        interface SubscriptionsResource {
            /** Activates a subscription previously suspended by the reseller */
            activate(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Subscription>;
            /**
             * Update a subscription plan. Use this method to update a plan for a 30-day
             * trial or a flexible plan subscription to an annual commitment plan with
             * monthly or yearly payments.
             */
            changePlan(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: ChangePlanRequest;
            }): Request<Subscription>;
            changePlan(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: ChangePlanRequest): Request<Subscription>;
            /**
             * Update a user license&#39;s renewal settings. This is applicable for
             * accounts with annual commitment plans only.
             */
            changeRenewalSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: RenewalSettings;
            }): Request<Subscription>;
            changeRenewalSettings(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: RenewalSettings): Request<Subscription>;
            /** Update a subscription&#39;s user license settings. */
            changeSeats(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Seats;
            }): Request<Subscription>;
            changeSeats(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Seats): Request<Subscription>;
            /** Cancel, suspend, or transfer a subscription to direct. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /**
                 * The <code>deletionType</code> query string enables the cancellation,
                 * downgrade, or suspension of a subscription.
                 */
                deletionType: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<void>;
            /** Get a specific subscription. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Subscription>;
            /** Create or transfer a subscription. */
            insert(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * The <code>customerAuthToken</code> query string is required when creating a
                 * resold account that transfers a direct
                 * customer's subscription or transfers another reseller customer's
                 * subscription to your reseller management. This is a hexadecimal
                 * authentication token needed to complete the subscription transfer. For more
                 * information, see the <a
                 * href="//support.google.com/a/bin/answer.py?answer=142336">administrator
                 * help center</a>.
                 */
                customerAuthToken?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Subscription;
            }): Request<Subscription>;
            insert(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * The <code>customerAuthToken</code> query string is required when creating a
                 * resold account that transfers a direct
                 * customer's subscription or transfers another reseller customer's
                 * subscription to your reseller management. This is a hexadecimal
                 * authentication token needed to complete the subscription transfer. For more
                 * information, see the <a
                 * href="//support.google.com/a/bin/answer.py?answer=142336">administrator
                 * help center</a>.
                 */
                customerAuthToken?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Subscription): Request<Subscription>;
            /**
             * List of subscriptions managed by the reseller. The list can be all
             * subscriptions, all of a customer&#39;s subscriptions, or all of a
             * customer&#39;s transferable subscriptions.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * The <code>customerAuthToken</code> query string is required when creating a
                 * resold account that transfers a direct
                 * customer's subscription or transfers another reseller customer's
                 * subscription to your reseller management. This is a hexadecimal
                 * authentication token needed to complete the subscription transfer. For more
                 * information, see the <a
                 * href="//support.google.com/a/bin/answer.py?answer=142336">administrator
                 * help center</a>.
                 */
                customerAuthToken?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId?: string;
                /**
                 * When retrieving all of your subscriptions and filtering for specific
                 * customers, you can enter a prefix for a customer name. Using an example
                 * customer group that includes <code>exam.com</code>,
                 * <code>example20.com</code> and <code>example.com</code>:
                 * <ul>
                 * <li><code>exa</code> -- Returns all customer names that start with
                 * &#39;exa&#39; which could include <code>exam.com</code>,
                 * <code>example20.com</code>, and <code>example.com</code>. A name prefix is
                 * similar to using a regular expression&#39;s asterisk, exa&#42;.</li>
                 * <li><code>example</code> -- Returns <code>example20.com</code> and
                 * <code>example.com</code>.</li>
                 * </ul>
                 */
                customerNamePrefix?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * When retrieving a large list, the <code>maxResults</code> is the maximum
                 * number of results per page. The <code>nextPageToken</code> value takes you
                 * to the next page. The default is 20.
                 */
                maxResults?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Token to specify next page in the list */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Subscriptions>;
            /**
             * Immediately move a 30-day free trial subscription to a paid service
             * subscription.
             */
            startPaidService(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Subscription>;
            /** Suspends an active subscription. */
            suspend(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /**
                 * Either the customer&#39;s primary domain name or the customer's unique
                 * identifier. If using the domain name, we do not recommend using a
                 * <code>customerId</code> as a key for persistent data. If the domain name
                 * for a <code>customerId</code> is changed, the Google system automatically
                 * updates.
                 */
                customerId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * This is a required property. The <code>subscriptionId</code> is the
                 * subscription identifier and is unique for each customer. Since a
                 * <code>subscriptionId</code> changes when a subscription is updated, we
                 * recommend to not use this ID as a key for persistent data. And the
                 * <code>subscriptionId</code> can be found using the <a
                 * href="/admin-sdk/reseller/v1/how-tos/manage_subscriptions#get_all_subscriptions">retrieve
                 * all reseller subscriptions</a> method.
                 */
                subscriptionId: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Subscription>;
        }

        const customers: CustomersResource;

        const resellernotify: ResellernotifyResource;

        const subscriptions: SubscriptionsResource;
    }
}
