/* This is stub file for gapi.client.civicinfo definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('civicinfo', 'v2', () => {
        /** now we can use gapi.client.civicinfo */

        run();
    });

    async function run() {
        /** Searches for political divisions by their natural name or OCD ID. */
        await gapi.client.civicinfo.divisions.search({
            query: "Test string",
        }, {
            contextParams: {
                clientProfile: "Test string",
            },
        });
        /** List of available elections to query. */
        await gapi.client.civicinfo.elections.electionQuery(, {
            contextParams: {
                clientProfile: "Test string",
            },
        });
        /** Looks up information relevant to a voter based on the voter's registered address. */
        await gapi.client.civicinfo.elections.voterInfoQuery({
            address: "Test string",
            electionId: "Test string",
            officialOnly: true,
            returnAllAvailableData: true,
        }, {
            contextParams: {
                clientProfile: "Test string",
            },
            voterInfoSegmentResult: {
                generatedMillis: "Test string",
                postalAddress: {
                    addressLines: [
                        "Test string"                    ],
                    administrativeAreaName: "Test string",
                    countryName: "Test string",
                    countryNameCode: "Test string",
                    dependentLocalityName: "Test string",
                    dependentThoroughfareName: "Test string",
                    firmName: "Test string",
                    isDisputed: true,
                    languageCode: "Test string",
                    localityName: "Test string",
                    postBoxNumber: "Test string",
                    postalCodeNumber: "Test string",
                    postalCodeNumberExtension: "Test string",
                    premiseName: "Test string",
                    recipientName: "Test string",
                    sortingCode: "Test string",
                    subAdministrativeAreaName: "Test string",
                    subPremiseName: "Test string",
                    thoroughfareName: "Test string",
                    thoroughfareNumber: "Test string",
                },
                request: undefined,
                response: {
                    contests: [
                        {
                            ballotPlacement: "Test string",
                            ballotTitle: "Test string",
                            candidates: [
                                {
                                    candidateUrl: "Test string",
                                    channels: [
                                        {
                                            id: "Test string",
                                            type: "Test string",
                                        }                                    ],
                                    email: "Test string",
                                    name: "Test string",
                                    orderOnBallot: "Test string",
                                    party: "Test string",
                                    phone: "Test string",
                                    photoUrl: "Test string",
                                }                            ],
                            district: {
                                id: "Test string",
                                kgForeignKey: "Test string",
                                name: "Test string",
                                scope: "Test string",
                            },
                            electorateSpecifications: "Test string",
                            id: "Test string",
                            level: [
                                "Test string"                            ],
                            numberElected: "Test string",
                            numberVotingFor: "Test string",
                            office: "Test string",
                            primaryParty: "Test string",
                            referendumBallotResponses: [
                                "Test string"                            ],
                            referendumBrief: "Test string",
                            referendumConStatement: "Test string",
                            referendumEffectOfAbstain: "Test string",
                            referendumPassageThreshold: "Test string",
                            referendumProStatement: "Test string",
                            referendumSubtitle: "Test string",
                            referendumText: "Test string",
                            referendumTitle: "Test string",
                            referendumUrl: "Test string",
                            roles: [
                                "Test string"                            ],
                            sources: [
                                {
                                    name: "Test string",
                                    official: true,
                                }                            ],
                            special: "Test string",
                            type: "Test string",
                        }                    ],
                    dropOffLocations: [
                        {
                            address: {
                                city: "Test string",
                                line1: "Test string",
                                line2: "Test string",
                                line3: "Test string",
                                locationName: "Test string",
                                state: "Test string",
                                zip: "Test string",
                            },
                            endDate: "Test string",
                            id: "Test string",
                            latitude: 42,
                            longitude: 42,
                            name: "Test string",
                            notes: "Test string",
                            pollingHours: "Test string",
                            sources: [
                                {
                                    name: "Test string",
                                    official: true,
                                }                            ],
                            startDate: "Test string",
                            voterServices: "Test string",
                        }                    ],
                    earlyVoteSites: [
                        {
                            address: {
                                city: "Test string",
                                line1: "Test string",
                                line2: "Test string",
                                line3: "Test string",
                                locationName: "Test string",
                                state: "Test string",
                                zip: "Test string",
                            },
                            endDate: "Test string",
                            id: "Test string",
                            latitude: 42,
                            longitude: 42,
                            name: "Test string",
                            notes: "Test string",
                            pollingHours: "Test string",
                            sources: [
                                {
                                    name: "Test string",
                                    official: true,
                                }                            ],
                            startDate: "Test string",
                            voterServices: "Test string",
                        }                    ],
                    election: {
                        electionDay: "Test string",
                        id: "Test string",
                        name: "Test string",
                        ocdDivisionId: "Test string",
                    },
                    kind: "Test string",
                    mailOnly: true,
                    normalizedInput: {
                        city: "Test string",
                        line1: "Test string",
                        line2: "Test string",
                        line3: "Test string",
                        locationName: "Test string",
                        state: "Test string",
                        zip: "Test string",
                    },
                    otherElections: [
                        {
                            electionDay: "Test string",
                            id: "Test string",
                            name: "Test string",
                            ocdDivisionId: "Test string",
                        }                    ],
                    pollingLocations: [
                        {
                            address: {
                                city: "Test string",
                                line1: "Test string",
                                line2: "Test string",
                                line3: "Test string",
                                locationName: "Test string",
                                state: "Test string",
                                zip: "Test string",
                            },
                            endDate: "Test string",
                            id: "Test string",
                            latitude: 42,
                            longitude: 42,
                            name: "Test string",
                            notes: "Test string",
                            pollingHours: "Test string",
                            sources: [
                                {
                                    name: "Test string",
                                    official: true,
                                }                            ],
                            startDate: "Test string",
                            voterServices: "Test string",
                        }                    ],
                    precinctId: "Test string",
                    segments: [
                        {
                            administrationRegionIds: [
                                "Test string"                            ],
                            beforeGeocodeId: "Test string",
                            catalistUniquePrecinctCode: "Test string",
                            city: "Test string",
                            cityCouncilDistrict: "Test string",
                            congressionalDistrict: "Test string",
                            contestIds: [
                                "Test string"                            ],
                            countyCouncilDistrict: "Test string",
                            countyFips: "Test string",
                            datasetId: "Test string",
                            earlyVoteSiteByIds: [
                                "Test string"                            ],
                            endHouseNumber: "Test string",
                            geocodedPoint: {
                                latE7: 42,
                                lngE7: 42,
                                metadata: {
                                    internal: {
                                        isAuto: true,
                                        sourceSummary: {
                                            dataset: "Test string",
                                            provider: "Test string",
                                        },
                                    },
                                },
                            },
                            geographicDivisionOcdIds: [
                                "Test string"                            ],
                            id: "Test string",
                            judicialDistrict: "Test string",
                            mailOnly: true,
                            municipalDistrict: "Test string",
                            ncoaAddress: "Test string",
                            oddOrEvens: [
                                "Test string"                            ],
                            originalId: "Test string",
                            pollinglocationByIds: [
                                "Test string"                            ],
                            precinctName: "Test string",
                            precinctOcdId: "Test string",
                            provenances: [
                                {
                                    collidedSegmentSource: {
                                        segments: undefined,
                                    },
                                    ctclContestUuid: "Test string",
                                    ctclOfficeUuid: "Test string",
                                    datasetId: "Test string",
                                    precinctId: "Test string",
                                    precinctSplitId: "Test string",
                                    tsStreetSegmentId: "Test string",
                                    vip5PrecinctId: "Test string",
                                    vip5StreetSegmentId: "Test string",
                                    vipStreetSegmentId: "Test string",
                                }                            ],
                            published: true,
                            schoolDistrict: "Test string",
                            startHouseNumber: "Test string",
                            startLatE7: 42,
                            startLngE7: 42,
                            state: "Test string",
                            stateHouseDistrict: "Test string",
                            stateSenateDistrict: "Test string",
                            streetName: "Test string",
                            subAdministrativeAreaName: "Test string",
                            surrogateId: "Test string",
                            targetsmartUniquePrecinctCode: "Test string",
                            townshipDistrict: "Test string",
                            unitNumber: "Test string",
                            unitType: "Test string",
                            vanPrecinctCode: "Test string",
                            voterGeographicDivisionOcdIds: [
                                "Test string"                            ],
                            wardDistrict: "Test string",
                            wildcard: true,
                            zip: "Test string",
                        }                    ],
                    state: [
                        {
                            electionAdministrationBody: {
                                absenteeVotingInfoUrl: "Test string",
                                addressLines: [
                                    "Test string"                                ],
                                ballotInfoUrl: "Test string",
                                correspondenceAddress: {
                                    city: "Test string",
                                    line1: "Test string",
                                    line2: "Test string",
                                    line3: "Test string",
                                    locationName: "Test string",
                                    state: "Test string",
                                    zip: "Test string",
                                },
                                electionInfoUrl: "Test string",
                                electionOfficials: [
                                    {
                                        emailAddress: "Test string",
                                        faxNumber: "Test string",
                                        name: "Test string",
                                        officePhoneNumber: "Test string",
                                        title: "Test string",
                                    }                                ],
                                electionRegistrationConfirmationUrl: "Test string",
                                electionRegistrationUrl: "Test string",
                                electionRulesUrl: "Test string",
                                hoursOfOperation: "Test string",
                                name: "Test string",
                                physicalAddress: {
                                    city: "Test string",
                                    line1: "Test string",
                                    line2: "Test string",
                                    line3: "Test string",
                                    locationName: "Test string",
                                    state: "Test string",
                                    zip: "Test string",
                                },
                                voter_services: [
                                    "Test string"                                ],
                                votingLocationFinderUrl: "Test string",
                            },
                            id: "Test string",
                            local_jurisdiction: undefined,
                            name: "Test string",
                            sources: [
                                {
                                    name: "Test string",
                                    official: true,
                                }                            ],
                        }                    ],
                },
            },
        });
        /** Looks up political geography and representative information for a single address. */
        await gapi.client.civicinfo.representatives.representativeInfoByAddress({
            address: "Test string",
            includeOffices: true,
            levels: "Test string",
            roles: "Test string",
        }, {
            contextParams: {
                clientProfile: "Test string",
            },
        });
        /** Looks up representative information for a single geographic division. */
        await gapi.client.civicinfo.representatives.representativeInfoByDivision({
            levels: "Test string",
            ocdId: "Test string",
            recursive: true,
            roles: "Test string",
        }, {
            contextParams: {
                clientProfile: "Test string",
            },
        });
    }
});
