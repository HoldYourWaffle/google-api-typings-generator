/* This is stub file for gapi.client.displayvideo definition tests */
/* IMPORTANT.
* This file was automatically generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
* In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
**/
gapi.load('client', () => {
    /** now we can use gapi.client */
    gapi.client.load('displayvideo', 'v1', () => {
        /** now we can use gapi.client.displayvideo */

        /** don't forget to authenticate your client before sending any request to resources: */
        /** declare client_id registered in Google Developers Console */
        const client_id = '<<PUT YOUR CLIENT ID HERE>>';
        const scope = [
            /** Create, see, edit, and permanently delete your Display & Video 360 entities and reports */
            'https://www.googleapis.com/auth/display-video',
            /** View and manage your reports in DoubleClick Bid Manager */
            'https://www.googleapis.com/auth/doubleclickbidmanager',
        ];
        const immediate = false;
        gapi.auth.authorize({ client_id, scope, immediate }, authResult => {
            if (authResult && !authResult.error) {
                /** handle successful authorization */
                run();
            } else {
                /** handle authorization error */
            }
        });
    });

    async function run() {
        /**
         * Downloads media. Download is supported on the URI `/download/{resource_name=&#42;&#42;}?alt=media.`
         *
         * &#42;&#42;Note&#42;&#42;: Download requests will not be successful without including `alt=media` query string.
         */
        await gapi.client.displayvideo.media.download({
            resourceName: "Test string",
        });
        /**
         * Creates an SDF Download Task. Returns an
         * Operation.
         *
         * An SDF Download Task is a long-running, asynchronous operation. The
         * metadata type of this operation is
         * SdfDownloadTaskMetadata. If the request is successful, the
         * response type of the operation is
         * SdfDownloadTask. The response will not include the download files,
         * which must be retrieved with
         * media.download. The state of
         * operation can be retrieved with
         * sdfdownloadtask.operations.get.
         *
         * Any errors can be found in the
         * error.message. Note
         * that error.details is expected to be
         * empty.
         */
        await gapi.client.displayvideo.sdfdownloadtasks.create({
        }, {
            advertiserId: "Test string",
            idFilter: {
                adGroupAdIds: [
                    "Test string"                ],
                adGroupIds: [
                    "Test string"                ],
                campaignIds: [
                    "Test string"                ],
                insertionOrderIds: [
                    "Test string"                ],
                lineItemIds: [
                    "Test string"                ],
                mediaProductIds: [
                    "Test string"                ],
            },
            inventorySourceFilter: {
                inventorySourceIds: [
                    "Test string"                ],
            },
            parentEntityFilter: {
                fileType: [
                    "Test string"                ],
                filterIds: [
                    "Test string"                ],
                filterType: "Test string",
            },
            partnerId: "Test string",
            version: "Test string",
        });
        /** Gets the latest state of an asynchronous SDF download task operation. Clients should poll this method at intervals of 30 seconds. */
        await gapi.client.displayvideo.sdfdownloadtasks.operations.get({
            name: "Test string",
        });
    }
});
