// Type definitions for non-npm package Google Cloud DNS API v1 1.0
// Project: https://developers.google.com/cloud-dns
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://www.googleapis.com/discovery/v1/apis/dns/v1/rest
// Revision: 20200515

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Google Cloud DNS API v1 */
    function load(name: "dns", version: "v1"): PromiseLike<void>;
    function load(name: "dns", version: "v1", callback: () => any): void;

    namespace dns {
        interface Change {
            additions?: ResourceRecordSet[];
            deletions?: ResourceRecordSet[];
            id?: string;
            isServing?: boolean;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#change". */
            kind?: string;
            startTime?: string;
            status?: string;
        }
        interface ChangesListResponse {
            changes?: Change[];
            header?: ResponseHeader;
            /** Type of resource. */
            kind?: string;
            nextPageToken?: string;
        }
        interface DnsKey {
            algorithm?: string;
            creationTime?: string;
            description?: string;
            digests?: DnsKeyDigest[];
            id?: string;
            isActive?: boolean;
            keyLength?: number;
            keyTag?: number;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#dnsKey". */
            kind?: string;
            publicKey?: string;
            type?: string;
        }
        interface DnsKeyDigest {
            digest?: string;
            type?: string;
        }
        interface DnsKeysListResponse {
            dnsKeys?: DnsKey[];
            header?: ResponseHeader;
            /** Type of resource. */
            kind?: string;
            nextPageToken?: string;
        }
        interface DnsKeySpec {
            algorithm?: string;
            keyLength?: number;
            keyType?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#dnsKeySpec". */
            kind?: string;
        }
        interface ManagedZone {
            creationTime?: string;
            description?: string;
            dnsName?: string;
            dnssecConfig?: ManagedZoneDnsSecConfig;
            forwardingConfig?: ManagedZoneForwardingConfig;
            id?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZone". */
            kind?: string;
            labels?: { [P in string]: string };
            name?: string;
            nameServers?: string[];
            nameServerSet?: string;
            peeringConfig?: ManagedZonePeeringConfig;
            privateVisibilityConfig?: ManagedZonePrivateVisibilityConfig;
            reverseLookupConfig?: ManagedZoneReverseLookupConfig;
            visibility?: string;
        }
        interface ManagedZoneDnsSecConfig {
            defaultKeySpecs?: DnsKeySpec[];
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZoneDnsSecConfig". */
            kind?: string;
            nonExistence?: string;
            state?: string;
        }
        interface ManagedZoneForwardingConfig {
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZoneForwardingConfig". */
            kind?: string;
            targetNameServers?: ManagedZoneForwardingConfigNameServerTarget[];
        }
        interface ManagedZoneForwardingConfigNameServerTarget {
            forwardingPath?: string;
            ipv4Address?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZoneForwardingConfigNameServerTarget". */
            kind?: string;
        }
        interface ManagedZoneOperationsListResponse {
            header?: ResponseHeader;
            /** Type of resource. */
            kind?: string;
            nextPageToken?: string;
            operations?: Operation[];
        }
        interface ManagedZonePeeringConfig {
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZonePeeringConfig". */
            kind?: string;
            targetNetwork?: ManagedZonePeeringConfigTargetNetwork;
        }
        interface ManagedZonePeeringConfigTargetNetwork {
            deactivateTime?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZonePeeringConfigTargetNetwork". */
            kind?: string;
            networkUrl?: string;
        }
        interface ManagedZonePrivateVisibilityConfig {
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZonePrivateVisibilityConfig". */
            kind?: string;
            networks?: ManagedZonePrivateVisibilityConfigNetwork[];
        }
        interface ManagedZonePrivateVisibilityConfigNetwork {
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZonePrivateVisibilityConfigNetwork". */
            kind?: string;
            networkUrl?: string;
        }
        interface ManagedZoneReverseLookupConfig {
            /** Identifies what kind of resource this is. Value: the fixed string "dns#managedZoneReverseLookupConfig". */
            kind?: string;
        }
        interface ManagedZonesListResponse {
            header?: ResponseHeader;
            /** Type of resource. */
            kind?: string;
            managedZones?: ManagedZone[];
            nextPageToken?: string;
        }
        interface Operation {
            dnsKeyContext?: OperationDnsKeyContext;
            id?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#operation". */
            kind?: string;
            startTime?: string;
            status?: string;
            type?: string;
            user?: string;
            zoneContext?: OperationManagedZoneContext;
        }
        interface OperationDnsKeyContext {
            newValue?: DnsKey;
            oldValue?: DnsKey;
        }
        interface OperationManagedZoneContext {
            newValue?: ManagedZone;
            oldValue?: ManagedZone;
        }
        interface PoliciesListResponse {
            header?: ResponseHeader;
            /** Type of resource. */
            kind?: string;
            nextPageToken?: string;
            policies?: Policy[];
        }
        interface PoliciesPatchResponse {
            header?: ResponseHeader;
            policy?: Policy;
        }
        interface PoliciesUpdateResponse {
            header?: ResponseHeader;
            policy?: Policy;
        }
        interface Policy {
            alternativeNameServerConfig?: PolicyAlternativeNameServerConfig;
            description?: string;
            enableInboundForwarding?: boolean;
            enableLogging?: boolean;
            id?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#policy". */
            kind?: string;
            name?: string;
            networks?: PolicyNetwork[];
        }
        interface PolicyAlternativeNameServerConfig {
            /** Identifies what kind of resource this is. Value: the fixed string "dns#policyAlternativeNameServerConfig". */
            kind?: string;
            targetNameServers?: PolicyAlternativeNameServerConfigTargetNameServer[];
        }
        interface PolicyAlternativeNameServerConfigTargetNameServer {
            forwardingPath?: string;
            ipv4Address?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#policyAlternativeNameServerConfigTargetNameServer". */
            kind?: string;
        }
        interface PolicyNetwork {
            /** Identifies what kind of resource this is. Value: the fixed string "dns#policyNetwork". */
            kind?: string;
            networkUrl?: string;
        }
        interface Project {
            id?: string;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#project". */
            kind?: string;
            number?: string;
            quota?: Quota;
        }
        interface Quota {
            dnsKeysPerManagedZone?: number;
            /** Identifies what kind of resource this is. Value: the fixed string "dns#quota". */
            kind?: string;
            managedZones?: number;
            managedZonesPerNetwork?: number;
            networksPerManagedZone?: number;
            networksPerPolicy?: number;
            policies?: number;
            resourceRecordsPerRrset?: number;
            rrsetAdditionsPerChange?: number;
            rrsetDeletionsPerChange?: number;
            rrsetsPerManagedZone?: number;
            targetNameServersPerManagedZone?: number;
            targetNameServersPerPolicy?: number;
            totalRrdataSizePerChange?: number;
            whitelistedKeySpecs?: DnsKeySpec[];
        }
        interface ResourceRecordSet {
            /** Identifies what kind of resource this is. Value: the fixed string "dns#resourceRecordSet". */
            kind?: string;
            name?: string;
            rrdatas?: string[];
            signatureRrdatas?: string[];
            ttl?: number;
            type?: string;
        }
        interface ResourceRecordSetsListResponse {
            header?: ResponseHeader;
            /** Type of resource. */
            kind?: string;
            nextPageToken?: string;
            rrsets?: ResourceRecordSet[];
        }
        interface ResponseHeader {
            operationId?: string;
        }
        interface ChangesResource {
            create(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Change;
            }): Request<Change>;
            create(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Change): Request<Change>;
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                changeId: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<Change>;
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                maxResults?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                sortBy?: string;
                sortOrder?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ChangesListResponse>;
        }
        interface DnsKeysResource {
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                digestType?: string;
                dnsKeyId: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<DnsKey>;
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                digestType?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                maxResults?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<DnsKeysListResponse>;
        }
        interface ManagedZoneOperationsResource {
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                operation: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<Operation>;
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                maxResults?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                sortBy?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ManagedZoneOperationsListResponse>;
        }
        interface ManagedZonesResource {
            create(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ManagedZone;
            }): Request<ManagedZone>;
            create(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ManagedZone): Request<ManagedZone>;
            delete(request?: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<void>;
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ManagedZone>;
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                dnsName?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                maxResults?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ManagedZonesListResponse>;
            patch(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ManagedZone;
            }): Request<Operation>;
            patch(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ManagedZone): Request<Operation>;
            update(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: ManagedZone;
            }): Request<Operation>;
            update(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: ManagedZone): Request<Operation>;
        }
        interface PoliciesResource {
            create(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Policy;
            }): Request<Policy>;
            create(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Policy): Request<Policy>;
            delete(request?: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                policy: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<void>;
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                policy: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<Policy>;
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                maxResults?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<PoliciesListResponse>;
            patch(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                policy: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Policy;
            }): Request<PoliciesPatchResponse>;
            patch(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                policy: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Policy): Request<PoliciesPatchResponse>;
            update(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                policy: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
                /** Request body */
                resource: Policy;
            }): Request<PoliciesUpdateResponse>;
            update(request: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                policy: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            },
            body: Policy): Request<PoliciesUpdateResponse>;
        }
        interface ProjectsResource {
            get(request?: {
                /** Data format for the response. */
                alt?: string;
                clientOperationId?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<Project>;
        }
        interface ResourceRecordSetsResource {
            list(request?: {
                /** Data format for the response. */
                alt?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                managedZone: string;
                maxResults?: number;
                name?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                project: string;
                /** An opaque string that represents a user for quota purposes. Must not exceed 40 characters. */
                quotaUser?: string;
                type?: string;
                /** Deprecated. Please use quotaUser instead. */
                userIp?: string;
            }): Request<ResourceRecordSetsListResponse>;
        }

        const changes: ChangesResource;

        const dnsKeys: DnsKeysResource;

        const managedZoneOperations: ManagedZoneOperationsResource;

        const managedZones: ManagedZonesResource;

        const policies: PoliciesResource;

        const projects: ProjectsResource;

        const resourceRecordSets: ResourceRecordSetsResource;
    }
}
