// Type definitions for non-npm package Service Broker API v1 1.0
// Project: https://cloud.google.com/kubernetes-engine/docs/concepts/add-on/service-broker
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://servicebroker.googleapis.com/$discovery/rest?version=v1

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Service Broker API v1 */
    function load(name: "servicebroker", version: "v1"): PromiseLike<void>;
    function load(name: "servicebroker", version: "v1", callback: () => any): void;

    namespace servicebroker {
        interface GoogleIamV1__Binding {
            /**
             * The condition that is associated with this binding.
             * NOTE: An unsatisfied condition will not allow user access via current
             * binding. Different bindings, including their conditions, are examined
             * independently.
             */
            condition?: GoogleType__Expr;
            /**
             * Specifies the identities requesting access for a Cloud Platform resource.
             * `members` can have the following values:
             *
             * &#42; `allUsers`: A special identifier that represents anyone who is
             * on the internet; with or without a Google account.
             *
             * &#42; `allAuthenticatedUsers`: A special identifier that represents anyone
             * who is authenticated with a Google account or a service account.
             *
             * &#42; `user:{emailid}`: An email address that represents a specific Google
             * account. For example, `alice@example.com` .
             *
             *
             * &#42; `serviceAccount:{emailid}`: An email address that represents a service
             * account. For example, `my-other-app@appspot.gserviceaccount.com`.
             *
             * &#42; `group:{emailid}`: An email address that represents a Google group.
             * For example, `admins@example.com`.
             *
             * &#42; `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique
             * identifier) representing a user that has been recently deleted. For
             * example, `alice@example.com?uid=123456789012345678901`. If the user is
             * recovered, this value reverts to `user:{emailid}` and the recovered user
             * retains the role in the binding.
             *
             * &#42; `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus
             * unique identifier) representing a service account that has been recently
             * deleted. For example,
             * `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.
             * If the service account is undeleted, this value reverts to
             * `serviceAccount:{emailid}` and the undeleted service account retains the
             * role in the binding.
             *
             * &#42; `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique
             * identifier) representing a Google group that has been recently
             * deleted. For example, `admins@example.com?uid=123456789012345678901`. If
             * the group is recovered, this value reverts to `group:{emailid}` and the
             * recovered group retains the role in the binding.
             *
             *
             * &#42; `domain:{domain}`: The G Suite domain (primary) that represents all the
             * users of that domain. For example, `google.com` or `example.com`.
             */
            members?: string[];
            /**
             * Role that is assigned to `members`.
             * For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
             */
            role?: string;
        }
        interface GoogleIamV1__Policy {
            /**
             * Associates a list of `members` to a `role`. Optionally, may specify a
             * `condition` that determines how and when the `bindings` are applied. Each
             * of the `bindings` must contain at least one member.
             */
            bindings?: GoogleIamV1__Binding[];
            /**
             * `etag` is used for optimistic concurrency control as a way to help
             * prevent simultaneous updates of a policy from overwriting each other.
             * It is strongly suggested that systems make use of the `etag` in the
             * read-modify-write cycle to perform policy updates in order to avoid race
             * conditions: An `etag` is returned in the response to `getIamPolicy`, and
             * systems are expected to put that etag in the request to `setIamPolicy` to
             * ensure that their change will be applied to the same version of the policy.
             *
             * &#42;&#42;Important:&#42;&#42; If you use IAM Conditions, you must include the `etag` field
             * whenever you call `setIamPolicy`. If you omit this field, then IAM allows
             * you to overwrite a version `3` policy with a version `1` policy, and all of
             * the conditions in the version `3` policy are lost.
             */
            etag?: string;
            /**
             * Specifies the format of the policy.
             *
             * Valid values are `0`, `1`, and `3`. Requests that specify an invalid value
             * are rejected.
             *
             * Any operation that affects conditional role bindings must specify version
             * `3`. This requirement applies to the following operations:
             *
             * &#42; Getting a policy that includes a conditional role binding
             * &#42; Adding a conditional role binding to a policy
             * &#42; Changing a conditional role binding in a policy
             * &#42; Removing any role binding, with or without a condition, from a policy
             * that includes conditions
             *
             * &#42;&#42;Important:&#42;&#42; If you use IAM Conditions, you must include the `etag` field
             * whenever you call `setIamPolicy`. If you omit this field, then IAM allows
             * you to overwrite a version `3` policy with a version `1` policy, and all of
             * the conditions in the version `3` policy are lost.
             *
             * If a policy does not include any conditions, operations on that policy may
             * specify any valid version or leave the field unset.
             */
            version?: number;
        }
        interface GoogleIamV1__SetIamPolicyRequest {
            /**
             * REQUIRED: The complete policy to be applied to the `resource`. The size of
             * the policy is limited to a few 10s of KB. An empty policy is a
             * valid policy but certain Cloud Platform services (such as Projects)
             * might reject them.
             */
            policy?: GoogleIamV1__Policy;
        }
        interface GoogleIamV1__TestIamPermissionsRequest {
            /**
             * The set of permissions to check for the `resource`. Permissions with
             * wildcards (such as '&#42;' or 'storage.&#42;') are not allowed. For more
             * information see
             * [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
             */
            permissions?: string[];
        }
        interface GoogleIamV1__TestIamPermissionsResponse {
            /**
             * A subset of `TestPermissionsRequest.permissions` that the caller is
             * allowed.
             */
            permissions?: string[];
        }
        interface GoogleType__Expr {
            /**
             * An optional description of the expression. This is a longer text which
             * describes the expression, e.g. when hovered over it in a UI.
             */
            description?: string;
            /**
             * Textual representation of an expression in
             * Common Expression Language syntax.
             *
             * The application context of the containing message determines which
             * well-known feature set of CEL is supported.
             */
            expression?: string;
            /**
             * An optional string indicating the location of the expression for error
             * reporting, e.g. a file name and a position in the file.
             */
            location?: string;
            /**
             * An optional title for the expression, i.e. a short string describing
             * its purpose. This can be used e.g. in UIs which allow to enter the
             * expression.
             */
            title?: string;
        }
        interface V1Resource {
            /**
             * Gets the access control policy for a resource.
             * Returns an empty policy if the resource exists and does not have a policy
             * set.
             */
            getIamPolicy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Optional. The policy format version to be returned.
                 *
                 * Valid values are 0, 1, and 3. Requests specifying an invalid value will be
                 * rejected.
                 *
                 * Requests for policies with any conditional bindings must specify version 3.
                 * Policies without any conditional bindings may specify any valid value or
                 * leave the field unset.
                 */
                "options.requestedPolicyVersion"?: number;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy is being requested.
                 * See the operation documentation for the appropriate value for this field.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleIamV1__Policy>;
            /**
             * Sets the access control policy on the specified resource. Replaces any
             * existing policy.
             *
             * Can return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED
             */
            setIamPolicy(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy is being specified.
                 * See the operation documentation for the appropriate value for this field.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            },
            body: GoogleIamV1__SetIamPolicyRequest): Request<GoogleIamV1__Policy>;
            /**
             * Returns permissions that a caller has on the specified resource.
             * If the resource does not exist, this will return an empty set of
             * permissions, not a NOT_FOUND error.
             *
             * Note: This operation is designed to be used for building permission-aware
             * UIs and command-line tools, not for authorization checking. This operation
             * may "fail open" without warning.
             */
            testIamPermissions(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * REQUIRED: The resource for which the policy detail is being requested.
                 * See the operation documentation for the appropriate value for this field.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            },
            body: GoogleIamV1__TestIamPermissionsRequest): Request<GoogleIamV1__TestIamPermissionsResponse>;
        }

        const v1: V1Resource;
    }
}
