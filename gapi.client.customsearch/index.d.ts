// Type definitions for non-npm package Custom Search API v1 1.0
// Project: https://developers.google.com/custom-search/v1/introduction
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://www.googleapis.com/discovery/v1/apis/customsearch/v1/rest
// Revision: 20200408

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Custom Search API v1 */
    function load(name: "customsearch", version: "v1"): PromiseLike<void>;
    function load(name: "customsearch", version: "v1", callback: () => any): void;

    namespace customsearch {
        interface Promotion {
            /**
             * An array of block objects for this promotion. See Google WebSearch Protocol
             * reference for more information.
             */
            bodyLines?: Array<{
                /** The block object's text in HTML, if it has text. */
                htmlTitle?: string;
                /** The anchor text of the block object's link, if it has a link. */
                link?: string;
                /** The block object's text, if it has text. */
                title?: string;
                /** The URL of the block object's link, if it has one. */
                url?: string;
            }>;
            /** An abridged version of this search's result URL, e.g. www.example.com. */
            displayLink?: string;
            /** The title of the promotion, in HTML. */
            htmlTitle?: string;
            /** Image belonging to a promotion. */
            image?: {
                /** Image height in pixels. */
                height?: number;
                /** URL of the image for this promotion link. */
                source?: string;
                /** Image width in pixels. */
                width?: number;
            };
            /** The URL of the promotion. */
            link?: string;
            /** The title of the promotion. */
            title?: string;
        }
        interface Result {
            /** Indicates the ID of Google's cached version of the search result. */
            cacheId?: string;
            /** An abridged version of this search resultâ€™s URL, e.g. www.example.com. */
            displayLink?: string;
            /** The file format of the search result. */
            fileFormat?: string;
            /** The URL displayed after the snippet for each search result. */
            formattedUrl?: string;
            /** The HTML-formatted URL displayed after the snippet for each search result. */
            htmlFormattedUrl?: string;
            /** The snippet of the search result, in HTML. */
            htmlSnippet?: string;
            /** The title of the search result, in HTML. */
            htmlTitle?: string;
            /** Image belonging to a custom search result. */
            image?: {
                /** The size of the image, in pixels. */
                byteSize?: number;
                /** A URL pointing to the webpage hosting the image. */
                contextLink?: string;
                /** The height of the image, in pixels. */
                height?: number;
                /** The height of the thumbnail image, in pixels. */
                thumbnailHeight?: number;
                /** A URL to the thumbnail image. */
                thumbnailLink?: string;
                /** The width of the thumbnail image, in pixels. */
                thumbnailWidth?: number;
                /** The width of the image, in pixels. */
                width?: number;
            };
            /**
             * A unique identifier for the type of current object. For this API, it is
             * customsearch#result.
             */
            kind?: string;
            /** Encapsulates all information about refinement labels. */
            labels?: Array<{
                /**
                 * The display name of a refinement label. This is the name you should
                 * display in your user interface.
                 */
                displayName?: string;
                /** Refinement label and the associated refinement operation. */
                label_with_op?: string;
                /**
                 * The name of a refinement label, which you can use to refine searches.
                 * Don't display this in your user interface; instead, use displayName.
                 */
                name?: string;
            }>;
            /**
             * The full URL to which the search result is pointing, e.g.
             * http://www.example.com/foo/bar.
             */
            link?: string;
            /** The MIME type of the search result. */
            mime?: string;
            /** Contains PageMap information for this search result. */
            pagemap?: Record<string, any>;
            /** The snippet of the search result, in plain text. */
            snippet?: string;
            /** The title of the search result, in plain text. */
            title?: string;
        }
        interface Search {
            /** Metadata and refinements associated with the given search engine. */
            context?: Record<string, any>;
            /** The current set of custom search results. */
            items?: Result[];
            /**
             * Unique identifier for the type of current object. For this API, it is
             * customsearch#search.
             */
            kind?: string;
            /**
             * The set of promotions. Present only if the custom search engine's
             * configuration files define any promotions for the given query.
             */
            promotions?: Promotion[];
            /** Query metadata for the previous, current, and next pages of results. */
            queries?: {
                /** Metadata representing the next page of results, if applicable. */
                nextPage?: Array<{
                    /** Number of search results returned in this set. */
                    count?: number;
                    /**
                     * Restricts search results to documents originating in a particular
                     * country. You may use Boolean operators in the cr parameter's value.
                     */
                    cr?: string;
                    /**
                     * The identifier of a custom search engine created using the Custom Search
                     * Control Panel, if specified in request. This is a custom property not
                     * defined in the OpenSearch spec.
                     */
                    cx?: string;
                    /**
                     * Restricts results to URLs based on date. Supported values include:
                     * d[number]: requests results from the specified number of past days.
                     * w[number]: requests results from the specified number of past weeks.
                     * m[number]: requests results from the specified number of past months.
                     * y[number]: requests results from the specified number of past years.
                     */
                    dateRestrict?: string;
                    /**
                     * Enables or disables the Simplified and Traditional Chinese Search
                     * feature. Supported values are: 0: enabled (default) 1: disabled
                     */
                    disableCnTwTranslation?: string;
                    /**
                     * Identifies a phrase that all documents in the search results must
                     * contain.
                     */
                    exactTerms?: string;
                    /**
                     * Identifies a word or phrase that should not appear in any documents in
                     * the search results.
                     */
                    excludeTerms?: string;
                    /**
                     * Restricts results to files of a specified extension. Filetypes supported
                     * by Google include: Adobe Portable Document Format (pdf) Adobe PostScript
                     * (ps) Lotus 1-2-3 (wk1, wk2, wk3, wk4, wk5, wki, wks, wku) Lotus WordPro
                     * (lwp) Macwrite (mw) Microsoft Excel (xls) Microsoft PowerPoint (ppt)
                     * Microsoft Word (doc)
                     * Microsoft Works (wks, wps, wdb)
                     * Microsoft Write (wri)
                     * Rich Text Format (rtf)
                     * Shockwave Flash (swf)
                     * Text (ans, txt).
                     */
                    fileType?: string;
                    /**
                     * Activates or deactivates the automatic filtering of Google search
                     * results. The default value for the filter parameter is 1, which indicates
                     * that the feature is enabled. Valid values for this parameter are: 0:
                     * Disabled 1: Enabled
                     */
                    filter?: string;
                    /**
                     * Boosts search results whose country of origin matches the parameter
                     * value. Specifying a gl parameter value in WebSearch requests should
                     * improve the relevance of results. This is particularly true for
                     * international customers and, even more specifically, for customers in
                     * English-speaking countries other than the United States.
                     */
                    gl?: string;
                    /**
                     * Specifies the Google domain (for example, google.com, google.de, or
                     * google.fr) to which the search should be limited.
                     */
                    googleHost?: string;
                    /**
                     * Specifies the ending value for a search range. Use cse:lowRange and
                     * cse:highrange to append an inclusive search range of lowRange...highRange
                     * to the query.
                     */
                    highRange?: string;
                    /**
                     * Specifies the interface language (host language) of your user interface.
                     * Explicitly setting this parameter improves the performance and the
                     * quality of your search results.
                     */
                    hl?: string;
                    /**
                     * Appends the specified query terms to the query, as if they were combined
                     * with a logical AND operator.
                     */
                    hq?: string;
                    /**
                     * Restricts results to images of a specified color type. Supported values
                     * are: mono (black and white) gray (grayscale) color (color)
                     */
                    imgColorType?: string;
                    /**
                     * Restricts results to images with a specific dominant color. Supported
                     * values are: red orange yellow green teal blue purple pink white gray
                     * black
                     * brown
                     */
                    imgDominantColor?: string;
                    /**
                     * Restricts results to images of a specified size. Supported values are:
                     * icon (small)
                     * small|medium|large|xlarge (medium)
                     * xxlarge (large)
                     * huge (extra-large)
                     */
                    imgSize?: string;
                    /**
                     * Restricts results to images of a specified type. Supported values are:
                     * clipart (Clip art)
                     * face (Face)
                     * lineart (Line drawing)
                     * photo (Photo)
                     * animated (Animated)
                     * stock (Stock)
                     */
                    imgType?: string;
                    /** The character encoding supported for search requests. */
                    inputEncoding?: string;
                    /** The language of the search results. */
                    language?: string;
                    /** Specifies that all results should contain a link to a specific URL. */
                    linkSite?: string;
                    /**
                     * Specifies the starting value for a search range. Use cse:lowRange and
                     * cse:highrange to append an inclusive search range of lowRange...highRange
                     * to the query.
                     */
                    lowRange?: string;
                    /**
                     * Provides additional search terms to check for in a document, where each
                     * document in the search results must contain at least one of the
                     * additional search terms. You can also use the Boolean OR query term for
                     * this type of query.
                     */
                    orTerms?: string;
                    /** The character encoding supported for search results. */
                    outputEncoding?: string;
                    /**
                     * Specifies that all search results should be pages that are related to the
                     * specified URL. The parameter value should be a URL.
                     */
                    relatedSite?: string;
                    /**
                     * Filters based on licensing. Supported values include:
                     * cc_publicdomain
                     * cc_attribute
                     * cc_sharealike
                     * cc_noncommercial
                     * cc_nonderived
                     */
                    rights?: string;
                    /**
                     * Specifies the  SafeSearch level used for filtering out adult results.
                     * This is a custom property not defined in the OpenSearch spec. Valid
                     * parameter values are: off: Disable SafeSearch active: Enable SafeSearch
                     */
                    safe?: string;
                    /** The search terms entered by the user. */
                    searchTerms?: string;
                    /**
                     * Allowed values are web or image. If unspecified, results are limited to
                     * webpages.
                     */
                    searchType?: string;
                    /** Restricts results to URLs from a specified site. */
                    siteSearch?: string;
                    /**
                     * Specifies whether to include or exclude results from the site named in
                     * the sitesearch parameter. Supported values are: i: include content from
                     * site e: exclude content from site
                     */
                    siteSearchFilter?: string;
                    /**
                     * Specifies that results should be sorted according to the specified
                     * expression. For example, sort by date.
                     */
                    sort?: string;
                    /**
                     * The index of the current set of search results into the total set of
                     * results, where the index of the first result is 1.
                     */
                    startIndex?: number;
                    /**
                     * The page number of this set of results, where the page length is set by
                     * the count property.
                     */
                    startPage?: number;
                    /** A description of the query. */
                    title?: string;
                    /** Estimated number of total search results. May not be accurate. */
                    totalResults?: string;
                }>;
                /** Metadata representing the previous page of results, if applicable. */
                previousPage?: Array<{
                    /** Number of search results returned in this set. */
                    count?: number;
                    /**
                     * Restricts search results to documents originating in a particular
                     * country. You may use Boolean operators in the cr parameter's value.
                     */
                    cr?: string;
                    /**
                     * The identifier of a custom search engine created using the Custom Search
                     * Control Panel, if specified in request. This is a custom property not
                     * defined in the OpenSearch spec.
                     */
                    cx?: string;
                    /**
                     * Restricts results to URLs based on date. Supported values include:
                     * d[number]: requests results from the specified number of past days.
                     * w[number]: requests results from the specified number of past weeks.
                     * m[number]: requests results from the specified number of past months.
                     * y[number]: requests results from the specified number of past years.
                     */
                    dateRestrict?: string;
                    /**
                     * Enables or disables the Simplified and Traditional Chinese Search
                     * feature. Supported values are: 0: enabled (default) 1: disabled
                     */
                    disableCnTwTranslation?: string;
                    /**
                     * Identifies a phrase that all documents in the search results must
                     * contain.
                     */
                    exactTerms?: string;
                    /**
                     * Identifies a word or phrase that should not appear in any documents in
                     * the search results.
                     */
                    excludeTerms?: string;
                    /**
                     * Restricts results to files of a specified extension. Filetypes supported
                     * by Google include: Adobe Portable Document Format (pdf) Adobe PostScript
                     * (ps) Lotus 1-2-3 (wk1, wk2, wk3, wk4, wk5, wki, wks, wku) Lotus WordPro
                     * (lwp) Macwrite (mw) Microsoft Excel (xls) Microsoft PowerPoint (ppt)
                     * Microsoft Word (doc)
                     * Microsoft Works (wks, wps, wdb)
                     * Microsoft Write (wri)
                     * Rich Text Format (rtf)
                     * Shockwave Flash (swf)
                     * Text (ans, txt).
                     */
                    fileType?: string;
                    /**
                     * Activates or deactivates the automatic filtering of Google search
                     * results. The default value for the filter parameter is 1, which indicates
                     * that the feature is enabled. Valid values for this parameter are: 0:
                     * Disabled 1: Enabled
                     */
                    filter?: string;
                    /**
                     * Boosts search results whose country of origin matches the parameter
                     * value. Specifying a gl parameter value in WebSearch requests should
                     * improve the relevance of results. This is particularly true for
                     * international customers and, even more specifically, for customers in
                     * English-speaking countries other than the United States.
                     */
                    gl?: string;
                    /**
                     * Specifies the Google domain (for example, google.com, google.de, or
                     * google.fr) to which the search should be limited.
                     */
                    googleHost?: string;
                    /**
                     * Specifies the ending value for a search range. Use cse:lowRange and
                     * cse:highrange to append an inclusive search range of lowRange...highRange
                     * to the query.
                     */
                    highRange?: string;
                    /**
                     * Specifies the interface language (host language) of your user interface.
                     * Explicitly setting this parameter improves the performance and the
                     * quality of your search results.
                     */
                    hl?: string;
                    /**
                     * Appends the specified query terms to the query, as if they were combined
                     * with a logical AND operator.
                     */
                    hq?: string;
                    /**
                     * Restricts results to images of a specified color type. Supported values
                     * are: mono (black and white) gray (grayscale) color (color)
                     */
                    imgColorType?: string;
                    /**
                     * Restricts results to images with a specific dominant color. Supported
                     * values are: red orange yellow green teal blue purple pink white gray
                     * black
                     * brown
                     */
                    imgDominantColor?: string;
                    /**
                     * Restricts results to images of a specified size. Supported values are:
                     * icon (small)
                     * small|medium|large|xlarge (medium)
                     * xxlarge (large)
                     * huge (extra-large)
                     */
                    imgSize?: string;
                    /**
                     * Restricts results to images of a specified type. Supported values are:
                     * clipart (Clip art)
                     * face (Face)
                     * lineart (Line drawing)
                     * photo (Photo)
                     * animated (Animated)
                     * stock (Stock)
                     */
                    imgType?: string;
                    /** The character encoding supported for search requests. */
                    inputEncoding?: string;
                    /** The language of the search results. */
                    language?: string;
                    /** Specifies that all results should contain a link to a specific URL. */
                    linkSite?: string;
                    /**
                     * Specifies the starting value for a search range. Use cse:lowRange and
                     * cse:highrange to append an inclusive search range of lowRange...highRange
                     * to the query.
                     */
                    lowRange?: string;
                    /**
                     * Provides additional search terms to check for in a document, where each
                     * document in the search results must contain at least one of the
                     * additional search terms. You can also use the Boolean OR query term for
                     * this type of query.
                     */
                    orTerms?: string;
                    /** The character encoding supported for search results. */
                    outputEncoding?: string;
                    /**
                     * Specifies that all search results should be pages that are related to the
                     * specified URL. The parameter value should be a URL.
                     */
                    relatedSite?: string;
                    /**
                     * Filters based on licensing. Supported values include:
                     * cc_publicdomain
                     * cc_attribute
                     * cc_sharealike
                     * cc_noncommercial
                     * cc_nonderived
                     */
                    rights?: string;
                    /**
                     * Specifies the  SafeSearch level used for filtering out adult results.
                     * This is a custom property not defined in the OpenSearch spec. Valid
                     * parameter values are: off: Disable SafeSearch active: Enable SafeSearch
                     */
                    safe?: string;
                    /** The search terms entered by the user. */
                    searchTerms?: string;
                    /**
                     * Allowed values are web or image. If unspecified, results are limited to
                     * webpages.
                     */
                    searchType?: string;
                    /** Restricts results to URLs from a specified site. */
                    siteSearch?: string;
                    /**
                     * Specifies whether to include or exclude results from the site named in
                     * the sitesearch parameter. Supported values are: i: include content from
                     * site e: exclude content from site
                     */
                    siteSearchFilter?: string;
                    /**
                     * Specifies that results should be sorted according to the specified
                     * expression. For example, sort by date.
                     */
                    sort?: string;
                    /**
                     * The index of the current set of search results into the total set of
                     * results, where the index of the first result is 1.
                     */
                    startIndex?: number;
                    /**
                     * The page number of this set of results, where the page length is set by
                     * the count property.
                     */
                    startPage?: number;
                    /** A description of the query. */
                    title?: string;
                    /** Estimated number of total search results. May not be accurate. */
                    totalResults?: string;
                }>;
                /** Metadata representing the current request. */
                request?: Array<{
                    /** Number of search results returned in this set. */
                    count?: number;
                    /**
                     * Restricts search results to documents originating in a particular
                     * country. You may use Boolean operators in the cr parameter's value.
                     */
                    cr?: string;
                    /**
                     * The identifier of a custom search engine created using the Custom Search
                     * Control Panel, if specified in request. This is a custom property not
                     * defined in the OpenSearch spec.
                     */
                    cx?: string;
                    /**
                     * Restricts results to URLs based on date. Supported values include:
                     * d[number]: requests results from the specified number of past days.
                     * w[number]: requests results from the specified number of past weeks.
                     * m[number]: requests results from the specified number of past months.
                     * y[number]: requests results from the specified number of past years.
                     */
                    dateRestrict?: string;
                    /**
                     * Enables or disables the Simplified and Traditional Chinese Search
                     * feature. Supported values are: 0: enabled (default) 1: disabled
                     */
                    disableCnTwTranslation?: string;
                    /**
                     * Identifies a phrase that all documents in the search results must
                     * contain.
                     */
                    exactTerms?: string;
                    /**
                     * Identifies a word or phrase that should not appear in any documents in
                     * the search results.
                     */
                    excludeTerms?: string;
                    /**
                     * Restricts results to files of a specified extension. Filetypes supported
                     * by Google include: Adobe Portable Document Format (pdf) Adobe PostScript
                     * (ps) Lotus 1-2-3 (wk1, wk2, wk3, wk4, wk5, wki, wks, wku) Lotus WordPro
                     * (lwp) Macwrite (mw) Microsoft Excel (xls) Microsoft PowerPoint (ppt)
                     * Microsoft Word (doc)
                     * Microsoft Works (wks, wps, wdb)
                     * Microsoft Write (wri)
                     * Rich Text Format (rtf)
                     * Shockwave Flash (swf)
                     * Text (ans, txt).
                     */
                    fileType?: string;
                    /**
                     * Activates or deactivates the automatic filtering of Google search
                     * results. The default value for the filter parameter is 1, which indicates
                     * that the feature is enabled. Valid values for this parameter are: 0:
                     * Disabled 1: Enabled
                     */
                    filter?: string;
                    /**
                     * Boosts search results whose country of origin matches the parameter
                     * value. Specifying a gl parameter value in WebSearch requests should
                     * improve the relevance of results. This is particularly true for
                     * international customers and, even more specifically, for customers in
                     * English-speaking countries other than the United States.
                     */
                    gl?: string;
                    /**
                     * Specifies the Google domain (for example, google.com, google.de, or
                     * google.fr) to which the search should be limited.
                     */
                    googleHost?: string;
                    /**
                     * Specifies the ending value for a search range. Use cse:lowRange and
                     * cse:highrange to append an inclusive search range of lowRange...highRange
                     * to the query.
                     */
                    highRange?: string;
                    /**
                     * Specifies the interface language (host language) of your user interface.
                     * Explicitly setting this parameter improves the performance and the
                     * quality of your search results.
                     */
                    hl?: string;
                    /**
                     * Appends the specified query terms to the query, as if they were combined
                     * with a logical AND operator.
                     */
                    hq?: string;
                    /**
                     * Restricts results to images of a specified color type. Supported values
                     * are: mono (black and white) gray (grayscale) color (color)
                     */
                    imgColorType?: string;
                    /**
                     * Restricts results to images with a specific dominant color. Supported
                     * values are: red orange yellow green teal blue purple pink white gray
                     * black
                     * brown
                     */
                    imgDominantColor?: string;
                    /**
                     * Restricts results to images of a specified size. Supported values are:
                     * icon (small)
                     * small|medium|large|xlarge (medium)
                     * xxlarge (large)
                     * huge (extra-large)
                     */
                    imgSize?: string;
                    /**
                     * Restricts results to images of a specified type. Supported values are:
                     * clipart (Clip art)
                     * face (Face)
                     * lineart (Line drawing)
                     * photo (Photo)
                     * animated (Animated)
                     * stock (Stock)
                     */
                    imgType?: string;
                    /** The character encoding supported for search requests. */
                    inputEncoding?: string;
                    /** The language of the search results. */
                    language?: string;
                    /** Specifies that all results should contain a link to a specific URL. */
                    linkSite?: string;
                    /**
                     * Specifies the starting value for a search range. Use cse:lowRange and
                     * cse:highrange to append an inclusive search range of lowRange...highRange
                     * to the query.
                     */
                    lowRange?: string;
                    /**
                     * Provides additional search terms to check for in a document, where each
                     * document in the search results must contain at least one of the
                     * additional search terms. You can also use the Boolean OR query term for
                     * this type of query.
                     */
                    orTerms?: string;
                    /** The character encoding supported for search results. */
                    outputEncoding?: string;
                    /**
                     * Specifies that all search results should be pages that are related to the
                     * specified URL. The parameter value should be a URL.
                     */
                    relatedSite?: string;
                    /**
                     * Filters based on licensing. Supported values include:
                     * cc_publicdomain
                     * cc_attribute
                     * cc_sharealike
                     * cc_noncommercial
                     * cc_nonderived
                     */
                    rights?: string;
                    /**
                     * Specifies the  SafeSearch level used for filtering out adult results.
                     * This is a custom property not defined in the OpenSearch spec. Valid
                     * parameter values are: off: Disable SafeSearch active: Enable SafeSearch
                     */
                    safe?: string;
                    /** The search terms entered by the user. */
                    searchTerms?: string;
                    /**
                     * Allowed values are web or image. If unspecified, results are limited to
                     * webpages.
                     */
                    searchType?: string;
                    /** Restricts results to URLs from a specified site. */
                    siteSearch?: string;
                    /**
                     * Specifies whether to include or exclude results from the site named in
                     * the sitesearch parameter. Supported values are: i: include content from
                     * site e: exclude content from site
                     */
                    siteSearchFilter?: string;
                    /**
                     * Specifies that results should be sorted according to the specified
                     * expression. For example, sort by date.
                     */
                    sort?: string;
                    /**
                     * The index of the current set of search results into the total set of
                     * results, where the index of the first result is 1.
                     */
                    startIndex?: number;
                    /**
                     * The page number of this set of results, where the page length is set by
                     * the count property.
                     */
                    startPage?: number;
                    /** A description of the query. */
                    title?: string;
                    /** Estimated number of total search results. May not be accurate. */
                    totalResults?: string;
                }>;
            };
            /** Metadata about a search operation. */
            searchInformation?: {
                /**
                 * The time taken for the server to return search results, formatted
                 * according to locale style.
                 */
                formattedSearchTime?: string;
                /** The total number of search results, formatted according to locale style. */
                formattedTotalResults?: string;
                /** The time taken for the server to return search results. */
                searchTime?: number;
                /** The total number of search results returned by the query. */
                totalResults?: string;
            };
            /** Spell correction information for a query. */
            spelling?: {
                /** The corrected query. */
                correctedQuery?: string;
                /** The corrected query, formatted in HTML. */
                htmlCorrectedQuery?: string;
            };
            /** OpenSearch template and URL. */
            url?: {
                /** The actual OpenSearch template for this API. */
                template?: string;
                /** The MIME type of the OpenSearch URL template for the Custom Search API. */
                type?: string;
            };
        }
        interface CseResource {
            /**
             * Returns metadata about the search performed, metadata about the custom
             * search engine used for the search, and the search results.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Turns off the translation between zh-CN and zh-TW. */
                c2coff?: string;
                /** JSONP */
                callback?: string;
                /** Country restrict(s). */
                cr?: string;
                /** The custom search engine ID to scope this search query */
                cx?: string;
                /** Specifies all search results are from a time period */
                dateRestrict?: string;
                /** Identifies a phrase that all documents in the search results must contain */
                exactTerms?: string;
                /**
                 * Identifies a word or phrase that should not appear in any documents in the
                 * search results
                 */
                excludeTerms?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Returns images of a specified type. Some of the allowed values are: bmp,
                 * gif, png, jpg, svg, pdf, ...
                 */
                fileType?: string;
                /** Controls turning on (1) or off (0) the duplicate content filter. */
                filter?: string;
                /** Geolocation of end user. */
                gl?: string;
                /** The local Google domain to use to perform the search. */
                googlehost?: string;
                /**
                 * Creates a range in form as_nlo value..as_nhi value and attempts to append
                 * it to query
                 */
                highRange?: string;
                /** Sets the user interface language. */
                hl?: string;
                /** Appends the extra hidden query terms to the query. */
                hq?: string;
                /**
                 * Returns black and white, grayscale, transparent-background or color images:
                 * mono, gray, trans, and color.
                 */
                imgColorType?: string;
                /**
                 * Returns images of a specific dominant color: red, orange, yellow, green,
                 * teal, blue, purple, pink, white, gray, black and brown.
                 */
                imgDominantColor?: string;
                /**
                 * Returns images of a specified size, where size can be one of: icon, small,
                 * medium, large, xlarge, xxlarge, and huge.
                 */
                imgSize?: string;
                /**
                 * Returns images of a type, which can be one of: clipart, face, lineart,
                 * stock, photo, and animated.
                 */
                imgType?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Specifies that all search results should contain a link to a particular URL */
                linkSite?: string;
                /**
                 * Creates a range in form as_nlo value..as_nhi value and attempts to append
                 * it to query
                 */
                lowRange?: string;
                /** The language restriction for the search results */
                lr?: string;
                /** Number of search results to return */
                num?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Provides additional search terms to check for in a document, where each
                 * document in the search results must contain at least one of the additional
                 * search terms
                 */
                orTerms?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Query */
                q?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Specifies that all search results should be pages that are related to the
                 * specified URL
                 */
                relatedSite?: string;
                /**
                 * Filters based on licensing. Supported values include: cc_publicdomain,
                 * cc_attribute, cc_sharealike, cc_noncommercial, cc_nonderived and
                 * combinations of these.
                 * See https://wiki.creativecommons.org/wiki/CC_Search_integration for
                 * typical combinations.
                 */
                rights?: string;
                /** Search safety level (active, off) (high, medium are same as active) */
                safe?: string;
                /** Specifies the search type: image. */
                searchType?: string;
                /** Specifies all search results should be pages from a given site */
                siteSearch?: string;
                /**
                 * Controls whether to include (i) or exclude (e) results from the site named
                 * in the siteSearch parameter
                 */
                siteSearchFilter?: string;
                /** The sort expression to apply to the results */
                sort?: string;
                /** The index of the first result to return */
                start?: number;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Search>;
        }
        interface SiterestrictResource {
            /**
             * Returns metadata about the search performed, metadata about the custom
             * search engine used for the search, and the search results. Uses a small set
             * of url patterns.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** Turns off the translation between zh-CN and zh-TW. */
                c2coff?: string;
                /** JSONP */
                callback?: string;
                /** Country restrict(s). */
                cr?: string;
                /** The custom search engine ID to scope this search query */
                cx?: string;
                /** Specifies all search results are from a time period */
                dateRestrict?: string;
                /** Identifies a phrase that all documents in the search results must contain */
                exactTerms?: string;
                /**
                 * Identifies a word or phrase that should not appear in any documents in the
                 * search results
                 */
                excludeTerms?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Returns images of a specified type. Some of the allowed values are: bmp,
                 * gif, png, jpg, svg, pdf, ...
                 */
                fileType?: string;
                /** Controls turning on (1) or off (0) the duplicate content filter. */
                filter?: string;
                /** Geolocation of end user. */
                gl?: string;
                /** The local Google domain to use to perform the search. */
                googlehost?: string;
                /**
                 * Creates a range in form as_nlo value..as_nhi value and attempts to append
                 * it to query
                 */
                highRange?: string;
                /** Sets the user interface language. */
                hl?: string;
                /** Appends the extra hidden query terms to the query. */
                hq?: string;
                /**
                 * Returns black and white, grayscale, transparent-background or color images:
                 * mono, gray, trans, and color.
                 */
                imgColorType?: string;
                /**
                 * Returns images of a specific dominant color: red, orange, yellow, green,
                 * teal, blue, purple, pink, white, gray, black and brown.
                 */
                imgDominantColor?: string;
                /**
                 * Returns images of a specified size, where size can be one of: icon, small,
                 * medium, large, xlarge, xxlarge, and huge.
                 */
                imgSize?: string;
                /**
                 * Returns images of a type, which can be one of: clipart, face, lineart,
                 * stock, photo, and animated.
                 */
                imgType?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Specifies that all search results should contain a link to a particular URL */
                linkSite?: string;
                /**
                 * Creates a range in form as_nlo value..as_nhi value and attempts to append
                 * it to query
                 */
                lowRange?: string;
                /** The language restriction for the search results */
                lr?: string;
                /** Number of search results to return */
                num?: number;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Provides additional search terms to check for in a document, where each
                 * document in the search results must contain at least one of the additional
                 * search terms
                 */
                orTerms?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Query */
                q?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Specifies that all search results should be pages that are related to the
                 * specified URL
                 */
                relatedSite?: string;
                /**
                 * Filters based on licensing. Supported values include: cc_publicdomain,
                 * cc_attribute, cc_sharealike, cc_noncommercial, cc_nonderived and
                 * combinations of these.
                 * See https://wiki.creativecommons.org/wiki/CC_Search_integration for
                 * typical combinations.
                 */
                rights?: string;
                /** Search safety level (active, off) (high, medium are same as active) */
                safe?: string;
                /** Specifies the search type: image. */
                searchType?: string;
                /** Specifies all search results should be pages from a given site */
                siteSearch?: string;
                /**
                 * Controls whether to include (i) or exclude (e) results from the site named
                 * in the siteSearch parameter
                 */
                siteSearchFilter?: string;
                /** The sort expression to apply to the results */
                sort?: string;
                /** The index of the first result to return */
                start?: number;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Search>;
        }

        const cse: CseResource;

        const siterestrict: SiterestrictResource;
    }
}
