// Type definitions for non-npm package Cloud Private Catalog API v1beta1 1.0
// Project: https://cloud.google.com/private-catalog/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://cloudprivatecatalog.googleapis.com/$discovery/rest?version=v1beta1

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Private Catalog API v1beta1 */
    function load(name: "cloudprivatecatalog", version: "v1beta1"): PromiseLike<void>;
    function load(name: "cloudprivatecatalog", version: "v1beta1", callback: () => any): void;

    namespace cloudprivatecatalog {
        interface GoogleCloudPrivatecatalogV1beta1Catalog {
            /** Output only. The time when the catalog was created. */
            createTime?: string;
            /** Output only. The description of the catalog. */
            description?: string;
            /** Output only. The descriptive name of the catalog as it appears in UIs. */
            displayName?: string;
            /**
             * Output only. The resource name of the target catalog, in the format of
             * `catalogs/{catalog_id}'.
             */
            name?: string;
            /** Output only. The time when the catalog was last updated. */
            updateTime?: string;
        }
        interface GoogleCloudPrivatecatalogV1beta1Product {
            /**
             * Output only. The type of the product asset. It can be one of the
             * following values:
             *
             * &#42; `google.deploymentmanager.Template`
             * &#42; `google.cloudprivatecatalog.ListingOnly`
             */
            assetType?: string;
            /** Output only. The time when the product was created. */
            createTime?: string;
            /**
             * Output only. The display metadata to describe the product.
             * The JSON schema of the metadata differs by Product.asset_type.
             * When the type is `google.deploymentmanager.Template`, the schema is as
             * follows:
             *
             * ```
             * "$schema": http://json-schema.org/draft-04/schema#
             * type: object
             * properties:
             * name:
             * type: string
             * minLength: 1
             * maxLength: 64
             * description:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * tagline:
             * type: string
             * minLength: 1
             * maxLength: 100
             * support_info:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * creator:
             * type: string
             * minLength: 1
             * maxLength: 100
             * documentation:
             * type: array
             * items:
             * type: object
             * properties:
             * url:
             * type: string
             * pattern:
             * "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]&#42;[-a-zA-Z0-9+&@#/%=~_|]"
             * title:
             * type: string
             * minLength: 1
             * maxLength: 64
             * description:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * required:
             * - name
             * - description
             * additionalProperties: false
             *
             * ```
             *
             * When the asset type is `google.cloudprivatecatalog.ListingOnly`, the schema
             * is as follows:
             *
             * ```
             * "$schema": http://json-schema.org/draft-04/schema#
             * type: object
             * properties:
             * name:
             * type: string
             * minLength: 1
             * maxLength: 64
             * description:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * tagline:
             * type: string
             * minLength: 1
             * maxLength: 100
             * support_info:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * creator:
             * type: string
             * minLength: 1
             * maxLength: 100
             * documentation:
             * type: array
             * items:
             * type: object
             * properties:
             * url:
             * type: string
             * pattern:
             * "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]&#42;[-a-zA-Z0-9+&@#/%=~_|]"
             * title:
             * type: string
             * minLength: 1
             * maxLength: 64
             * description:
             * type: string
             * minLength: 1
             * maxLength: 2048
             * signup_url:
             * type: string
             * pattern:
             * "^(https?)://[-a-zA-Z0-9+&@#/%?=~_|!:,.;]&#42;[-a-zA-Z0-9+&@#/%=~_|]"
             * required:
             * - name
             * - description
             * - signup_url
             * additionalProperties: false
             * ```
             */
            displayMetadata?: Record<string, any>;
            /** Output only. The icon URI of the product. */
            iconUri?: string;
            /**
             * Output only. The resource name of the target product, in the format of
             * `products/a-z&#42;[a-z0-9]'.
             *
             * A unique identifier for the product under a catalog.
             */
            name?: string;
            /** Output only. The time when the product was last updated. */
            updateTime?: string;
        }
        interface GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse {
            /** The `Catalog`s computed from the resource context. */
            catalogs?: GoogleCloudPrivatecatalogV1beta1Catalog[];
            /**
             * A pagination token returned from a previous call to SearchCatalogs that
             * indicates from where listing should continue.
             * This field is optional.
             */
            nextPageToken?: string;
        }
        interface GoogleCloudPrivatecatalogV1beta1SearchProductsResponse {
            /**
             * A pagination token returned from a previous call to SearchProducts that
             * indicates from where listing should continue.
             * This field is optional.
             */
            nextPageToken?: string;
            /** The `Product` resources computed from the resource context. */
            products?: GoogleCloudPrivatecatalogV1beta1Product[];
        }
        interface GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse {
            /**
             * A pagination token returned from a previous call to SearchVersions that
             * indicates from where the listing should continue.
             * This field is optional.
             */
            nextPageToken?: string;
            /** The `Version` resources computed from the resource context. */
            versions?: GoogleCloudPrivatecatalogV1beta1Version[];
        }
        interface GoogleCloudPrivatecatalogV1beta1Version {
            /**
             * Output only. The asset which has been validated and is ready to be
             * provisioned. See
             * google.cloud.privatecatalogproducer.v1beta.Version.asset for details.
             */
            asset?: Record<string, any>;
            /** Output only. The time when the version was created. */
            createTime?: string;
            /**
             * Output only. The user-supplied description of the version. Maximum of 256
             * characters.
             */
            description?: string;
            /**
             * Output only. The resource name of the version, in the format
             * `catalogs/{catalog_id}/products/{product_id}/versions/a-z&#42;[a-z0-9]'.
             *
             * A unique identifier for the version under a product.
             */
            name?: string;
            /** Output only. The time when the version was last updated. */
            updateTime?: string;
        }
        interface CatalogsResource {
            /**
             * Search Catalog resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchCatalogs that
                 * indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the catalogs. The supported queries are:
                 *
                 * &#42; Get a single catalog: `name=catalogs/{catalog_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. It can be in following formats:
                 *
                 * &#42; `projects/{project_id}`
                 * &#42; `folders/{folder_id}`
                 * &#42; `organizations/{organization_id}`
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse>;
        }
        interface ProductsResource {
            /**
             * Search Product resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchProducts that
                 * indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the products.
                 *
                 * The supported queries are:
                 * &#42; List products of all catalogs: empty
                 * &#42; List products under a catalog: `parent=catalogs/{catalog_id}`
                 * &#42; Get a product by name:
                 * `name=catalogs/{catalog_id}/products/{product_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. See
                 * SearchCatalogsRequest.resource for details.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchProductsResponse>;
        }
        interface VersionsResource {
            /**
             * Search Version resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchVersions
                 * that indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the versions. Required.
                 *
                 * The supported queries are:
                 * &#42; List versions under a product:
                 * `parent=catalogs/{catalog_id}/products/{product_id}`
                 * &#42; Get a version by name:
                 * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. See
                 * SearchCatalogsRequest.resource for details.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse>;
        }
        interface FoldersResource {
            catalogs: CatalogsResource;
            products: ProductsResource;
            versions: VersionsResource;
        }
        interface CatalogsResource {
            /**
             * Search Catalog resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchCatalogs that
                 * indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the catalogs. The supported queries are:
                 *
                 * &#42; Get a single catalog: `name=catalogs/{catalog_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. It can be in following formats:
                 *
                 * &#42; `projects/{project_id}`
                 * &#42; `folders/{folder_id}`
                 * &#42; `organizations/{organization_id}`
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse>;
        }
        interface ProductsResource {
            /**
             * Search Product resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchProducts that
                 * indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the products.
                 *
                 * The supported queries are:
                 * &#42; List products of all catalogs: empty
                 * &#42; List products under a catalog: `parent=catalogs/{catalog_id}`
                 * &#42; Get a product by name:
                 * `name=catalogs/{catalog_id}/products/{product_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. See
                 * SearchCatalogsRequest.resource for details.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchProductsResponse>;
        }
        interface VersionsResource {
            /**
             * Search Version resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchVersions
                 * that indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the versions. Required.
                 *
                 * The supported queries are:
                 * &#42; List versions under a product:
                 * `parent=catalogs/{catalog_id}/products/{product_id}`
                 * &#42; Get a version by name:
                 * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. See
                 * SearchCatalogsRequest.resource for details.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse>;
        }
        interface OrganizationsResource {
            catalogs: CatalogsResource;
            products: ProductsResource;
            versions: VersionsResource;
        }
        interface CatalogsResource {
            /**
             * Search Catalog resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchCatalogs that
                 * indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the catalogs. The supported queries are:
                 *
                 * &#42; Get a single catalog: `name=catalogs/{catalog_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. It can be in following formats:
                 *
                 * &#42; `projects/{project_id}`
                 * &#42; `folders/{folder_id}`
                 * &#42; `organizations/{organization_id}`
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchCatalogsResponse>;
        }
        interface ProductsResource {
            /**
             * Search Product resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchProducts that
                 * indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the products.
                 *
                 * The supported queries are:
                 * &#42; List products of all catalogs: empty
                 * &#42; List products under a catalog: `parent=catalogs/{catalog_id}`
                 * &#42; Get a product by name:
                 * `name=catalogs/{catalog_id}/products/{product_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. See
                 * SearchCatalogsRequest.resource for details.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchProductsResponse>;
        }
        interface VersionsResource {
            /**
             * Search Version resources that consumers have access to, within the
             * scope of the consumer cloud resource hierarchy context.
             */
            search(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The maximum number of entries that are requested. */
                pageSize?: number;
                /**
                 * A pagination token returned from a previous call to SearchVersions
                 * that indicates where this listing should continue from.
                 * This field is optional.
                 */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /**
                 * The query to filter the versions. Required.
                 *
                 * The supported queries are:
                 * &#42; List versions under a product:
                 * `parent=catalogs/{catalog_id}/products/{product_id}`
                 * &#42; Get a version by name:
                 * `name=catalogs/{catalog_id}/products/{product_id}/versions/{version_id}`
                 */
                query?: string;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Required. The name of the resource context. See
                 * SearchCatalogsRequest.resource for details.
                 */
                resource: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
            }): Request<GoogleCloudPrivatecatalogV1beta1SearchVersionsResponse>;
        }
        interface ProjectsResource {
            catalogs: CatalogsResource;
            products: ProductsResource;
            versions: VersionsResource;
        }

        const folders: FoldersResource;

        const organizations: OrganizationsResource;

        const projects: ProjectsResource;
    }
}
