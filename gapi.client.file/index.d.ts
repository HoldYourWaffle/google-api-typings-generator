// Type definitions for non-npm package Cloud Filestore API v1 1.0
// Project: https://cloud.google.com/filestore/
// Definitions by: Maxim Mazurok <https://github.com/Maxim-Mazurok>
// Definitions: https://github.com/DefinitelyTyped/DefinitelyTyped
// TypeScript Version: 2.8

// IMPORTANT
// This file was generated by https://github.com/Maxim-Mazurok/google-api-typings-generator. Please do not edit it manually.
// In case of any problems please post issue to https://github.com/Maxim-Mazurok/google-api-typings-generator
// Generated from: https://file.googleapis.com/$discovery/rest?version=v1
// Revision: 20200520

/// <reference types="gapi.client" />

declare namespace gapi.client {
    /** Load Cloud Filestore API v1 */
    function load(name: "file", version: "v1"): PromiseLike<void>;
    function load(name: "file", version: "v1", callback: () => any): void;

    namespace file {
        interface Attributes {
            /**
             * The set of attributes. Each attribute's key can be up to 128 bytes
             * long. The value can be a string up to 256 bytes, a signed 64-bit integer,
             * or the Boolean values `true` and `false`. For example:
             *
             * "/instance_id": "my-instance"
             * "/http/user_agent": ""
             * "/http/request_bytes": 300
             * "abc.com/myattribute": true
             */
            attributeMap?: { [P in string]: AttributeValue };
            /**
             * The number of attributes that were discarded. Attributes can be discarded
             * because their keys are too long or because there are too many attributes.
             * If this value is 0 then all attributes are valid.
             */
            droppedAttributesCount?: number;
        }
        interface AttributeValue {
            /** A Boolean value represented by `true` or `false`. */
            boolValue?: boolean;
            /** A 64-bit signed integer. */
            intValue?: string;
            /** A string up to 256 bytes long. */
            stringValue?: TruncatableString;
        }
        interface BillingView {
            /**
             * Billing requests to be reported for an [Eventstream
             * resource](http://google3/cloud/eventstream/v2/resource_event.proto).
             *
             * Each request contains billing operations to be reported under a service
             * name. See go/billing-view-construction for documentation on constructing
             * billing view report requests.
             */
            reportRequests?: ReportRequest[];
        }
        // tslint:disable-next-line:no-empty-interface
        interface CancelOperationRequest {
        }
        interface Distribution {
            /**
             * The number of samples in each histogram bucket. `bucket_counts` are
             * optional. If present, they must sum to the `count` value.
             *
             * The buckets are defined below in `bucket_option`. There are N buckets.
             * `bucket_counts[0]` is the number of samples in the underflow bucket.
             * `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples
             * in each of the finite buckets. And `bucket_counts[N] is the number
             * of samples in the overflow bucket. See the comments of `bucket_option`
             * below for more details.
             *
             * Any suffix of trailing zeros may be omitted.
             */
            bucketCounts?: string[];
            /** The total number of samples in the distribution. Must be >= 0. */
            count?: string;
            /** Example points. Must be in increasing order of `value` field. */
            exemplars?: Exemplar[];
            /** Buckets with arbitrary user-provided width. */
            explicitBuckets?: ExplicitBuckets;
            /** Buckets with exponentially growing width. */
            exponentialBuckets?: ExponentialBuckets;
            /** Buckets with constant width. */
            linearBuckets?: LinearBuckets;
            /** The maximum of the population of values. Ignored if `count` is zero. */
            maximum?: number;
            /**
             * The arithmetic mean of the samples in the distribution. If `count` is
             * zero then this field must be zero.
             */
            mean?: number;
            /** The minimum of the population of values. Ignored if `count` is zero. */
            minimum?: number;
            /**
             * The sum of squared deviations from the mean:
             * Sum[i=1..count]((x_i - mean)^2)
             * where each x_i is a sample values. If `count` is zero then this field
             * must be zero, otherwise validation of the request fails.
             */
            sumOfSquaredDeviation?: number;
        }
        // tslint:disable-next-line:no-empty-interface
        interface Empty {
        }
        interface Exemplar {
            /**
             * Contextual information about the example value. Examples are:
             *
             * Trace: type.googleapis.com/google.monitoring.v3.SpanContext
             *
             * Literal string: type.googleapis.com/google.protobuf.StringValue
             *
             * Labels dropped during aggregation:
             * type.googleapis.com/google.monitoring.v3.DroppedLabels
             *
             * There may be only a single attachment of any given message type in a
             * single exemplar, and this is enforced by the system.
             */
            attachments?: Array<{ [P in string]: any }>;
            /** The observation (sampling) time of the above value. */
            timestamp?: string;
            /**
             * Value of the exemplar point. This value determines to which bucket the
             * exemplar belongs.
             */
            value?: number;
        }
        interface ExplicitBuckets {
            /**
             * 'bound' is a list of strictly increasing boundaries between
             * buckets. Note that a list of length N-1 defines N buckets because
             * of fenceposting. See comments on `bucket_options` for details.
             *
             * The i'th finite bucket covers the interval
             * [bound[i-1], bound[i])
             * where i ranges from 1 to bound_size() - 1. Note that there are no
             * finite buckets at all if 'bound' only contains a single element; in
             * that special case the single bound defines the boundary between the
             * underflow and overflow buckets.
             *
             * bucket number                   lower bound    upper bound
             * i == 0 (underflow)              -inf           bound[i]
             * 0 < i < bound_size()            bound[i-1]     bound[i]
             * i == bound_size() (overflow)    bound[i-1]     +inf
             */
            bounds?: number[];
        }
        interface ExponentialBuckets {
            /**
             * The i'th exponential bucket covers the interval
             * [scale &#42; growth_factor^(i-1), scale &#42; growth_factor^i)
             * where i ranges from 1 to num_finite_buckets inclusive.
             * Must be larger than 1.0.
             */
            growthFactor?: number;
            /**
             * The number of finite buckets. With the underflow and overflow buckets,
             * the total number of buckets is `num_finite_buckets` + 2.
             * See comments on `bucket_options` for details.
             */
            numFiniteBuckets?: number;
            /**
             * The i'th exponential bucket covers the interval
             * [scale &#42; growth_factor^(i-1), scale &#42; growth_factor^i)
             * where i ranges from 1 to num_finite_buckets inclusive.
             * Must be > 0.
             */
            scale?: number;
        }
        interface FileShareConfig {
            /**
             * File share capacity in gigabytes (GB).
             * Cloud Filestore defines 1 GB as 1024^3 bytes.
             */
            capacityGb?: string;
            /** The name of the file share (must be 16 characters or less). */
            name?: string;
        }
        interface GoogleApiServicecontrolV1Operation {
            /**
             * Identity of the consumer who is using the service.
             * This field should be filled in for the operations initiated by a
             * consumer, but not for service-initiated operations that are
             * not related to a specific consumer.
             *
             * - This can be in one of the following formats:
             * - project:PROJECT_ID,
             * - project`_`number:PROJECT_NUMBER,
             * - projects/PROJECT_ID or PROJECT_NUMBER,
             * - folders/FOLDER_NUMBER,
             * - organizations/ORGANIZATION_NUMBER,
             * - api`_`key:API_KEY.
             */
            consumerId?: string;
            /**
             * End time of the operation.
             * Required when the operation is used in ServiceController.Report,
             * but optional when the operation is used in ServiceController.Check.
             */
            endTime?: string;
            /** DO NOT USE. This is an experimental field. */
            importance?: string;
            /**
             * Labels describing the operation. Only the following labels are allowed:
             *
             * - Labels describing monitored resources as defined in
             * the service configuration.
             * - Default labels of metric values. When specified, labels defined in the
             * metric value override these default.
             * - The following labels defined by Google Cloud Platform:
             * - `cloud.googleapis.com/location` describing the location where the
             * operation happened,
             * - `servicecontrol.googleapis.com/user_agent` describing the user agent
             * of the API request,
             * - `servicecontrol.googleapis.com/service_agent` describing the service
             * used to handle the API request (e.g. ESP),
             * - `servicecontrol.googleapis.com/platform` describing the platform
             * where the API is served, such as App Engine, Compute Engine, or
             * Kubernetes Engine.
             */
            labels?: { [P in string]: string };
            /** Represents information to be logged. */
            logEntries?: LogEntry[];
            /**
             * Represents information about this operation. Each MetricValueSet
             * corresponds to a metric defined in the service configuration.
             * The data type used in the MetricValueSet must agree with
             * the data type specified in the metric definition.
             *
             * Within a single operation, it is not allowed to have more than one
             * MetricValue instances that have the same metric names and identical
             * label value combinations. If a request has such duplicated MetricValue
             * instances, the entire request is rejected with
             * an invalid argument error.
             */
            metricValueSets?: MetricValueSet[];
            /**
             * Identity of the operation. This must be unique within the scope of the
             * service that generated the operation. If the service calls
             * Check() and Report() on the same operation, the two calls should carry
             * the same id.
             *
             * UUID version 4 is recommended, though not required.
             * In scenarios where an operation is computed from existing information
             * and an idempotent id is desirable for deduplication purpose, UUID version 5
             * is recommended. See RFC 4122 for details.
             */
            operationId?: string;
            /** Fully qualified name of the operation. Reserved for future use. */
            operationName?: string;
            /**
             * Represents the properties needed for quota check. Applicable only if this
             * operation is for a quota check request. If this is not specified, no quota
             * check will be performed.
             */
            quotaProperties?: QuotaProperties;
            /**
             * The resources that are involved in the operation.
             * The maximum supported number of entries in this field is 100.
             */
            resources?: ResourceInfo[];
            /** Required. Start time of the operation. */
            startTime?: string;
            /**
             * Unimplemented. A list of Cloud Trace spans. The span names shall contain
             * the id of the destination project which can be either the produce or the
             * consumer project.
             */
            traceSpans?: TraceSpan[];
            /**
             * User defined labels for the resource that this operation is associated
             * with. Only a combination of 1000 user labels per consumer project are
             * allowed.
             */
            userLabels?: { [P in string]: string };
        }
        interface GoogleCloudSaasacceleratorManagementProvidersV1Instance {
            /**
             * consumer_defined_name is the name that is set by the consumer. On the other
             * hand Name field represents system-assigned id of an instance so consumers
             * are not necessarily aware of it.
             * consumer_defined_name is used for notification/UI purposes for consumer to
             * recognize their instances.
             */
            consumerDefinedName?: string;
            /** Output only. Timestamp when the resource was created. */
            createTime?: string;
            /**
             * Optional. Resource labels to represent user provided metadata. Each label
             * is a key-value pair, where both the key and the value are arbitrary strings
             * provided by the user.
             */
            labels?: { [P in string]: string };
            /**
             * The MaintenancePolicies that have been attached to the instance.
             * The key must be of the type name of the oneof policy name defined in
             * MaintenancePolicy, and the referenced policy must define the same policy
             * type. For complete details of MaintenancePolicy, please refer to
             * go/cloud-saas-mw-ug.
             */
            maintenancePolicyNames?: { [P in string]: string };
            /**
             * The MaintenanceSchedule contains the scheduling information of published
             * maintenance schedule.
             */
            maintenanceSchedules?: { [P in string]: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule };
            /** Optional. The MaintenanceSettings associated with instance. */
            maintenanceSettings?: GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings;
            /**
             * Unique name of the resource. It uses the form:
             * `projects/{project_id}/locations/{location_id}/instances/{instance_id}`
             */
            name?: string;
            /**
             * Output only. Custom string attributes used primarily to expose
             * producer-specific information in monitoring dashboards.
             * See go/get-instance-metadata.
             */
            producerMetadata?: { [P in string]: string };
            /**
             * Output only. The list of data plane resources provisioned for this
             * instance, e.g. compute VMs. See go/get-instance-metadata.
             */
            provisionedResources?: GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource[];
            /**
             * Link to the SLM instance template. Only populated when updating SLM
             * instances via SSA's Actuation service adaptor.
             * Service producers with custom control plane (e.g. Cloud SQL) doesn't
             * need to populate this field. Instead they should use software_versions.
             */
            slmInstanceTemplate?: string;
            /**
             * Output only. SLO metadata for instance classification in the
             * Standardized dataplane SLO platform.
             * See go/cloud-ssa-standard-slo for feature description.
             */
            sloMetadata?: GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata;
            /**
             * Software versions that are used to deploy this instance. This can be
             * mutated by rollout services.
             */
            softwareVersions?: { [P in string]: string };
            /**
             * Output only. Current lifecycle state of the resource (e.g. if it's being
             * created or ready to use).
             */
            state?: string;
            /**
             * Output only. ID of the associated GCP tenant project.
             * See go/get-instance-metadata.
             */
            tenantProjectId?: string;
            /** Output only. Timestamp when the resource was last modified. */
            updateTime?: string;
        }
        interface GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule {
            /**
             * Can this scheduled update be rescheduled?
             * By default, it's true and API needs to do explicitly check whether it's
             * set, if it's set as false explicitly, it's false
             */
            canReschedule?: boolean;
            /** The scheduled end time for the maintenance. */
            endTime?: string;
            /**
             * The rollout management policy this maintenance schedule is associated
             * with. When doing reschedule update request, the reschedule should be
             * against this given policy.
             */
            rolloutManagementPolicy?: string;
            /** The scheduled start time for the maintenance. */
            startTime?: string;
        }
        interface GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings {
            /**
             * Optional. Exclude instance from maintenance. When true, rollout service will not
             * attempt maintenance on the instance. Rollout service will include the
             * instance in reported rollout progress as not attempted.
             */
            exclude?: boolean;
        }
        interface GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata {
            /**
             * By default node is eligible if instance is eligible.
             * But individual node might be excluded from SLO by adding entry here.
             * For semantic see SloMetadata.exclusions.
             * If both instance and node level exclusions are present for time period,
             * the node level's reason will be reported by Eligibility Exporter.
             */
            exclusions?: GoogleCloudSaasacceleratorManagementProvidersV1SloExclusion[];
            /** The location of the node, if different from instance location. */
            location?: string;
            /**
             * The id of the node.
             * This should be equal to SaasInstanceNode.node_id.
             */
            nodeId?: string;
        }
        interface GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource {
            /**
             * Type of the resource. This can be either a GCP resource or a custom one
             * (e.g. another cloud provider's VM). For GCP compute resources use singular
             * form of the names listed in GCP compute API documentation
             * (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with
             * 'compute-', for example: 'compute-instance', 'compute-disk',
             * 'compute-autoscaler'.
             */
            resourceType?: string;
            /**
             * URL identifying the resource, e.g.
             * "https://www.googleapis.com/compute/v1/projects/...)".
             */
            resourceUrl?: string;
        }
        interface GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility {
            /** Whether an instance is eligible or ineligible. */
            eligible?: boolean;
            /**
             * User-defined reason for the current value of instance eligibility. Usually,
             * this can be directly mapped to the internal state. An empty reason is
             * allowed.
             */
            reason?: string;
        }
        interface GoogleCloudSaasacceleratorManagementProvidersV1SloExclusion {
            /**
             * Exclusion duration. No restrictions on the possible values.
             *
             * When an ongoing operation is taking longer than initially expected,
             * an existing entry in the exclusion list can be updated by extending the
             * duration. This is supported by the subsystem exporting eligibility data
             * as long as such extension is committed at least 10 minutes before the
             * original exclusion expiration - otherwise it is possible that there will
             * be "gaps" in the exclusion application in the exported timeseries.
             */
            duration?: string;
            /**
             * Human-readable reason for the exclusion.
             * This should be a static string (e.g. "Disruptive update in progress")
             * and should not contain dynamically generated data (e.g. instance name).
             * Can be left empty.
             */
            reason?: string;
            /**
             * Name of an SLI that this exclusion applies to. Can be left empty,
             * signaling that the instance should be excluded from all SLIs defined
             * in the service SLO configuration.
             */
            sliName?: string;
            /** Start time of the exclusion. No alignment (e.g. to a full minute) needed. */
            startTime?: string;
        }
        interface GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata {
            /** Optional. User-defined instance eligibility. */
            eligibility?: GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility;
            /**
             * List of SLO exclusion windows. When multiple entries in the list match
             * (matching the exclusion time-window against current time point)
             * the exclusion reason used in the first matching entry will be published.
             *
             * It is not needed to include expired exclusion in this list, as only the
             * currently applicable exclusions are taken into account by the eligibility
             * exporting subsystem (the historical state of exclusions will be reflected
             * in the historically produced timeseries regardless of the current state).
             *
             * This field can be used to mark the instance as temporary ineligible
             * for the purpose of SLO calculation. For permanent instance SLO exclusion,
             * use of custom instance eligibility is recommended. See 'eligibility' field
             * below.
             */
            exclusions?: GoogleCloudSaasacceleratorManagementProvidersV1SloExclusion[];
            /**
             * Optional. List of nodes.
             * Some producers need to use per-node metadata to calculate SLO.
             * This field allows such producers to publish per-node SLO meta data,
             * which will be consumed by SSA Eligibility Exporter and published in the
             * form of per node metric to Monarch.
             */
            nodes?: GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata[];
            /**
             * Name of the SLO tier the Instance belongs to. This name will be expected to
             * match the tiers specified in the service SLO configuration.
             *
             * Field is mandatory and must not be empty.
             */
            tier?: string;
        }
        interface HttpRequest {
            /**
             * The number of HTTP response bytes inserted into cache. Set only when a
             * cache fill was attempted.
             */
            cacheFillBytes?: string;
            /**
             * Whether or not an entity was served from cache
             * (with or without validation).
             */
            cacheHit?: boolean;
            /** Whether or not a cache lookup was attempted. */
            cacheLookup?: boolean;
            /**
             * Whether or not the response was validated with the origin server before
             * being served from cache. This field is only meaningful if `cache_hit` is
             * True.
             */
            cacheValidatedWithOriginServer?: boolean;
            /**
             * The request processing latency on the server, from the time the request was
             * received until the response was sent.
             */
            latency?: string;
            /** Protocol used for the request. Examples: "HTTP/1.1", "HTTP/2", "websocket" */
            protocol?: string;
            /**
             * The referer URL of the request, as defined in
             * [HTTP/1.1 Header Field
             * Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html).
             */
            referer?: string;
            /**
             * The IP address (IPv4 or IPv6) of the client that issued the HTTP
             * request. Examples: `"192.168.1.1"`, `"FE80::0202:B3FF:FE1E:8329"`.
             */
            remoteIp?: string;
            /** The request method. Examples: `"GET"`, `"HEAD"`, `"PUT"`, `"POST"`. */
            requestMethod?: string;
            /**
             * The size of the HTTP request message in bytes, including the request
             * headers and the request body.
             */
            requestSize?: string;
            /**
             * The scheme (http, https), the host name, the path, and the query
             * portion of the URL that was requested.
             * Example: `"http://example.com/some/info?color=red"`.
             */
            requestUrl?: string;
            /**
             * The size of the HTTP response message sent back to the client, in bytes,
             * including the response headers and the response body.
             */
            responseSize?: string;
            /**
             * The IP address (IPv4 or IPv6) of the origin server that the request was
             * sent to.
             */
            serverIp?: string;
            /**
             * The response code indicating the status of the response.
             * Examples: 200, 404.
             */
            status?: number;
            /**
             * The user agent sent by the client. Example:
             * `"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET
             * CLR 1.0.3705)"`.
             */
            userAgent?: string;
        }
        // tslint:disable-next-line:interface-name
        interface Instance {
            /** Output only. The time when the instance was created. */
            createTime?: string;
            /** The description of the instance (2048 characters or less). */
            description?: string;
            /**
             * Server-specified ETag for the instance resource to prevent simultaneous
             * updates from overwriting each other.
             */
            etag?: string;
            /**
             * File system shares on the instance.
             * For this version, only a single file share is supported.
             */
            fileShares?: FileShareConfig[];
            /** Resource labels to represent user provided metadata. */
            labels?: { [P in string]: string };
            /**
             * Output only. The resource name of the instance, in the format
             * projects/{project}/locations/{location}/instances/{instance}.
             */
            name?: string;
            /**
             * VPC networks to which the instance is connected.
             * For this version, only a single network is supported.
             */
            networks?: NetworkConfig[];
            /** Output only. The instance state. */
            state?: string;
            /** Output only. Additional information about the instance state, if available. */
            statusMessage?: string;
            /** The service tier of the instance. */
            tier?: string;
        }
        interface LinearBuckets {
            /**
             * The number of finite buckets. With the underflow and overflow buckets,
             * the total number of buckets is `num_finite_buckets` + 2.
             * See comments on `bucket_options` for details.
             */
            numFiniteBuckets?: number;
            /**
             * The i'th linear bucket covers the interval
             * [offset + (i-1) &#42; width, offset + i &#42; width)
             * where i ranges from 1 to num_finite_buckets, inclusive.
             */
            offset?: number;
            /**
             * The i'th linear bucket covers the interval
             * [offset + (i-1) &#42; width, offset + i &#42; width)
             * where i ranges from 1 to num_finite_buckets, inclusive.
             * Must be strictly positive.
             */
            width?: number;
        }
        interface ListInstancesResponse {
            /**
             * A list of instances in the project for the specified location.
             *
             * If the {location} value in the request is "-", the response contains a list
             * of instances from all locations. If any location is unreachable, the
             * response will only return instances in reachable locations and the
             * "unreachable" field will be populated with a list of unreachable locations.
             */
            instances?: Instance[];
            /**
             * The token you can use to retrieve the next page of results. Not returned
             * if there are no more results in the list.
             */
            nextPageToken?: string;
            /** Locations that could not be reached. */
            unreachable?: string[];
        }
        interface ListLocationsResponse {
            /** A list of locations that matches the specified filter in the request. */
            locations?: Location[];
            /** The standard List next-page token. */
            nextPageToken?: string;
        }
        interface ListOperationsResponse {
            /** The standard List next-page token. */
            nextPageToken?: string;
            /** A list of operations that matches the specified filter in the request. */
            operations?: Operation[];
        }
        interface Location {
            /**
             * The friendly name for this location, typically a nearby city name.
             * For example, "Tokyo".
             */
            displayName?: string;
            /**
             * Cross-service attributes for the location. For example
             *
             * {"cloud.googleapis.com/region": "us-east1"}
             */
            labels?: { [P in string]: string };
            /** The canonical id for this location. For example: `"us-east1"`. */
            locationId?: string;
            /**
             * Service-specific metadata. For example the available capacity at the given
             * location.
             */
            metadata?: { [P in string]: any };
            /**
             * Resource name for the location, which may vary between implementations.
             * For example: `"projects/example-project/locations/us-east1"`
             */
            name?: string;
        }
        interface LogEntry {
            /**
             * Optional. Information about the HTTP request associated with this
             * log entry, if applicable.
             */
            httpRequest?: HttpRequest;
            /**
             * A unique ID for the log entry used for deduplication. If omitted,
             * the implementation will generate one based on operation_id.
             */
            insertId?: string;
            /**
             * A set of user-defined (key, value) data that provides additional
             * information about the log entry.
             */
            labels?: { [P in string]: string };
            /**
             * Required. The log to which this log entry belongs. Examples: `"syslog"`,
             * `"book_log"`.
             */
            name?: string;
            /**
             * Optional. Information about an operation associated with the log entry, if
             * applicable.
             */
            operation?: LogEntryOperation;
            /**
             * The log entry payload, represented as a protocol buffer that is
             * expressed as a JSON object. The only accepted type currently is
             * AuditLog.
             */
            protoPayload?: { [P in string]: any };
            /**
             * The severity of the log entry. The default value is
             * `LogSeverity.DEFAULT`.
             */
            severity?: string;
            /**
             * Optional. Source code location information associated with the log entry,
             * if any.
             */
            sourceLocation?: LogEntrySourceLocation;
            /**
             * The log entry payload, represented as a structure that
             * is expressed as a JSON object.
             */
            structPayload?: { [P in string]: any };
            /** The log entry payload, represented as a Unicode string (UTF-8). */
            textPayload?: string;
            /**
             * The time the event described by the log entry occurred. If
             * omitted, defaults to operation start time.
             */
            timestamp?: string;
            /**
             * Optional. Resource name of the trace associated with the log entry, if any.
             * If this field contains a relative resource name, you can assume the name is
             * relative to `//tracing.googleapis.com`. Example:
             * `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`
             */
            trace?: string;
        }
        interface LogEntryOperation {
            /** Optional. Set this to True if this is the first log entry in the operation. */
            first?: boolean;
            /**
             * Optional. An arbitrary operation identifier. Log entries with the
             * same identifier are assumed to be part of the same operation.
             */
            id?: string;
            /** Optional. Set this to True if this is the last log entry in the operation. */
            last?: boolean;
            /**
             * Optional. An arbitrary producer identifier. The combination of
             * `id` and `producer` must be globally unique.  Examples for `producer`:
             * `"MyDivision.MyBigCompany.com"`, `"github.com/MyProject/MyApplication"`.
             */
            producer?: string;
        }
        interface LogEntrySourceLocation {
            /**
             * Optional. Source file name. Depending on the runtime environment, this
             * might be a simple name or a fully-qualified name.
             */
            file?: string;
            /**
             * Optional. Human-readable name of the function or method being invoked, with
             * optional context such as the class or package name. This information may be
             * used in contexts such as the logs viewer, where a file and line number are
             * less meaningful. The format can vary by language. For example:
             * `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function`
             * (Python).
             */
            function?: string;
            /**
             * Optional. Line within the source file. 1-based; 0 indicates no line number
             * available.
             */
            line?: string;
        }
        interface MetricValue {
            /** A boolean value. */
            boolValue?: boolean;
            /** A distribution value. */
            distributionValue?: Distribution;
            /** A double precision floating point value. */
            doubleValue?: number;
            /**
             * The end of the time period over which this metric value's measurement
             * applies.
             */
            endTime?: string;
            /** A signed 64-bit integer value. */
            int64Value?: string;
            /**
             * The labels describing the metric value.
             * See comments on google.api.servicecontrol.v1.Operation.labels for
             * the overriding relationship.
             * Note that this map must not contain monitored resource labels.
             */
            labels?: { [P in string]: string };
            /** A money value. */
            moneyValue?: Money;
            /**
             * The start of the time period over which this metric value's measurement
             * applies. The time period has different semantics for different metric
             * types (cumulative, delta, and gauge). See the metric definition
             * documentation in the service configuration for details.
             */
            startTime?: string;
            /** A text string value. */
            stringValue?: string;
        }
        interface MetricValueSet {
            /** The metric name defined in the service configuration. */
            metricName?: string;
            /** The values in this metric. */
            metricValues?: MetricValue[];
        }
        interface Money {
            /** The 3-letter currency code defined in ISO 4217. */
            currencyCode?: string;
            /**
             * Number of nano (10^-9) units of the amount.
             * The value must be between -999,999,999 and +999,999,999 inclusive.
             * If `units` is positive, `nanos` must be positive or zero.
             * If `units` is zero, `nanos` can be positive, zero, or negative.
             * If `units` is negative, `nanos` must be negative or zero.
             * For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
             */
            nanos?: number;
            /**
             * The whole units of the amount.
             * For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
             */
            units?: string;
        }
        interface NetworkConfig {
            /**
             * Output only. IPv4 addresses in the format
             * {octet 1}.{octet 2}.{octet 3}.{octet 4} or IPv6 addresses in the format
             * {block 1}:{block 2}:{block 3}:{block 4}:{block 5}:{block 6}:{block
             * 7}:{block 8}.
             */
            ipAddresses?: string[];
            /**
             * Internet protocol versions for which the instance has IP addresses
             * assigned. For this version, only MODE_IPV4 is supported.
             */
            modes?: string[];
            /**
             * The name of the Google Compute Engine
             * [VPC network](/compute/docs/networks-and-firewalls#networks) to which the
             * instance is connected.
             */
            network?: string;
            /**
             * A /29 CIDR block in one of the
             * [internal IP address
             * ranges](https://www.arin.net/knowledge/address_filters.html) that
             * identifies the range of IP addresses reserved for this instance. For
             * example, 10.0.0.0/29 or 192.168.0.0/29. The range you specify can't overlap
             * with either existing subnets or assigned IP address ranges for other Cloud
             * Filestore instances in the selected VPC network.
             */
            reservedIpRange?: string;
        }
        interface Operation {
            /**
             * If the value is `false`, it means the operation is still in progress.
             * If `true`, the operation is completed, and either `error` or `response` is
             * available.
             */
            done?: boolean;
            /** The error result of the operation in case of failure or cancellation. */
            error?: Status;
            /**
             * Service-specific metadata associated with the operation.  It typically
             * contains progress information and common metadata such as create time.
             * Some services might not provide such metadata.  Any method that returns a
             * long-running operation should document the metadata type, if any.
             */
            metadata?: { [P in string]: any };
            /**
             * The server-assigned name, which is only unique within the same service that
             * originally returns it. If you use the default HTTP mapping, the
             * `name` should be a resource name ending with `operations/{unique_id}`.
             */
            name?: string;
            /**
             * The normal response of the operation in case of success.  If the original
             * method returns no data on success, such as `Delete`, the response is
             * `google.protobuf.Empty`.  If the original method is standard
             * `Get`/`Create`/`Update`, the response should be the resource.  For other
             * methods, the response should have the type `XxxResponse`, where `Xxx`
             * is the original method name.  For example, if the original method name
             * is `TakeSnapshot()`, the inferred response type is
             * `TakeSnapshotResponse`.
             */
            response?: { [P in string]: any };
        }
        interface OperationMetadata {
            /** [Output only] API version used to start the operation. */
            apiVersion?: string;
            /**
             * [Output only] Identifies whether the user has requested cancellation
             * of the operation. Operations that have successfully been cancelled
             * have Operation.error value with a google.rpc.Status.code of 1,
             * corresponding to `Code.CANCELLED`.
             */
            cancelRequested?: boolean;
            /** [Output only] The time the operation was created. */
            createTime?: string;
            /** [Output only] The time the operation finished running. */
            endTime?: string;
            /** [Output only] Human-readable status of the operation, if any. */
            statusDetail?: string;
            /** [Output only] Server-defined resource path for the target of the operation. */
            target?: string;
            /** [Output only] Name of the verb executed by the operation. */
            verb?: string;
        }
        interface QuotaProperties {
            /** Quota mode for this operation. */
            quotaMode?: string;
        }
        interface ReportRequest {
            /**
             * Operations to be reported.
             *
             * Typically the service should report one operation per request.
             * Putting multiple operations into a single request is allowed, but should
             * be used only when multiple operations are natually available at the time
             * of the report.
             *
             * There is no limit on the number of operations in the same ReportRequest,
             * however the ReportRequest size should be no larger than 1MB. See
             * ReportResponse.report_errors for partial failure behavior.
             */
            operations?: GoogleApiServicecontrolV1Operation[];
            /**
             * Specifies which version of service config should be used to process the
             * request.
             *
             * If unspecified or no matching version can be found, the
             * latest one will be used.
             */
            serviceConfigId?: string;
            /**
             * The service name as specified in its service configuration. For example,
             * `"pubsub.googleapis.com"`.
             *
             * See
             * [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service)
             * for the definition of a service name.
             */
            serviceName?: string;
        }
        interface ResourceInfo {
            /**
             * The identifier of the parent of this resource instance.
             * Must be in one of the following formats:
             * - “projects/<project-id or project-number>”
             * - “folders/<folder-id>”
             * - “organizations/<organization-id>”
             */
            resourceContainer?: string;
            /**
             * The location of the resource. If not empty, the resource will be checked
             * against location policy. The value must be a valid zone, region or
             * multiregion. For example: "europe-west4" or "northamerica-northeast1-a"
             */
            resourceLocation?: string;
            /** Name of the resource. This is used for auditing purposes. */
            resourceName?: string;
        }
        interface Status {
            /** The status code, which should be an enum value of google.rpc.Code. */
            code?: number;
            /**
             * A list of messages that carry the error details.  There is a common set of
             * message types for APIs to use.
             */
            details?: Array<{ [P in string]: any }>;
            /**
             * A developer-facing error message, which should be in English. Any
             * user-facing error message should be localized and sent in the
             * google.rpc.Status.details field, or localized by the client.
             */
            message?: string;
        }
        interface TraceSpan {
            /**
             * A set of attributes on the span. You can have up to 32 attributes per
             * span.
             */
            attributes?: Attributes;
            /**
             * An optional number of child spans that were generated while this span
             * was active. If set, allows implementation to detect missing child spans.
             */
            childSpanCount?: number;
            /**
             * A description of the span's operation (up to 128 bytes).
             * Stackdriver Trace displays the description in the
             * Google Cloud Platform Console.
             * For example, the display name can be a qualified method name or a file name
             * and a line number where the operation is called. A best practice is to use
             * the same display name within an application and at the same call point.
             * This makes it easier to correlate spans in different traces.
             */
            displayName?: TruncatableString;
            /**
             * The end time of the span. On the client side, this is the time kept by
             * the local machine where the span execution ends. On the server side, this
             * is the time when the server application handler stops running.
             */
            endTime?: string;
            /**
             * The resource name of the span in the following format:
             *
             * projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project;
             * it is a 32-character hexadecimal encoding of a 16-byte array.
             *
             * [SPAN_ID] is a unique identifier for a span within a trace; it
             * is a 16-character hexadecimal encoding of an 8-byte array.
             */
            name?: string;
            /**
             * The [SPAN_ID] of this span's parent span. If this is a root span,
             * then this field must be empty.
             */
            parentSpanId?: string;
            /**
             * (Optional) Set this parameter to indicate whether this span is in
             * the same process as its parent. If you do not set this parameter,
             * Stackdriver Trace is unable to take advantage of this helpful
             * information.
             */
            sameProcessAsParentSpan?: boolean;
            /** The [SPAN_ID] portion of the span's resource name. */
            spanId?: string;
            /**
             * Distinguishes between spans generated in a particular context. For example,
             * two spans with the same name may be distinguished using `CLIENT` (caller)
             * and `SERVER` (callee) to identify an RPC call.
             */
            spanKind?: string;
            /**
             * The start time of the span. On the client side, this is the time kept by
             * the local machine where the span execution starts. On the server side, this
             * is the time when the server's application handler starts running.
             */
            startTime?: string;
            /** An optional final status for this span. */
            status?: Status;
        }
        interface TruncatableString {
            /**
             * The number of bytes removed from the original string. If this
             * value is 0, then the string was not shortened.
             */
            truncatedByteCount?: number;
            /**
             * The shortened string. For example, if the original string is 500
             * bytes long and the limit of the string is 128 bytes, then
             * `value` contains the first 128 bytes of the 500-byte string.
             *
             * Truncation always happens on a UTF8 character boundary. If there
             * are multi-byte characters in the string, then the length of the
             * shortened string might be less than the size limit.
             */
            value?: string;
        }
        // tslint:disable-next-line:interface-name
        interface InstancesResource {
            /** Creates an instance. */
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Required. The name of the instance to create.
                 * The name must be unique for the specified project and location.
                 */
                instanceId?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The instance's project and location, in the format
                 * projects/{project_id}/locations/{location}. In Cloud Filestore,
                 * locations map to GCP zones, for example &#42;&#42;us-west1-b&#42;&#42;.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Instance;
            }): Request<Operation>;
            create(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /**
                 * Required. The name of the instance to create.
                 * The name must be unique for the specified project and location.
                 */
                instanceId?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /**
                 * Required. The instance's project and location, in the format
                 * projects/{project_id}/locations/{location}. In Cloud Filestore,
                 * locations map to GCP zones, for example &#42;&#42;us-west1-b&#42;&#42;.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Instance): Request<Operation>;
            /** Deletes an instance. */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The instance resource name, in the format
                 * projects/{project_id}/locations/{location}/instances/{instance_id}
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Operation>;
            /** Gets the details of a specific instance. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Required. The instance resource name, in the format
                 * projects/{project_id}/locations/{location}/instances/{instance_id}.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Instance>;
            /**
             * Lists all instances in a project for either a specified location
             * or for all locations.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** List filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Sort results. Supported values are "name", "name desc" or "" (unsorted). */
                orderBy?: string;
                /** The maximum number of items to return. */
                pageSize?: number;
                /**
                 * The next_page_token value to use if there are additional
                 * results to retrieve for this list request.
                 */
                pageToken?: string;
                /**
                 * Required. The project and location for which to retrieve instance information,
                 * in the format projects/{project_id}/locations/{location}. In Cloud
                 * Filestore, locations map to GCP zones, for example &#42;&#42;us-west1-b&#42;&#42;. To
                 * retrieve instance information for all locations, use "-" for the {location}
                 * value.
                 */
                parent: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListInstancesResponse>;
            /** Updates the settings of a specific instance. */
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Output only. The resource name of the instance, in the format
                 * projects/{project}/locations/{location}/instances/{instance}.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Mask of fields to update.  At least one path must be supplied in this
                 * field.  The elements of the repeated paths field may only include these
                 * fields:
                 *
                 * &#42; "description"
                 * &#42; "file_shares"
                 * &#42; "labels"
                 */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: Instance;
            }): Request<Operation>;
            patch(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /**
                 * Output only. The resource name of the instance, in the format
                 * projects/{project}/locations/{location}/instances/{instance}.
                 */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /**
                 * Mask of fields to update.  At least one path must be supplied in this
                 * field.  The elements of the repeated paths field may only include these
                 * fields:
                 *
                 * &#42; "description"
                 * &#42; "file_shares"
                 * &#42; "labels"
                 */
                updateMask?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: Instance): Request<Operation>;
        }
        interface OperationsResource {
            /**
             * Starts asynchronous cancellation on a long-running operation.  The server
             * makes a best effort to cancel the operation, but success is not
             * guaranteed.  If the server doesn't support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use
             * Operations.GetOperation or
             * other methods to check whether the cancellation succeeded or whether the
             * operation completed despite cancellation. On successful cancellation,
             * the operation is not deleted; instead, it becomes an operation with
             * an Operation.error value with a google.rpc.Status.code of 1,
             * corresponding to `Code.CANCELLED`.
             */
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
                /** Request body */
                resource: CancelOperationRequest;
            }): Request<{}>;
            cancel(request: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be cancelled. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            },
            body: CancelOperationRequest): Request<{}>;
            /**
             * Deletes a long-running operation. This method indicates that the client is
             * no longer interested in the operation result. It does not cancel the
             * operation. If the server doesn't support this method, it returns
             * `google.rpc.Code.UNIMPLEMENTED`.
             */
            delete(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource to be deleted. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<{}>;
            /**
             * Gets the latest state of a long-running operation.  Clients can use this
             * method to poll the operation result at intervals as recommended by the API
             * service.
             */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Operation>;
            /**
             * Lists operations that match the specified filter in the request. If the
             * server doesn't support this method, it returns `UNIMPLEMENTED`.
             *
             * NOTE: the `name` binding allows API services to override the binding
             * to use different resource name schemes, such as `users/&#42;/operations`. To
             * override the binding, API services can add a binding such as
             * `"/v1/{name=users/&#42;}/operations"` to their service configuration.
             * For backwards compatibility, the default name includes the operations
             * collection id, however overriding users must ensure the name binding
             * is the parent resource, without the operations collection id.
             */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The name of the operation's parent resource. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListOperationsResponse>;
        }
        interface LocationsResource {
            /** Gets information about a location. */
            get(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** Resource name for the location. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<Location>;
            /** Lists information about the supported locations for this service. */
            list(request?: {
                /** V1 error format. */
                "$.xgafv"?: string;
                /** OAuth access token. */
                access_token?: string;
                /** Data format for response. */
                alt?: string;
                /** JSONP */
                callback?: string;
                /** Selector specifying which fields to include in a partial response. */
                fields?: string;
                /** The standard list filter. */
                filter?: string;
                /**
                 * If true, the returned list will include locations which are not yet
                 * revealed.
                 */
                includeUnrevealedLocations?: boolean;
                /** API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token. */
                key?: string;
                /** The resource that owns the locations collection, if applicable. */
                name: string;
                /** OAuth 2.0 token for the current user. */
                oauth_token?: string;
                /** The standard list page size. */
                pageSize?: number;
                /** The standard list page token. */
                pageToken?: string;
                /** Returns response with indentations and line breaks. */
                prettyPrint?: boolean;
                /** Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. */
                quotaUser?: string;
                /** Upload protocol for media (e.g. "raw", "multipart"). */
                upload_protocol?: string;
                /** Legacy upload protocol for media (e.g. "media", "multipart"). */
                uploadType?: string;
            }): Request<ListLocationsResponse>;
            instances: InstancesResource;
            operations: OperationsResource;
        }
        interface ProjectsResource {
            locations: LocationsResource;
        }

        const projects: ProjectsResource;
    }
}
